* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.io.DirectoryScanner
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 3873
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:40:56.206 [logback-2] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:40:56.214 [logback-2] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:40:56.215 [logback-2] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:40:56.246 [logback-2] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.lts.io.DirectoryScanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 855
* Using seed 1710258052104
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 170 / 855
[Progress:>                             0%] [Cov:============>                      37%][Progress:>                             2%] [Cov:=============>                     39%][Progress:>                             3%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:===============>                   44%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:=================>                 50%][Progress:=>                            5%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:======================>            64%][Progress:==>                           7%] [Cov:======================>            65%][Progress:==>                           7%] [Cov:======================>            65%][Progress:==>                           7%] [Cov:======================>            65%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         73%][Progress:==>                           8%] [Cov:=========================>         74%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        76%][Progress:==>                           9%] [Cov:==========================>        76%][Progress:==>                           9%] [Cov:==========================>        76%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:============================>      82%][Progress:===>                          13%] [Cov:============================>      82%][Progress:===>                          13%] [Cov:============================>      82%][Progress:====>                         14%] [Cov:============================>      82%][Progress:====>                         14%] [Cov:============================>      82%][Progress:====>                         14%] [Cov:============================>      82%][Progress:====>                         15%] [Cov:============================>      82%][Progress:====>                         15%] [Cov:============================>      82%][Progress:====>                         15%] [Cov:============================>      82%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     84%][Progress:=====>                        17%] [Cov:=============================>     84%][Progress:=====>                        17%] [Cov:=============================>     84%][Progress:=====>                        17%] [Cov:=============================>     84%][Progress:=====>                        18%] [Cov:=============================>     84%][Progress:=====>                        18%] [Cov:=============================>     84%][Progress:=====>                        18%] [Cov:=============================>     85%][Progress:=====>                        18%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   90%][Progress:============>                 43%] [Cov:===============================>   90%][Progress:============>                 43%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%]
* Search finished after 101s and 837 generations, 232875 statements, best individual has fitness: 51.0
* Generated before the refinement 51 tests with total length 180
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\Jane Doe");
        directoryScanner.scan();
        List<String> notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
        assertEquals(notIncludedDirectories.size(), 3);
        assertTrue(notIncludedDirectories.contains("Downloads"));
        assertTrue(notIncludedDirectories.contains("Documents"));
        assertTrue(notIncludedDirectories.contains("Pictures"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\Jane Doe") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: List<String> notIncludedDirectories = directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
statement is: assertEquals(notIncludedDirectories.size(), 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(notIncludedDirectories.size(), 3) target is:  method is: assertEquals(<unknown>,int)
statement is: assertTrue(notIncludedDirectories.contains("Downloads")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(notIncludedDirectories.contains("Downloads")) target is:  method is: assertTrue(<unknown>)
statement is: assertTrue(notIncludedDirectories.contains("Documents")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(notIncludedDirectories.contains("Documents")) target is:  method is: assertTrue(<unknown>)
statement is: assertTrue(notIncludedDirectories.contains("Pictures")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(notIncludedDirectories.contains("Pictures")) target is:  method is: assertTrue(<unknown>)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\Jane Doe";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File basedir = directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents");
        directoryScanner.setIncludes(new String[]{ "**/*.txt" });
        directoryScanner.setExcludes(new String[]{ "*.md", "*.docx" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
statement is: directoryScanner.setIncludes(new String[]{ "**/*.txt" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "**/*.txt" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
statement is: directoryScanner.setExcludes(new String[]{ "*.md", "*.docx" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "*.md", "*.docx" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na")
test data is: DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        DirectoryScanner.matchPatternStart("*/#f", "1234567890-=!@#$%^&*()_+[]{}:;\'<>?,./~`\\\"|\"");
    }
}
statement is: // Improved test data
DirectoryScanner.matchPatternStart("*/#f", "1234567890-=!@#$%^&*()_+[]{}:;\'<>?,./~`\\\"|\""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
DirectoryScanner.matchPatternStart("*/#f", "1234567890-=!@#$%^&*()_+[]{}:;\'<>?,./~`\\\"|\"") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*/#f";
String string = "1234567890-=!@#$%^&*()_+[]{}:;'<>?,./~`\\\"|\"";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("zu#*E", "z/")
test data is: DirectoryScanner.matchPatternStart("zu#*E", "z/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("zu\\*E", "z/");
    }
}
statement is: DirectoryScanner.matchPatternStart("zu\\*E", "z/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("zu\\*E", "z/") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "zu\\*E";
String string = "z/";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*", "**/CVS/**")
test data is: DirectoryScanner.matchPatternStart("*", "**/CVS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");
    }
}
statement is: DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/CVS/**";
String string = "**/CVS/**";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("*/CV/**", "*{~")
test data is: DirectoryScanner.matchPath("*/CV/**", "*{~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("*/CV/images/**", "*.png");
    }
}
statement is: DirectoryScanner.matchPath("*/CV/images/**", "*.png"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("*/CV/images/**", "*.png") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*/CV/images/**";
String string = "*.png";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home")
test data is: DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/tmp/*", "/var/log/system.log");
    }
}
statement is: DirectoryScanner.matchPath("/tmp/*", "/var/log/system.log"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/tmp/*", "/var/log/system.log") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/tmp/*";
String string = "/var/log/system.log";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("//**", "/")
test data is: DirectoryScanner.matchPath("//**", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/*", "C:\\Windows");
    }
}
statement is: DirectoryScanner.matchPath("/*", "C:\\Windows"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/*", "C:\\Windows") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/*";
String string = "C:\\Windows";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/", "/**")
test data is: DirectoryScanner.matchPath("/", "/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/", "/*");
    }
}
statement is: DirectoryScanner.matchPath("/", "/*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/", "/*") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/";
String string = "/*";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("*~")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for DirectoryScanner class
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.isExcluded("example_file.txt");
        directoryScanner.isExcluded("another_example_file.java");
    }
}
statement is: // Improved test data for DirectoryScanner class
DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.isExcluded("example_file.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("example_file.txt") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("another_example_file.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("another_example_file.java") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "example_file.txt";
directoryScanner.isExcluded(string);
String string = "another_example_file.java";
directoryScanner.isExcluded(string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{")
test data is: DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/VS/*files*", "This is a test file 123.");
    }
}
statement is: DirectoryScanner.matchPath("**/VS/*files*", "This is a test file 123."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/VS/*files*", "This is a test file 123.") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/VS/*files*";
String string = "This is a test file 123.";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "/home")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*`[XZAs}WN$>", false)
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("", "");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.addDefaultExcludes();
        directoryScanner.scan();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
        directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "/home"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "/home") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "";
String string = "";
MockFile mockFile = new MockFile(string, string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
String string = "/home";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "*`[XZAs}WN$>";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getExcludedDirectories();

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA")
test data is: DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("A-Z0-9.-_", "Lq/MB?G|6a)InXL>aA");
    }
}
statement is: DirectoryScanner.matchPatternStart("A-Z0-9.-_", "Lq/MB?G|6a)InXL>aA"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("A-Z0-9.-_", "Lq/MB?G|6a)InXL>aA") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "A-Z0-9.-_";
String string = "Lq/MB?G|6a)InXL>aA";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**")
test data is: DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/home/user/VS/project1", "/home/user/VS/project1/src");
    }
}
statement is: DirectoryScanner.matchPath("/home/user/VS/project1", "/home/user/VS/project1/src"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/home/user/VS/project1", "/home/user/VS/project1/src") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/home/user/VS/project1";
String string = "/home/user/VS/project1/src";
DirectoryScanner.matchPath(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R")
test data is: DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("^[A-Za-z0-9_]+$", "username123");
        DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123");
        DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!");
        DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#");
        DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#$%^&*()_+");
    }
}
statement is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username123") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#$%^&*()_+"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#$%^&*()_+") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "^[A-Za-z0-9_]+$";
String string = "username123";
DirectoryScanner.match(string, string);
String string = "^[A-Za-z0-9_]+$";
String string = "username__123";
DirectoryScanner.match(string, string);
String string = "^[A-Za-z0-9_]+$";
String string = "username__123!";
DirectoryScanner.match(string, string);
String string = "^[A-Za-z0-9_]+$";
String string = "username__123!@#";
DirectoryScanner.match(string, string);
String string = "^[A-Za-z0-9_]+$";
String string = "username__123!@#$%^&*()_+";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**", "")
test data is: DirectoryScanner.match("**", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**", "*.txt");
    }
}
statement is: DirectoryScanner.match("**", "*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**", "*.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**";
String string = "*.txt";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?")
test data is: DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("^[0-9a-zA-Z][0-9a-zA-Z_]*$", "exampleFile.txt");
    }
}
statement is: DirectoryScanner.matchPath("^[0-9a-zA-Z][0-9a-zA-Z_]*$", "exampleFile.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("^[0-9a-zA-Z][0-9a-zA-Z_]*$", "exampleFile.txt") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "^[0-9a-zA-Z][0-9a-zA-Z_]*$";
String string = "exampleFile.txt";
DirectoryScanner.matchPath(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*?", "*")
test data is: DirectoryScanner.matchPatternStart("*?", "*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("*", "*.*");
    }
}
statement is: DirectoryScanner.matchPatternStart("*", "*.*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("*", "*.*") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*";
String string = "*.*";
DirectoryScanner.matchPatternStart(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/CVS/**", "**/CVS/**")
test data is: DirectoryScanner.match("**/CVS/**", "**/CVS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/*.java", "**/*");
    }
}
statement is: DirectoryScanner.match("**/*.java", "**/*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/*.java", "**/*") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*.java";
String string = "**/*";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/#*", "D~pY;2x#x5L]:DM")
test data is: DirectoryScanner.match("**/#*", "D~pY;2x#x5L]:DM");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");
    }
}
statement is: DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/#*";
String string = "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**")
test data is: DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**");
    }
}
statement is: DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/Users/*/Documents/**";
String string = "/Users/*/Documents/**";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setIncludes(new String[]{ "*.txt" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setIncludes(new String[]{ "*.txt" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "*.txt" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@dc35ea65 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f168730 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed3b1fa4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "Tq@if9"
statement is: org.evosuite.testcase.statements.AssignmentStatement@5449abdb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@1e921233 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "IO error scanning directory "
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[1] = "Tq@if9";
stringArray[2] = "";
stringArray[3] = "IO error scanning directory ";
directoryScanner.setIncludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[4];
        stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
        stringArray[1] = "Tq@if9";
        stringArray[2] = "";
        stringArray[3] = "IO error scanning directory ";
        directoryScanner.setIncludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.SimpleFileFilter" Ct is: stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Tq@if9", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Tq@if9" Ct is: stringArray[1] = "Tq@if9"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[2] = ""
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "IO error scanning directory ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"IO error scanning directory " Ct is: stringArray[3] = "IO error scanning directory "
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
String string = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[0] = string;
String string = "Tq@if9";
stringArray[1] = string;
String string = "";
stringArray[2] = string;
String string = "IO error scanning directory ";
stringArray[3] = string;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@3db7152f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3e1779a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "}166c0K:#T|CjaAO/"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "**/*.txt";
        directoryScanner.setIncludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.txt" Ct is: stringArray[0] = "**/*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "**/*.txt";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setExcludes(new String[]{ "**/*.java", "**/*.class" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setExcludes(new String[]{ "**/*.java", "**/*.class" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "**/*.java", "**/*.class" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@3b3a70b1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7c58a7fb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*/*>#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@c78a1f87 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ","
statement is: org.evosuite.testcase.statements.AssignmentStatement@1a838dbf type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "*/*>#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e7e70797 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "*/*>#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a487f10b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "*/*>#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ffd9c5b1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "*/*>#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@7d5faa89 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "*/*>#"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*/*>#";
stringArray[1] = ",";
stringArray[2] = "*/*>#";
stringArray[3] = "*/*>#";
stringArray[4] = "*/*>#";
stringArray[5] = "*/*>#";
stringArray[6] = "*/*>#";
directoryScanner.setExcludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[7];
        stringArray[0] = "*.{txt,java,class,xml,properties,ini}";
        stringArray[1] = ",";
        stringArray[2] = "**/*.{txt,java,class,xml,properties,ini}";
        stringArray[3] = "**/*.{txt,java,class,xml,properties,ini}";
        stringArray[4] = "**/*.{txt,java,class,xml,properties,ini}";
        stringArray[5] = "**/*.{txt,java,class,xml,properties,ini}";
        stringArray[6] = "**/*.{txt,java,class,xml,properties,ini}";
        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "*.{txt,java,class,xml,properties,ini}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.{txt,java,class,xml,properties,ini}" Ct is: stringArray[0] = "*.{txt,java,class,xml,properties,ini}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = ",", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"," Ct is: stringArray[1] = ","
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "**/*.{txt,java,class,xml,properties,ini}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.{txt,java,class,xml,properties,ini}" Ct is: stringArray[2] = "**/*.{txt,java,class,xml,properties,ini}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "**/*.{txt,java,class,xml,properties,ini}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.{txt,java,class,xml,properties,ini}" Ct is: stringArray[3] = "**/*.{txt,java,class,xml,properties,ini}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "**/*.{txt,java,class,xml,properties,ini}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.{txt,java,class,xml,properties,ini}" Ct is: stringArray[4] = "**/*.{txt,java,class,xml,properties,ini}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "**/*.{txt,java,class,xml,properties,ini}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.{txt,java,class,xml,properties,ini}" Ct is: stringArray[5] = "**/*.{txt,java,class,xml,properties,ini}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "**/*.{txt,java,class,xml,properties,ini}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.{txt,java,class,xml,properties,ini}" Ct is: stringArray[6] = "**/*.{txt,java,class,xml,properties,ini}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
String string = "*.{txt,java,class,xml,properties,ini}";
stringArray[0] = string;
String string = ",";
stringArray[1] = string;
String string = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[2] = string;
String string = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[3] = string;
String string = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[4] = string;
String string = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[5] = string;
String string = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[6] = string;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@863902db type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@44fb8b80 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "**/CVS/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@3761c33b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "KRwA&R`ZU,\"'/"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "KRwA&R`ZU,\"'/";
directoryScanner.setExcludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[7];
        stringArray[0] = "**/CVS/**";
        stringArray[1] = "!important.txt";
        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/CVS/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/CVS/**" Ct is: stringArray[0] = "**/CVS/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "!important.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"!important.txt" Ct is: stringArray[1] = "!important.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
String string = "**/CVS/**";
stringArray[0] = string;
String string = "!important.txt";
stringArray[1] = string;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setRootPath("C:\\Users\\John Doe\\Documents");
        directoryScanner.setFilter(new FileExtensionFilter(".txt"));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setRootPath("C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setRootPath("C:\\Users\\John Doe\\Documents") target is: directoryScanner method is: setRootPath(java.lang.String)
statement is: directoryScanner.setFilter(new FileExtensionFilter(".txt")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setFilter(new FileExtensionFilter(".txt")) target is: directoryScanner method is: setFilter(FileExtensionFilter)
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/tmp/hme0")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/tmp/hme0");// change basedir to a more descriptive path, such as "/home/user/Documents"

        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/tmp/hme0")// change basedir to a more descriptive path, such as "/home/user/Documents"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/tmp/hme0")// change basedir to a more descriptive path, such as "/home/user/Documents"
 target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/tmp/hme0";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        File basedir = new File("C:/Temp/CVS");
        directoryScanner.setBasedir(basedir);
        MockFile mockCVSFile = new MockFile("CVS/config.xml", "<?xml version='1.0'?><configuration></configuration>".getBytes());
        directoryScanner.addIncludedFile(mockCVSFile);
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: File basedir = new File("C:/Temp/CVS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(basedir) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile mockCVSFile = new MockFile("CVS/config.xml", "<?xml version='1.0'?><configuration></configuration>".getBytes()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addIncludedFile(mockCVSFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addIncludedFile(mockCVSFile) target is: directoryScanner method is: addIncludedFile(MockFile)
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = null;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\John Doe\\Documents");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe\\Documents";
MockFile mockFile = new MockFile(string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        directoryScanner = new DirectoryScanner();
        mockFile = new MockFile("C:\\MyProject", "src");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        assertEquals(4, directoryScanner.getExcludedFiles().size());// 4 files excluded from the scan

        assertEquals(2, directoryScanner.getNotIncludedFiles().size());// 2 files not included in the scan }}

    }
}
statement is: directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: mockFile = new MockFile("C:\\MyProject", "src"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
statement is: assertEquals(4, directoryScanner.getExcludedFiles().size())// 4 files excluded from the scan
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(4, directoryScanner.getExcludedFiles().size())// 4 files excluded from the scan
 target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(2, directoryScanner.getNotIncludedFiles().size())// 2 files not included in the scan }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, directoryScanner.getNotIncludedFiles().size())// 2 files not included in the scan }}
 target is:  method is: assertEquals(int,<unknown>)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*`[XZAs}WN$>", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("test_file.txt", "This is a test file.");
        directoryScanner.setBasedir("/home/*");
        directoryScanner.scan();
        directoryScanner.scandir(mockFile, "*", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("test_file.txt", "This is a test file."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/*") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scandir(mockFile, "*", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "*", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "test_file.txt";
String string = "This is a test file.";
MockFile mockFile = new MockFile(string, string);
String string = "/home/*";
directoryScanner.setBasedir(string);
directoryScanner.scan();
String string = "*";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h")
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("/Users/username/Documents", "1234567890");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
        List<File> excludedFiles = directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("/Users/username/Documents", "1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h") target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: List<File> excludedFiles = directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/Users/username/Documents";
String string = "1234567890";
MockFile mockFile = new MockFile(string, string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "#pX1acYXCJ:(";
String string = "/F*zF*&>.+Cl0h";
MockFile.createTempFile(string, string);
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\path\\to\\file");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\path\\to\\file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\path\\to\\file";
MockFile mockFile = new MockFile(string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/he", "/he")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*`xXZAs}WN$>", false)
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(mockFile, "*`xXZAs}WN$>", false);
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\Jane Doe", "Documents");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        MockFile.createTempFile("C:\\Users\\Jane Doe\\Documents", "example1.txt");
        directoryScanner.scandir(mockFile, "example2*", false);
        directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\Jane Doe", "Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: MockFile.createTempFile("C:\\Users\\Jane Doe\\Documents", "example1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:\\Users\\Jane Doe\\Documents", "example1.txt") target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: directoryScanner.scandir(mockFile, "example2*", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "example2*", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\Jane Doe";
String string = "Documents";
MockFile mockFile = new MockFile(string, string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "C:\\Users\\Jane Doe\\Documents";
String string = "example1.txt";
MockFile.createTempFile(string, string);
String string = "example2*";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedFiles();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/**", "/**")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: MockFile mockFile = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("file1.txt", "");
        MockFile.createTempFile("file1.txt", "/**");
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getNotIncludedFiles();
    }
}
statement is: MockFile mockFile = new MockFile("file1.txt", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("file1.txt", "/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("file1.txt", "/**") target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: String string = "file1.txt";
String string = "";
MockFile mockFile = new MockFile(string, string);
String string = "file1.txt";
String string = "/**";
MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("/path/to/test/data");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("/path/to/test/data"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/test/data";
MockFile mockFile = new MockFile(string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*`[XZAs}WN$>", false)
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("", "");
        directoryScanner.setBasedir("/home");
        directoryScanner.scan();
        directoryScanner.scandir(mockFile, "my_project", false);
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scandir(mockFile, "my_project", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "my_project", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "";
String string = "";
MockFile mockFile = new MockFile(string, string);
String string = "/home";
directoryScanner.setBasedir(string);
directoryScanner.scan();
String string = "my_project";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\testuser", "My Documents");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\testuser", "My Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\testuser";
String string = "My Documents";
MockFile mockFile = new MockFile(string, string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@1165fe04 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d1267089 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[]{ "**/*.txt", "**/*.xml", "**/*.java", "**/*.css" };
        directoryScanner.excludes = stringArray;
        directoryScanner.addDefaultExcludes();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "**/*.txt", "**/*.xml", "**/*.java", "**/*.css" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "**/*.txt", "**/*.xml", "**/*.java", "**/*.css" } Elements: ["**/*.txt", "**/*.xml", "**/*.java", "**/*.css"]
lengths: [4] []
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile(", [")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, (String) null, false)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile(", [");
directoryScanner.scandir(mockFile, (String) null, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\User\\Desktop");
        directoryScanner.scandir(mockFile, ((String) (null)), false);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\User\\Desktop"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scandir(mockFile, ((String) (null)), false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, ((String) (null)), false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\User\\Desktop";
MockFile mockFile = new MockFile(string);
boolean _boolean = false;
boolean _boolean = null;
directoryScanner.scandir(mockFile, (String) _boolean, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("*7")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*7");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\John Doe\\Documents\\Work\\Project1");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.couldHoldIncluded("*.java");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\John Doe\\Documents\\Work\\Project1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.couldHoldIncluded("*.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("*.java") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe\\Documents\\Work\\Project1";
MockFile mockFile = new MockFile(string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "*.java";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\path\\to\\directory");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.couldHoldIncluded("file1.txt");
        directoryScanner.couldHoldIncluded("file2.txt");
        directoryScanner.couldNotHoldExcluded("file3.txt");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\path\\to\\directory"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.couldHoldIncluded("file1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("file1.txt") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.couldHoldIncluded("file2.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("file2.txt") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.couldNotHoldExcluded("file3.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldNotHoldExcluded("file3.txt") target is: directoryScanner method is: couldNotHoldExcluded(java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\path\\to\\directory";
MockFile mockFile = new MockFile(string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "file1.txt";
directoryScanner.couldHoldIncluded(string);
String string = "file2.txt";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("/home/user/files", "");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("/home/user/files", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/user/files";
String string = "";
MockFile mockFile = new MockFile(string, string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("zu#*E")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        mockFile = new MockFile("/path/to/a/file");
        directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(new File("/path/to/a/directory"));
    }
}
statement is: mockFile = new MockFile("/path/to/a/file"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.setBasedir(new File("/path/to/a/directory")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(new File("/path/to/a/directory")) target is: directoryScanner method is: setBasedir(File)
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("zu#*E")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: mkdirs()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean mkdirs = mockFile.mkdirs()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
mockFile.mkdirs();
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("my_test_directory");
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (mockFile)));
        mockFile.createDirectory();
        directoryScanner.scan();
        List<String>[] expected;
        assertEquals(expected, directoryScanner.getNotIncludedDirectories());
    }
}
statement is: MockFile mockFile = new MockFile("my_test_directory"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 1, type com.lts.io.DirectoryScannerindex is: 2
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: mockFile.createDirectory(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockFile.createDirectory() target is: mockFile method is: createDirectory()
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 1, type com.lts.io.DirectoryScannerindex is: 2
Matched Method is: scan()V
statement is: List<String>[] expected, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: assertEquals(expected, directoryScanner.getNotIncludedDirectories()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expected, directoryScanner.getNotIncludedDirectories()) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: String string = "my_test_directory";
MockFile mockFile = new MockFile(string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@529d7ec3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b92a4973 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "G}PZujh\"UmyG"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f7109750 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "G}PZujh\"UmyG"
statement is: org.evosuite.testcase.statements.AssignmentStatement@9ddd55d5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@6ba0a26a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "G}PZujh\"UmyG"
statement is: org.evosuite.testcase.statements.AssignmentStatement@8dc2be4a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "G}PZujh\"UmyG"
statement is: org.evosuite.testcase.statements.AssignmentStatement@71c92c4a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("UKE4C+!fSeD9")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("UKE4C+!fSeD9");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[5];
        stringArray[0] = "G}PZujh\"UmyG";
        stringArray[1] = "G}PZujh\"UmyG";
        stringArray[2] = "";
        stringArray[3] = "G}PZujh\"UmyG";
        stringArray[4] = "G}PZujh\"UmyG";
        directoryScanner.includes = stringArray;
        directoryScanner.isIncluded("This is a test string.");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "G}PZujh\"UmyG", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"G}PZujh\"UmyG" Ct is: stringArray[0] = "G}PZujh\"UmyG"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "G}PZujh\"UmyG", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"G}PZujh\"UmyG" Ct is: stringArray[1] = "G}PZujh\"UmyG"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[2] = ""
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "G}PZujh\"UmyG", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"G}PZujh\"UmyG" Ct is: stringArray[3] = "G}PZujh\"UmyG"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "G}PZujh\"UmyG", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"G}PZujh\"UmyG" Ct is: stringArray[4] = "G}PZujh\"UmyG"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.isIncluded("This is a test string."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("This is a test string.") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
String string = "G}PZujh\"UmyG";
stringArray[0] = string;
String string = "G}PZujh\"UmyG";
stringArray[1] = string;
String string = "";
stringArray[2] = string;
String string = "G}PZujh\"UmyG";
stringArray[3] = string;
String string = "G}PZujh\"UmyG";
stringArray[4] = string;
String string = "This is a test string.";
directoryScanner.isIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@fd715676 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9f0a9334 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "G}PZujh\"UmyG"
statement is: org.evosuite.testcase.statements.AssignmentStatement@bd184f6b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("G}PZujh\"UmyG")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("G}PZujh\"UmyG");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[5];
        stringArray[0] = "C:\\Users\\John Doe\\Documents";
        directoryScanner.includes = stringArray;
        directoryScanner.isIncluded("C:\\Users\\John Doe\\Documents");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\Users\\John Doe\\Documents", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\John Doe\\Documents" Ct is: stringArray[0] = "C:\\Users\\John Doe\\Documents"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.isIncluded("C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("C:\\Users\\John Doe\\Documents") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
String string = "C:\\Users\\John Doe\\Documents";
stringArray[0] = string;
String string = "C:\\Users\\John Doe\\Documents";
directoryScanner.isIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: slowScan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.slowScan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        directoryScanner.slowScan("C:\\Users\\John Doe", "*.txt");
    }
}
statement is: directoryScanner.slowScan("C:\\Users\\John Doe", "*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.slowScan("C:\\Users\\John Doe", "*.txt") target is: directoryScanner method is: slowScan(java.lang.String,java.lang.String)
* test suite isTestSuite: 99
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");
Test 3: 
DirectoryScanner.matchPatternStart("zu#*E", "z/");
Test 4: 
DirectoryScanner.matchPatternStart("*", "**/CVS/**");
Test 5: 
DirectoryScanner.matchPath("*/CV/**", "*{~");
Test 6: 
DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");
Test 7: 
DirectoryScanner.matchPath("//**", "/");
Test 8: 
DirectoryScanner.matchPath("/", "/**");
Test 9: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 10: 
DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /*`[XZAs}WN$>**_/CVS
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 12: 
DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");
Test 13: 
DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");
Test 14: 
DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");
Test 15: 
DirectoryScanner.match("**", "");
Test 16: 
DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");
Test 17: 
DirectoryScanner.matchPatternStart("*?", "*");
Test 18: 
DirectoryScanner.match("**/CVS/**", "**/CVS/**");
Test 19: 
DirectoryScanner.match("**/#*", "D~pY;2x#x5L]:DM");
Test 20: 
DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[1] = "Tq@if9";
stringArray[2] = "";
stringArray[3] = "IO error scanning directory ";
directoryScanner.setIncludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(stringArray);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*/*>#";
stringArray[1] = ",";
stringArray[2] = "*/*>#";
stringArray[3] = "*/*>#";
stringArray[4] = "*/*>#";
stringArray[5] = "*/*>#";
stringArray[6] = "*/*>#";
directoryScanner.setExcludes(stringArray);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "KRwA&R`ZU,\"'/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", true);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(mockFile, "*`xXZAs}WN$>", false);
directoryScanner.getIncludedFiles();
Test 36: 
MockFile mockFile = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile(", [");
try { 
  directoryScanner.scandir(mockFile, (String) null, false);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/, [
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*7");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 45: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 46: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
mockFile.mkdirs();
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("UKE4C+!fSeD9");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("G}PZujh\"UmyG");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJane Doe");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 53: 
DirectoryScanner.matchPatternStart("*/#f", "1234567890-=!@#$%^&*()_+[]{}:;'<>?,./~`\"|\"");

Test 54: 
DirectoryScanner.matchPatternStart("zu*E", "z/");

Test 55: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");

Test 56: 
DirectoryScanner.matchPath("*/CV/images/**", "*.png");

Test 57: 
DirectoryScanner.matchPath("/tmp/*", "/var/log/system.log");

Test 58: 
DirectoryScanner.matchPath("/*", "C:Windows");

Test 59: 
DirectoryScanner.matchPath("/", "/*");

Test 60: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("example_file.txt");
directoryScanner.isExcluded("another_example_file.java");

Test 61: 
DirectoryScanner.matchPath("**/VS/*files*", "This is a test file 123.");

Test 62: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
FileSystemHandling.appendStringToFile((EvoSuiteFile) "/home", (String) null);
String string = "*`[XZAs}WN$>";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getExcludedDirectories();

Test 63: 
DirectoryScanner.matchPatternStart("A-Z0-9.-_", "Lq/MB?G|6a)InXL>aA");

Test 64: 
DirectoryScanner.matchPath("/home/user/VS/project1", "/home/user/VS/project1/src");

Test 65: 
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username123");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#$%^&*()_+");

Test 66: 
DirectoryScanner.match("**", "*.txt");

Test 67: 
DirectoryScanner.matchPath("^[0-9a-zA-Z][0-9a-zA-Z_]*$", "exampleFile.txt");

Test 68: 
DirectoryScanner.matchPatternStart("*", "*.*");

Test 69: 
DirectoryScanner.match("**/*.java", "**/*");

Test 70: 
DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");

Test 71: 
DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**");

Test 72: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 73: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[1] = "Tq@if9";
stringArray[2] = "";
stringArray[3] = "IO error scanning directory ";
directoryScanner.setIncludes(stringArray);

Test 74: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 76: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*.{txt,java,class,xml,properties,ini}";
stringArray[1] = ",";
stringArray[2] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[3] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[4] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[5] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[6] = "**/*.{txt,java,class,xml,properties,ini}";
directoryScanner.setExcludes(stringArray);

Test 77: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "!important.txt";
directoryScanner.setExcludes(stringArray);

Test 78: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

Test 79: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
directoryScanner.scan();

Test 80: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
directoryScanner.scan();

Test 81: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersJohn DoeDocuments");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();

Test 82: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("test_file.txt", "This is a test file.");
directoryScanner.setBasedir("/home/*");
directoryScanner.scan();
String string = "*";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/Users/username/Documents", "1234567890");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "#pX1acYXCJ:(";
String string = "/F*zF*&>.+Cl0h";
MockFile.createTempFile(string, string);
directoryScanner.getExcludedFiles();

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:path\to\file");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersJane Doe", "Documents");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "C:\\Users\\Jane Doe\\Documents";
String string = "example1.txt";
MockFile.createTempFile(string, string);
String string = "example2*";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedFiles();

Test 86: 
MockFile mockFile = new MockFile("file1.txt", "");
MockFile.createTempFile("file1.txt", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getNotIncludedFiles();

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/path/to/test/data");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "my_project", false);
directoryScanner.getIncludedDirectories();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:Users\testuser", "My Documents");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersUserDesktop");
directoryScanner.scandir(mockFile, (String) false, (boolean) (Boolean) null);

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersJohn DoeDocumentsWorkProject1");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "*.java";
directoryScanner.couldHoldIncluded(string);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:path\todirectory");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "file1.txt";
directoryScanner.couldHoldIncluded(string);
String string = "file2.txt";
directoryScanner.couldHoldIncluded(string);

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/home/user/files", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

Test 95: 
MockFile mockFile = new MockFile("my_test_directory");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.isIncluded("This is a test string.");

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "C:UsersJohn DoeDocuments";
directoryScanner.isIncluded("C:UsersJohn DoeDocuments");


* Generated after the refinement and before minimization 99 tests with total length 357
* test suite isTestSuite: 99
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");
Test 3: 
DirectoryScanner.matchPatternStart("zu#*E", "z/");
Test 4: 
DirectoryScanner.matchPatternStart("*", "**/CVS/**");
Test 5: 
DirectoryScanner.matchPath("*/CV/**", "*{~");
Test 6: 
DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");
Test 7: 
DirectoryScanner.matchPath("//**", "/");
Test 8: 
DirectoryScanner.matchPath("/", "/**");
Test 9: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 10: 
DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /*`[XZAs}WN$>**_/CVS
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 12: 
DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");
Test 13: 
DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");
Test 14: 
DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");
Test 15: 
DirectoryScanner.match("**", "");
Test 16: 
DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");
Test 17: 
DirectoryScanner.matchPatternStart("*?", "*");
Test 18: 
DirectoryScanner.match("**/CVS/**", "**/CVS/**");
Test 19: 
DirectoryScanner.match("**/#*", "D~pY;2x#x5L]:DM");
Test 20: 
DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[1] = "Tq@if9";
stringArray[2] = "";
stringArray[3] = "IO error scanning directory ";
directoryScanner.setIncludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(stringArray);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*/*>#";
stringArray[1] = ",";
stringArray[2] = "*/*>#";
stringArray[3] = "*/*>#";
stringArray[4] = "*/*>#";
stringArray[5] = "*/*>#";
stringArray[6] = "*/*>#";
directoryScanner.setExcludes(stringArray);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "KRwA&R`ZU,\"'/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", true);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(mockFile, "*`xXZAs}WN$>", false);
directoryScanner.getIncludedFiles();
Test 36: 
MockFile mockFile = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile(", [");
try { 
  directoryScanner.scandir(mockFile, (String) null, false);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/, [
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*7");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 45: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 46: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
mockFile.mkdirs();
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("UKE4C+!fSeD9");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("G}PZujh\"UmyG");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJane Doe");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 53: 
DirectoryScanner.matchPatternStart("*/#f", "1234567890-=!@#$%^&*()_+[]{}:;'<>?,./~`\"|\"");

Test 54: 
DirectoryScanner.matchPatternStart("zu*E", "z/");

Test 55: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");

Test 56: 
DirectoryScanner.matchPath("*/CV/images/**", "*.png");

Test 57: 
DirectoryScanner.matchPath("/tmp/*", "/var/log/system.log");

Test 58: 
DirectoryScanner.matchPath("/*", "C:Windows");

Test 59: 
DirectoryScanner.matchPath("/", "/*");

Test 60: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("example_file.txt");
directoryScanner.isExcluded("another_example_file.java");

Test 61: 
DirectoryScanner.matchPath("**/VS/*files*", "This is a test file 123.");

Test 62: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
FileSystemHandling.appendStringToFile((EvoSuiteFile) "/home", (String) null);
String string = "*`[XZAs}WN$>";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getExcludedDirectories();

Test 63: 
DirectoryScanner.matchPatternStart("A-Z0-9.-_", "Lq/MB?G|6a)InXL>aA");

Test 64: 
DirectoryScanner.matchPath("/home/user/VS/project1", "/home/user/VS/project1/src");

Test 65: 
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username123");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#");
DirectoryScanner.match("^[A-Za-z0-9_]+$", "username__123!@#$%^&*()_+");

Test 66: 
DirectoryScanner.match("**", "*.txt");

Test 67: 
DirectoryScanner.matchPath("^[0-9a-zA-Z][0-9a-zA-Z_]*$", "exampleFile.txt");

Test 68: 
DirectoryScanner.matchPatternStart("*", "*.*");

Test 69: 
DirectoryScanner.match("**/*.java", "**/*");

Test 70: 
DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");

Test 71: 
DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**");

Test 72: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 73: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[1] = "Tq@if9";
stringArray[2] = "";
stringArray[3] = "IO error scanning directory ";
directoryScanner.setIncludes(stringArray);

Test 74: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 76: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*.{txt,java,class,xml,properties,ini}";
stringArray[1] = ",";
stringArray[2] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[3] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[4] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[5] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[6] = "**/*.{txt,java,class,xml,properties,ini}";
directoryScanner.setExcludes(stringArray);

Test 77: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "!important.txt";
directoryScanner.setExcludes(stringArray);

Test 78: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

Test 79: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
directoryScanner.scan();

Test 80: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
directoryScanner.scan();

Test 81: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersJohn DoeDocuments");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();

Test 82: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("test_file.txt", "This is a test file.");
directoryScanner.setBasedir("/home/*");
directoryScanner.scan();
String string = "*";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/Users/username/Documents", "1234567890");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "#pX1acYXCJ:(";
String string = "/F*zF*&>.+Cl0h";
MockFile.createTempFile(string, string);
directoryScanner.getExcludedFiles();

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:path\to\file");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersJane Doe", "Documents");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "C:\\Users\\Jane Doe\\Documents";
String string = "example1.txt";
MockFile.createTempFile(string, string);
String string = "example2*";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedFiles();

Test 86: 
MockFile mockFile = new MockFile("file1.txt", "");
MockFile.createTempFile("file1.txt", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getNotIncludedFiles();

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/path/to/test/data");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "my_project", false);
directoryScanner.getIncludedDirectories();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:Users\testuser", "My Documents");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersUserDesktop");
directoryScanner.scandir(mockFile, (String) false, (boolean) (Boolean) null);

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersJohn DoeDocumentsWorkProject1");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "*.java";
directoryScanner.couldHoldIncluded(string);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:path\todirectory");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
String string = "file1.txt";
directoryScanner.couldHoldIncluded(string);
String string = "file2.txt";
directoryScanner.couldHoldIncluded(string);

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/home/user/files", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

Test 95: 
MockFile mockFile = new MockFile("my_test_directory");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.isIncluded("This is a test string.");

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "C:UsersJohn DoeDocuments";
directoryScanner.isIncluded("C:UsersJohn DoeDocuments");


* Minimizing test suite
* test suite isTestSuite: 52
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 3: 
DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");
Test 4: 
DirectoryScanner.matchPatternStart("zu*E", "z/");
Test 5: 
DirectoryScanner.matchPatternStart("*", "**/CVS/**");
Test 6: 
DirectoryScanner.matchPath("*/CV/images/**", "*.png");
Test 7: 
DirectoryScanner.matchPath("/", "/*");
Test 8: 
DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**");
Test 9: 
DirectoryScanner.matchPath("//**", "/");
Test 10: 
DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 12: 
DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");
Test 13: 
DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");
Test 14: 
DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");
Test 15: 
DirectoryScanner.match("**", "");
Test 16: 
DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");
Test 17: 
DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");
Test 18: 
DirectoryScanner.matchPatternStart("*?", "*");
Test 19: 
DirectoryScanner.match("**", "*.txt");
Test 20: 
DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");
Test 21: 
DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(stringArray);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*.{txt,java,class,xml,properties,ini}";
stringArray[1] = ",";
stringArray[2] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[3] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[4] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[5] = "**/*.{txt,java,class,xml,properties,ini}";
stringArray[6] = "**/*.{txt,java,class,xml,properties,ini}";
directoryScanner.setExcludes(stringArray);
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "KRwA&R`ZU,\"'/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedFiles();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /*`[XZAs}WN$>**_/CVS
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", true);
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
directoryScanner.getExcludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(mockFile, "*`xXZAs}WN$>", false);
directoryScanner.getIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*7");
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 39: 
MockFile mockFile = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getIncludedDirectories();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile(", [");
try { 
  directoryScanner.scandir(mockFile, (String) null, false);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/, [
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 47: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 48: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
mockFile.mkdirs();
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("UKE4C+!fSeD9");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("G}PZujh\"UmyG");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 232
* Number of covered goals: 219
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 307
* Number of covered goals: 300
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 62
* Number of covered goals: 44
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 232
* Number of covered goals: 219
* Generated 52 tests with total length 177
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanWithNonExistentBasedir
* Compiling Tests
refined test name is: testScanThrowsExceptionWhenBasedirDoesNotExist
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File basedir = directoryScanner.getBasedir();
assertNull(basedir);


** It was a parseable test case! 
refined test name is: testGetBasedirReturnsNullInitially
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(0, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanWithEmptyDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartWithWildcardCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("zu*E", "z/");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartWithDifferentPaths
* Compiling Tests
refined test name is: testMatchPatternStartGivenInvalidPathReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*", "**/CVS/**");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartNoCommentReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("*/CV/images/**", "*.png");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithInvalidPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/", "/*");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathTrailingSlash
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/Users/*/Documents/**", "/Users/*/Documents/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathEquivalentPatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("//**", "/");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithWildcardPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithInvalidPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.addDefaultExcludes();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testAddDefaultExcludesNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithGlobPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStart
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchEqualStrings
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**", "");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchPatternAllFilesAndDirectories
* Compiling Tests
refined test name is: testMatchAllFilesAndDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithMismatchedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithSpecialCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*?", "*");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**", "*.txt");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchPatternAndExtension
* Compiling Tests
refined test name is: testMatchMethodWithValidPatternAndExtension
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/#*", "1234567890-!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchingSpecialCharactersInFileName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithWildcards
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
refined test name is: testNullIncludes
* Compiling Tests
refined test name is: testNullIncludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "**/*.txt";
directoryScanner.setIncludes(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithIncludesArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testSetIncludesWithNonPrintableCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
refined test name is: testScannerReturnsAllFilesWhenExcludesAreNull
* Compiling Tests
refined test name is: testDirectoryScannerWithExcludesNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[7];
arg0[0] = "*.{txt,java,class,xml,properties,ini}";
arg0[1] = ",";
arg0[2] = "**/*.{txt,java,class,xml,properties,ini}";
arg0[3] = "**/*.{txt,java,class,xml,properties,ini}";
arg0[4] = "**/*.{txt,java,class,xml,properties,ini}";
arg0[5] = "**/*.{txt,java,class,xml,properties,ini}";
arg0[6] = "**/*.{txt,java,class,xml,properties,ini}";
directoryScanner.setExcludes(arg0);
assertEquals(7, arg0.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerSetExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[7];
arg0[0] = "**/CVS/**";
arg0[1] = "KRwA&R`ZU,\"'/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSetExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testNoBaseDirSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File arg0 = MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir(arg0);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testIllegalBasedirthrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
directoryScanner.scan();

** It was a parseable test case! 
refined test name is: testDirectoryScannerScanMethodCalls
* Compiling Tests
refined test name is: testDirectoryScannerScanMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSlowScanThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(0, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanWithNoExclusions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
// Undeclared exception!
try { 
  directoryScanner.addDefaultExcludes();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testAddDefaultExcludesThrowsNPEWhenBasedirIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(arg0, "*`[XZAs}WN$>", true);
assertTrue(arg0.isAbsolute());


** It was a parseable test case! 
refined test name is: testScannableDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerExcludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(arg0, "*`xXZAs}WN$>", false);
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(2, includedFiles.length);


** It was a parseable test case! 
refined test name is: testScanAndScandir
* Compiling Tests
refined test name is: testScanDirectoryWithFileNamePattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("*7");
assertTrue(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithWildcardPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(0, includedFiles.length);


** It was a parseable test case! 
refined test name is: testEmptyDirectoryScan
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(2, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanDirectoryWithMultipleFilesNotIncluded
* Compiling Tests
refined test name is: testScanForNotIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(arg0, "*`[XZAs}WN$>", false);
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(7, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanDirectoryWithSevenIncludedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(5, notIncludedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanMethodReturnsCorrectResults
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(0, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanWithNoExclusions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.addDefaultExcludes();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testAddDefaultExcludesThrowsNPEWhenExcludesIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile(", [");
try { 
  directoryScanner.scandir(arg0, (String) null, false);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/, [
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testInvalidPathThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("");
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");
assertFalse(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncluded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
File basedir = directoryScanner.getBasedir();
assertSame(basedir, arg0);


** It was a parseable test case! 
refined test name is: testGetBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) arg0);
File basedir = directoryScanner.getBasedir();
assertFalse(basedir.canExecute());


** It was a parseable test case! 
refined test name is: testScanWithNonExecutableBaseDir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) arg0);
arg0.mkdirs();
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(0, notIncludedDirectories.length);


** It was a parseable test case! 
refined test name is: testMkdirsAndScan
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.addDefaultExcludes();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testAddDefaultExcludesWithoutDirectoryPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
boolean included = directoryScanner.isIncluded("UKE4C+!fSeD9");
assertFalse(included);


** It was a parseable test case! 
refined test name is: testIsIncludedWithIncludePatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
boolean included = directoryScanner.isIncluded("G}PZujh\"UmyG");
assertTrue(included);


** It was a parseable test case! 
refined test name is: testIncludes
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:25:59.789 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:25:59.811 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:25:59.890 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:25:59.891 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:25:59.946 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:25:59.948 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:25:59.994 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:25:59.996 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:00.038 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.039 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.078 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.079 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.115 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.117 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.153 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.154 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.194 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.194 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.232 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.233 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.273 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.275 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
[MASTER] 16:26:00.315 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.316 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.356 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.357 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.399 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.399 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.453 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.454 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:00.504 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.505 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.588 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.590 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.666 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.666 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.705 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.705 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:00.747 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.750 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.788 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.788 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.828 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.828 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:00.866 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.867 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.911 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.912 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:00.970 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:00.971 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:01.029 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.030 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.098 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.099 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.159 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.160 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.204 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 16:26:01.205 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
* Compiling Tests
[MASTER] 16:26:01.248 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.249 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:01.289 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.290 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.333 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.333 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.377 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.377 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.435 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.435 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
[MASTER] 16:26:01.503 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.504 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.562 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.563 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:01.628 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.629 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.696 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.698 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.757 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 16:26:01.758 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:01.838 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.844 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.916 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.917 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:01.980 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:01.981 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.049 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.051 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.124 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.125 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.199 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.200 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.262 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.263 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.324 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.324 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.382 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.383 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.441 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.442 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.505 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.506 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.568 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.569 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:02.629 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:02.630 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 15 called: 2 to improve: false
** Write a test suite: 19 called: 3 to improve: false
** Write a test suite: 22 called: 4 to improve: false
** Write a test suite: 25 called: 5 to improve: false
** Write a test suite: 30 called: 6 to improve: false
** Write a test suite: 36 called: 7 to improve: false
** Write a test suite: 39 called: 8 to improve: false
[MASTER] 16:26:04.559 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:04.560 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 12 called: 0 to improve: false
** Write a test suite: 15 called: 1 to improve: false
** Write a test suite: 21 called: 2 to improve: false
** Write a test suite: 26 called: 3 to improve: false
** Write a test suite: 29 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 36 called: 6 to improve: false
** Write a test suite: 47 called: 7 to improve: false
** Write a test suite: 51 called: 8 to improve: false
[MASTER] 16:26:06.214 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:06.215 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
[MASTER] 16:26:09.255 [logback-2] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 51
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");
Test 3: 
DirectoryScanner.matchPatternStart("zu#*E", "z/");
Test 4: 
DirectoryScanner.matchPatternStart("*", "**/CVS/**");
Test 5: 
DirectoryScanner.matchPath("*/CV/**", "*{~");
Test 6: 
DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");
Test 7: 
DirectoryScanner.matchPath("//**", "/");
Test 8: 
DirectoryScanner.matchPath("/", "/**");
Test 9: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 10: 
DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /*`[XZAs}WN$>**_/CVS
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 12: 
DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");
Test 13: 
DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");
Test 14: 
DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");
Test 15: 
DirectoryScanner.match("**", "");
Test 16: 
DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");
Test 17: 
DirectoryScanner.matchPatternStart("*?", "*");
Test 18: 
DirectoryScanner.match("**/CVS/**", "**/CVS/**");
Test 19: 
DirectoryScanner.match("**/#*", "D~pY;2x#x5L]:DM");
Test 20: 
DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[1] = "Tq@if9";
stringArray[2] = "";
stringArray[3] = "IO error scanning directory ";
directoryScanner.setIncludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(stringArray);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*/*>#";
stringArray[1] = ",";
stringArray[2] = "*/*>#";
stringArray[3] = "*/*>#";
stringArray[4] = "*/*>#";
stringArray[5] = "*/*>#";
stringArray[6] = "*/*>#";
directoryScanner.setExcludes(stringArray);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "KRwA&R`ZU,\"'/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", true);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(mockFile, "*`xXZAs}WN$>", false);
directoryScanner.getIncludedFiles();
Test 36: 
MockFile mockFile = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile(", [");
try { 
  directoryScanner.scandir(mockFile, (String) null, false);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/, [
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*7");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 45: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 46: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
mockFile.mkdirs();
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("UKE4C+!fSeD9");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("G}PZujh\"UmyG");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
* test suite isTestSuite: 50
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/tmp/hme0");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("*", "**/CVS/**");
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 4: 
DirectoryScanner.matchPatternStart("*/#f", "443+U;ya#O'P{i}{Na");
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*7");
Test 6: 
DirectoryScanner.matchPatternStart("zu#*E", "z/");
Test 7: 
DirectoryScanner.matchPath("**/VS/*f*", "4bQr-fyPg7q,(;J}8r{");
Test 8: 
DirectoryScanner.matchPath("/", "/**");
Test 9: 
DirectoryScanner.matchPath("*/CV/**", "*{~");
Test 10: 
DirectoryScanner.matchPath("/*`[ZAs}WN$>tmp/#pX1acYXCJ:(0/F*zF*&%.+Cl0h", "/tmp/tmp/+ome0/home0/tmp/home0/home");
Test 11: 
DirectoryScanner.matchPath("//**", "/");
Test 12: 
DirectoryScanner.matchPath("*?*LCVS/**", "*?*LCVS/**");
Test 13: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 14: 
DirectoryScanner.matchPath("/**/VS/**", "/**/VS/**");
Test 15: 
DirectoryScanner.matchPatternStart("Lq/MB?G|6a)InXL>aA", "Lq/MB?G|6a)InXL>aA");
Test 16: 
DirectoryScanner.match("L{eW9?GjU3;)>Pu`*R", "L{eW9?GjU3;)>Pu`*R");
Test 17: 
DirectoryScanner.match("**", "");
Test 18: 
DirectoryScanner.matchPath("@|*#* E&?", "@|*#* E&?");
Test 19: 
DirectoryScanner.matchPatternStart("*?", "*");
Test 20: 
DirectoryScanner.match("**/#*", "D~pY;2x#x5L]:DM");
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "}166c0K:#T|CjaAO/";
directoryScanner.setIncludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
// Undeclared exception!
try { 
  directoryScanner.setIncludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "*/*>#";
stringArray[1] = ",";
stringArray[2] = "*/*>#";
stringArray[3] = "*/*>#";
stringArray[4] = "*/*>#";
stringArray[5] = "*/*>#";
stringArray[6] = "*/*>#";
directoryScanner.setExcludes(stringArray);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[7];
stringArray[0] = "**/CVS/**";
stringArray[1] = "KRwA&R`ZU,\"'/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS/**", "**/CVS/**");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.scan();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/**/CVS/**home");
FileSystemHandling.appendStringToFile(evoSuiteFile, "/home");
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /*`[XZAs}WN$>**_/CVS
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", true);
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("#pX1acYXCJ:(", "/F*zF*&>.+Cl0h");
directoryScanner.getExcludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
MockFile.createTempFile("/he", "/he");
directoryScanner.scandir(mockFile, "*`xXZAs}WN$>", false);
directoryScanner.getIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 37: 
MockFile mockFile = new MockFile("", "");
MockFile.createTempFile("/**", "/**");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir("/home");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*`[XZAs}WN$>", false);
directoryScanner.getIncludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile(", [");
try { 
  directoryScanner.scandir(mockFile, (String) null, false);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/, [
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("_QoX=Ws]t8)h{XqH");
Test 44: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 46: 
MockFile mockFile = new MockFile("zu#*E");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
mockFile.mkdirs();
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/*`Zs}NN>tmp/#pX.aYXCJ:(0/F*zF&%.+Cl0h");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
stringArray[1] = "G}PZujh\"UmyG";
stringArray[2] = "";
stringArray[3] = "G}PZujh\"UmyG";
stringArray[4] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("UKE4C+!fSeD9");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[5];
stringArray[0] = "G}PZujh\"UmyG";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("G}PZujh\"UmyG");

[MASTER] 16:26:14.926 [logback-2] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 232
* Number of covered goals: 219
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 307
* Number of covered goals: 300
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 62
* Number of covered goals: 44
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 232
* Number of covered goals: 219
* Generated 50 tests with total length 176
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 16:26:15.107 [logback-2] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 16:26:21.156 [logback-2] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.336 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.345 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.388 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.389 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.424 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.424 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.459 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.460 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.506 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.507 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.558 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.559 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.598 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.599 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.637 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.638 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.678 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.679 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.717 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.718 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.754 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.755 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.792 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.792 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.831 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.832 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.881 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.882 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.922 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.922 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:23.963 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:23.964 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.025 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.026 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.082 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.083 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.146 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.147 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.189 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.190 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.231 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.231 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.270 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.270 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.312 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.313 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.398 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.398 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.445 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.446 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 16:26:24.493 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.494 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.601 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.602 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.650 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.651 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.697 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.698 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 16:26:24.750 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.751 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.811 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.812 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:24.860 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.861 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.908 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:24.909 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:24.964 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:24.964 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.011 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.011 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:25.057 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.058 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.105 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.105 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.165 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.165 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.203 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.204 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.257 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.258 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.306 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.307 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.343 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.343 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.381 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.381 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.422 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.423 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.476 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.477 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.530 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.531 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.572 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.573 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:25.610 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.611 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:26:25.648 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.649 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:26:25.686 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:25.687 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
[MASTER] 16:26:26.719 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:26.720 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
[MASTER] 16:26:28.142 [logback-2] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar9146165582723740917.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:26:28.143 [logback-2] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9146165582723740917.jar
* Writing tests to file
[MASTER] 16:26:28.145 [logback-2] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'DirectoryScanner_ESTest' to evosuite-tests
** Write a test suite: 12 called: 0 to improve: false
** Write a test suite: 15 called: 1 to improve: false
** Write a test suite: 21 called: 2 to improve: false
** Write a test suite: 26 called: 3 to improve: false
** Write a test suite: 29 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 36 called: 6 to improve: false
** Write a test suite: 46 called: 7 to improve: false
** Write a test suite: 50 called: 8 to improve: false
* Writing JUnit test case 'DirectoryScanner_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
* Done!

* Computation finished
