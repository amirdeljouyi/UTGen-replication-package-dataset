* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.io.DirectoryScanner
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 9100
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:06:05.538 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:06:05.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:06:05.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:06:05.585 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.lts.io.DirectoryScanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 855
* Using seed 1710302762394
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 170 / 855
[Progress:>                             0%] [Cov:==========>                        29%][Progress:>                             1%] [Cov:============>                      36%][Progress:>                             1%] [Cov:============>                      36%][Progress:>                             2%] [Cov:============>                      36%][Progress:>                             2%] [Cov:============>                      37%][Progress:>                             2%] [Cov:============>                      37%][Progress:>                             2%] [Cov:===============>                   44%][Progress:>                             2%] [Cov:===============>                   45%][Progress:>                             2%] [Cov:===============>                   45%][Progress:>                             2%] [Cov:================>                  46%][Progress:>                             2%] [Cov:==================>                53%][Progress:>                             3%] [Cov:===================>               56%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            64%][Progress:=>                            4%] [Cov:======================>            64%][Progress:=>                            4%] [Cov:======================>            64%][Progress:=>                            5%] [Cov:======================>            64%][Progress:=>                            5%] [Cov:======================>            64%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            5%] [Cov:======================>            65%][Progress:=>                            6%] [Cov:======================>            65%][Progress:=>                            6%] [Cov:======================>            65%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           68%][Progress:=>                            6%] [Cov:=======================>           68%][Progress:==>                           7%] [Cov:========================>          69%][Progress:==>                           7%] [Cov:=========================>         73%][Progress:==>                           7%] [Cov:=========================>         74%][Progress:==>                           7%] [Cov:=========================>         74%][Progress:==>                           7%] [Cov:=========================>         74%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:===========================>       79%][Progress:==>                           7%] [Cov:===========================>       79%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     84%][Progress:===>                          10%] [Cov:=============================>     85%][Progress:===>                          10%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          11%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][MASTER] 04:06:30.730 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][MASTER] 04:06:32.067 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                44%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:==============>               49%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:=================>            59%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   90%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:===================>          66%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         67%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         68%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:====================>         69%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        70%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        71%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        72%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:=====================>        73%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       74%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       75%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:======================>       76%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%]
* Search finished after 202s and 1109 generations, 278801 statements, best individual has fitness: 40.0
* Generated before the refinement 57 tests with total length 195
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents");// Basedir for the scanning operation

        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
        directoryScanner.getNotIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents")// Basedir for the scanning operation
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents")// Basedir for the scanning operation
 target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe\\Documents";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File basedir = directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        directoryScanner.setBasedir("C:\\Users\\User\\Documents");
        directoryScanner.includeFiles(new String[]{ "*.txt", "*.docx" });
        directoryScanner.excludeDirectories(new String[]{ "temp", "backup" });
        directoryScanner.scan();
    }
}
statement is: directoryScanner.setBasedir("C:\\Users\\User\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\User\\Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
statement is: directoryScanner.includeFiles(new String[]{ "*.txt", "*.docx" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.includeFiles(new String[]{ "*.txt", "*.docx" }) target is: directoryScanner method is: includeFiles(java.lang.String[])
statement is: directoryScanner.excludeDirectories(new String[]{ "temp", "backup" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.excludeDirectories(new String[]{ "temp", "backup" }) target is: directoryScanner method is: excludeDirectories(java.lang.String[])
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("mcdE!pYv")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) arg2)
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("example");
        MockFile.createTempFile("example", "example", ((File) (mockFile)));
        directoryScanner.setBasedir("/path/to/base/dir");
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("example"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("example", "example", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("example", "example", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.setBasedir("/path/to/base/dir"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/path/to/base/dir") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "example";
MockFile mockFile = new MockFile(string);
String string = "example";
String string = "example";
MockFile.createTempFile(string, string, (File) mockFile);
String string = "/path/to/base/dir";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/*(", "/")
test data is: DirectoryScanner.matchPatternStart("/*(", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("/*(regex_pattern)", "/*(/user/home/documents)");
    }
}
statement is: DirectoryScanner.matchPatternStart("/*(regex_pattern)", "/*(/user/home/documents)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("/*(regex_pattern)", "/*(/user/home/documents)") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/*(regex_pattern)";
String string = "/*(/user/home/documents)";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**")
test data is: DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git");
    }
}
statement is: // Improved test data:
DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/CVS/**";
String string = "**/*.git";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/W", "/**")
test data is: DirectoryScanner.matchPatternStart("/W", "/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("/W", "/*");
    }
}
statement is: DirectoryScanner.matchPatternStart("/W", "/*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("/W", "/*") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/W";
String string = "/*";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/", "/basedir does not exist")
test data is: DirectoryScanner.matchPatternStart("/", "/basedir does not exist");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist");
        DirectoryScanner.matchPatternStart("//", "//base/dir2 does not exist");
        DirectoryScanner.matchPatternStart("/basedir/subdir/", "/basedir/subdir/file1.txt exists");
    }
}
statement is: DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPatternStart("//", "//base/dir2 does not exist"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("//", "//base/dir2 does not exist") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPatternStart("/basedir/subdir/", "/basedir/subdir/file1.txt exists"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("/basedir/subdir/", "/basedir/subdir/file1.txt exists") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/";
String string = "/base/dir1 does not exist";
DirectoryScanner.matchPatternStart(string, string);
String string = "//";
String string = "//base/dir2 does not exist";
DirectoryScanner.matchPatternStart(string, string);
String string = "/basedir/subdir/";
String string = "/basedir/subdir/file1.txt exists";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/CVS", "/")
test data is: DirectoryScanner.matchPath("/**/CVS", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/**/CVS", "/home/user1/project1");
        DirectoryScanner.matchPath("/**/CVS", "/home/user2/project2");
        DirectoryScanner.matchPath("/**/CVS", "/var/www/html/cvs-repo");
    }
}
statement is: DirectoryScanner.matchPath("/**/CVS", "/home/user1/project1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/**/CVS", "/home/user1/project1") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("/**/CVS", "/home/user2/project2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/**/CVS", "/home/user2/project2") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("/**/CVS", "/var/www/html/cvs-repo"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/**/CVS", "/var/www/html/cvs-repo") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**/CVS";
String string = "/home/user1/project1";
DirectoryScanner.matchPath(string, string);
String string = "/**/CVS";
String string = "/home/user2/project2";
DirectoryScanner.matchPath(string, string);
String string = "/**/CVS";
String string = "/var/www/html/cvs-repo";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("*W/~")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*W/~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.isExcluded("/home/user/Documents/myProject");
        directoryScanner.isExcluded("*.txt");
        directoryScanner.isExcluded("*W/~");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.isExcluded("/home/user/Documents/myProject"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("/home/user/Documents/myProject") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*.txt") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("*W/~"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*W/~") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "/home/user/Documents/myProject";
directoryScanner.isExcluded(string);
String string = "*.txt";
directoryScanner.isExcluded(string);
String string = "*W/~";
directoryScanner.isExcluded(string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/*M*home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res")
test data is: DirectoryScanner.matchPath("/*M*home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/*M*data/input/SF110-new-res0/data/input/SF110-new-res", "/data/input/SF110-new-res");
    }
}
statement is: DirectoryScanner.matchPath("/*M*data/input/SF110-new-res0/data/input/SF110-new-res", "/data/input/SF110-new-res"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/*M*data/input/SF110-new-res0/data/input/SF110-new-res", "/data/input/SF110-new-res") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/*M*data/input/SF110-new-res0/data/input/SF110-new-res";
String string = "/data/input/SF110-new-res";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("//", "/IO error scanning directory ")
test data is: DirectoryScanner.matchPath("//", "/IO error scanning directory ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("//", "//");// Descriptive and representative of the situation being tested }}

    }
}
statement is: DirectoryScanner.matchPath("//", "//")// Descriptive and representative of the situation being tested }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("//", "//")// Descriptive and representative of the situation being tested }}
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "//";
String string = "//";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("*~")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.isExcluded("*~");
        directoryScanner.isExcluded("*.tmp");
        directoryScanner.isExcluded("*.bak");
        directoryScanner.isExcluded("*.log");
        directoryScanner.isExcluded("*.zip");
        directoryScanner.setCaseSensitive(true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.isExcluded("*~"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*~") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("*.tmp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*.tmp") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("*.bak"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*.bak") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("*.log"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*.log") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.isExcluded("*.zip"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*.zip") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
statement is: directoryScanner.setCaseSensitive(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setCaseSensitive(true) target is: directoryScanner method is: setCaseSensitive(boolean)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "*~";
directoryScanner.isExcluded(string);
String string = "*.tmp";
directoryScanner.isExcluded(string);
String string = "*.bak";
directoryScanner.isExcluded(string);
String string = "*.log";
directoryScanner.isExcluded(string);
String string = "*.zip";
directoryScanner.isExcluded(string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/.cvsignore", "/W")
test data is: DirectoryScanner.matchPath("/**/.cvsignore", "/W");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/**/.gitignore", "/Users/johndoe/Projects/MyApp");
    }
}
statement is: DirectoryScanner.matchPath("/**/.gitignore", "/Users/johndoe/Projects/MyApp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/**/.gitignore", "/Users/johndoe/Projects/MyApp") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**/.gitignore";
String string = "/Users/johndoe/Projects/MyApp";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**")
test data is: DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/CVS/*", "**/*.txt");
    }
}
statement is: DirectoryScanner.matchPath("**/CVS/*", "**/*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/CVS/*", "**/*.txt") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/CVS/*";
String string = "**/*.txt";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/**", "**/**")
test data is: DirectoryScanner.matchPath("**/**", "**/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/**", "**/**");
    }
}
statement is: DirectoryScanner.matchPath("**/**", "**/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/**", "**/**") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/**";
String string = "**/**";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("**")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.isExcluded("ALL_TEXT_FILES");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.isExcluded("ALL_TEXT_FILES"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("ALL_TEXT_FILES") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "ALL_TEXT_FILES";
directoryScanner.isExcluded(string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("Q5e|DzGL?Hk", "Q5e|DzGL?Hk")
test data is: DirectoryScanner.matchPatternStart("Q5e|DzGL?Hk", "Q5e|DzGL?Hk");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("A_1234", "A_1234");
    }
}
statement is: DirectoryScanner.matchPatternStart("A_1234", "A_1234"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("A_1234", "A_1234") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "A_1234";
String string = "A_1234";
DirectoryScanner.matchPatternStart(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("/W", "\"[")
test data is: DirectoryScanner.match("/W", "\"[");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("/W+", "[[");
    }
}
statement is: DirectoryScanner.match("/W+", "[["), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("/W+", "[[") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/W+";
String string = "[[";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/*/e*G", "/*/e*G")
test data is: DirectoryScanner.matchPath("/*/e*G", "/*/e*G");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("src/main/java/com/example/*.java", "src/main/java/com/example/*.java");
    }
}
statement is: DirectoryScanner.matchPath("src/main/java/com/example/*.java", "src/main/java/com/example/*.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("src/main/java/com/example/*.java", "src/main/java/com/example/*.java") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "src/main/java/com/example/*.java";
String string = "src/main/java/com/example/*.java";
DirectoryScanner.matchPath(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match(" *", "")
test data is: DirectoryScanner.match(" *", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match(" *", "");
    }
}
statement is: DirectoryScanner.match(" *", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match(" *", "") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = " *";
String string = "";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("i?*", "i?*")
test data is: DirectoryScanner.matchPath("i?*", "i?*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("i*", "i?");
        DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*");
        DirectoryScanner.matchPath("i?*", "i[0-9]?*");
    }
}
statement is: DirectoryScanner.matchPath("i*", "i?"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("i*", "i?") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("i?*", "i[0-9]?*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("i?*", "i[0-9]?*") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "i*";
String string = "i?";
DirectoryScanner.matchPath(string, string);
String string = "i[0-9]*";
String string = "i[a-z]*";
DirectoryScanner.matchPath(string, string);
String string = "i?*";
String string = "i[0-9]?*";
DirectoryScanner.matchPath(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("/**", "/")
test data is: DirectoryScanner.match("/**", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("/**", "/home/user/Documents/photos/2019-05-14/");
    }
}
statement is: DirectoryScanner.match("/**", "/home/user/Documents/photos/2019-05-14/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("/**", "/home/user/Documents/photos/2019-05-14/") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**";
String string = "/home/user/Documents/photos/2019-05-14/";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res")
test data is: DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
    }
}
statement is: DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res";
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*?", "*?")
test data is: DirectoryScanner.match("*?", "*?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("abcd", "efgh");
        DirectoryScanner.match("a*b", "a*c");
        DirectoryScanner.match("a?b", "a?c");
    }
}
statement is: DirectoryScanner.match("abcd", "efgh"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("abcd", "efgh") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("a*b", "a*c"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("a*b", "a*c") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("a?b", "a?c"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("a?b", "a?c") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "abcd";
String string = "efgh";
DirectoryScanner.match(string, string);
String string = "a*b";
String string = "a*c";
DirectoryScanner.match(string, string);
String string = "a?b";
String string = "a?c";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/CVS**", "/**/CVS")
test data is: DirectoryScanner.match("**/CVS**", "/**/CVS");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/CVS/**", "/**/CVS/**");
    }
}
statement is: DirectoryScanner.match("**/CVS/**", "/**/CVS/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/CVS/**", "/**/CVS/**") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/CVS/**";
String string = "/**/CVS/**";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*f*", "W")
test data is: DirectoryScanner.match("*f*", "W");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("*.txt", "W");
        DirectoryScanner.match("*f*", "R");
        DirectoryScanner.match("*.jpg", "X");
    }
}
statement is: DirectoryScanner.match("*.txt", "W"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*.txt", "W") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("*f*", "R"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*f*", "R") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("*.jpg", "X"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*.jpg", "X") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*.txt";
String string = "W";
DirectoryScanner.match(string, string);
String string = "*f*";
String string = "R";
DirectoryScanner.match(string, string);
String string = "*.jpg";
String string = "X";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**@?tI*x:", "**@?tI*x:")
test data is: DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**@?tI*x:", "file1.txt");
        DirectoryScanner.match("**@?tI*x:", "file2.txt");
        DirectoryScanner.match("**@?tI*x:", "file3.txt");
    }
}
statement is: DirectoryScanner.match("**@?tI*x:", "file1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**@?tI*x:", "file1.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("**@?tI*x:", "file2.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**@?tI*x:", "file2.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("**@?tI*x:", "file3.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**@?tI*x:", "file3.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**@?tI*x:";
String string = "file1.txt";
DirectoryScanner.match(string, string);
String string = "**@?tI*x:";
String string = "file2.txt";
DirectoryScanner.match(string, string);
String string = "**@?tI*x:";
String string = "file3.txt";
DirectoryScanner.match(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setIncludes(new String[]{ "src/main/java/**/*.java", "build/classes/java/main/**/*.class" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setIncludes(new String[]{ "src/main/java/**/*.java", "build/classes/java/main/**/*.class" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "src/main/java/**/*.java", "build/classes/java/main/**/*.class" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@dc2bfce5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1f58292e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "w~^J[THE!Pdy40|"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("w~^J[THE!Pdy40|")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("w~^J[THE!Pdy40|");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "**/*.{java,properties}";// This will scan for all Java and properties files in the current directory and subdirectories

        directoryScanner.setIncludes(stringArray);
        directoryScanner.isIncluded("example.java");// This will check if example.java is included in the set of includes }}

    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.{java,properties}"// This will scan for all Java and properties files in the current directory and subdirectories
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.{java,properties}" Ct is: stringArray[0] = "**/*.{java,properties}"// This will scan for all Java and properties files in the current directory and subdirectories

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.isIncluded("example.java")// This will check if example.java is included in the set of includes }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("example.java")// This will check if example.java is included in the set of includes }}
 target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "**/*.{java,properties}";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);
String string = "example.java";
directoryScanner.isIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@38ad0aa3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dc318a26 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "w~^J[THE!Pdy40|"
statement is: org.evosuite.testcase.statements.AssignmentStatement@7139169b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "w~^J[THE!Pdy40|"
statement is: org.evosuite.testcase.statements.AssignmentStatement@48bad2d5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "/, ["
statement is: org.evosuite.testcase.statements.AssignmentStatement@f4be7749 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "w~^J[THE!Pdy40|"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e20d28d0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "w~^J[THE!Pdy40|"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a56164e3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "w~^J[THE!Pdy40|/"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "w~^J[THE!Pdy40|";
stringArray[1] = "w~^J[THE!Pdy40|";
stringArray[2] = "/, [";
stringArray[3] = "w~^J[THE!Pdy40|";
stringArray[4] = "w~^J[THE!Pdy40|";
stringArray[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "**/*.txt", "!**/vendor/**" };
        directoryScanner.setIncludes(stringArray);
    }
}
statement is: String[] stringArray = new String[]{ "**/*.txt", "!**/vendor/**" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "**/*.txt", "!**/vendor/**" } Elements: ["**/*.txt", "!**/vendor/**"]
lengths: [6] []
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Setup a directory scanner with some excluded files and directories
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setExcludes(new String[]{ "file1.txt", "dir1/", "dir2/file3.txt" });
    }
}
statement is: // Setup a directory scanner with some excluded files and directories
DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setExcludes(new String[]{ "file1.txt", "dir1/", "dir2/file3.txt" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "file1.txt", "dir1/", "dir2/file3.txt" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@f1658f21 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@20f3b2f1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "6/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@3390c610 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "6/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@66ac44a1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "6/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@4425404f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "6/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f48975de type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "/4hb{,"
statement is: org.evosuite.testcase.statements.AssignmentStatement@974b117d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "6/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@5b9c3fcf type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "6/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@73d3e8d4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[7] = "6/"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[8];
        stringArray[0] = "6/";// This is the path to a directory that contains files with names starting with 6.

        stringArray[1] = "6/";// This is the path to a directory that contains files with names starting with 6.

        stringArray[2] = "6/";// This is the path to a directory that contains files with names starting with 6.

        stringArray[3] = "6/";// This is the path to a directory that contains files with names starting with 6.

        stringArray[4] = "/4hb{,";// This is the name of a file that starts with 4hb and contains a comma in its name.

        stringArray[5] = "6/";// This is the path to a directory that contains files with names starting with 6.

        stringArray[6] = "6/";// This is the path to a directory that contains files with names starting with 6.

        stringArray[7] = "6/";// This is the path to a directory that contains files with names starting with 6.

        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[0] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[1] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[2] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[3] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "/4hb{,"// This is the name of a file that starts with 4hb and contains a comma in its name.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/4hb{," Ct is: stringArray[4] = "/4hb{,"// This is the name of a file that starts with 4hb and contains a comma in its name.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[5] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[6] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "6/"// This is the path to a directory that contains files with names starting with 6.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6/" Ct is: stringArray[7] = "6/"// This is the path to a directory that contains files with names starting with 6.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
String string = "6/";
stringArray[0] = string;
String string = "6/";
stringArray[1] = string;
String string = "6/";
stringArray[2] = string;
String string = "6/";
stringArray[3] = string;
String string = "/4hb{,";
stringArray[4] = string;
String string = "6/";
stringArray[5] = string;
String string = "6/";
stringArray[6] = string;
String string = "6/";
stringArray[7] = string;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.scan(new File("/home/user/Documents"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scan(new File("/home/user/Documents")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan(new File("/home/user/Documents")) target is: directoryScanner method is: scan(File)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("&yzv5f@FLhy)X")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&yzv5f@FLhy)X");
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents");
        directoryScanner.scan();
    }
}
statement is: // Improved test data:
DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe\\Documents";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("Usv0=+", "_*:{q`T%K6f+0/G'")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("Usv0=+", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'")));
        directoryScanner.setBasedir(((File) (createTempFile)));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "example_file";
String string = "_*:{q`T%K6f+0/G'";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\User\\Desktop");// change basedir to a more descriptive path

        directoryScanner.scan();
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\User\\Desktop")// change basedir to a more descriptive path
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\User\\Desktop")// change basedir to a more descriptive path
 target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\User\\Desktop";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: org.evosuite.testcase.statements.FieldStatement@c06935fd type is: class org.evosuite.testcase.statements.FieldStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = directoryScanner.includes
statement is: org.evosuite.testcase.statements.AssignmentStatement@e1c6793b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/*~", false)
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
        directoryScanner.scan();
        String[] stringArray = new String[]{ "*.txt", "*.pdf" };
        directoryScanner.includes = stringArray;
        directoryScanner.excludes = stringArray;
        MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
        directoryScanner.scandir(mockFile, "**/*~", false);
        String[] excludedDirectories = directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: String[] stringArray = new String[]{ "*.txt", "*.pdf" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scandir(mockFile, "**/*~", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "**/*~", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: String[] excludedDirectories = directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
directoryScanner.setBasedir(string);
directoryScanner.scan();
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
MockFile mockFile = new MockFile(string);
String string = "**/*~";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/*~", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
directoryScanner.scandir(basedir, "**/*~", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(new File("."));
        directoryScanner.scan();
        MockFile basedir = ((MockFile) (directoryScanner.getBasedir()));
        directoryScanner.scandir(basedir, "*", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(new File(".")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(new File(".")) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: MockFile basedir = ((MockFile) (directoryScanner.getBasedir())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (directoryScanner.getBasedir())) target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
statement is: directoryScanner.scandir(basedir, "*", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(basedir, "*", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = null;
directoryScanner.setBasedir(string);
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
String string = "*";
boolean _boolean = true;
directoryScanner.scandir(basedir, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) arg2)
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("testFile", "testFile");
        MockFile.createTempFile("testFile", "testFile", ((File) (mockFile)));
        directoryScanner.setBasedir("C:\\temp");
        directoryScanner.scan();
        List<String> excludedFilesList = directoryScanner.getExcludedFilesList();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("testFile", "testFile"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("testFile", "testFile", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("testFile", "testFile", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.setBasedir("C:\\temp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\temp") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: List<String> excludedFilesList = directoryScanner.getExcludedFilesList(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFilesList() target is: directoryScanner method is: getExcludedFilesList()
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "testFile";
String string = "testFile";
MockFile mockFile = new MockFile(string, string);
String string = "testFile";
String string = "testFile";
MockFile.createTempFile(string, string, (File) mockFile);
String string = "C:\\temp";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", ";o$FB\"ya", (File) arg2)
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/*~", false)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", ";o$FB\"ya", (File) basedir);
directoryScanner.scandir(basedir, "**/*~", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/home/user/Results-Utestgen/dataset/SF110-new-res");
        directoryScanner.scan();
        MockFile basedir = ((MockFile) (directoryScanner.getBasedir()));
        MockFile.createTempFile("/home/user/Results-Utestgen/dataset/SF110-new-res", "example.txt", ((File) (basedir)));
        directoryScanner.scandir(basedir, "**/*~", false);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/user/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/user/Results-Utestgen/dataset/SF110-new-res") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: MockFile basedir = ((MockFile) (directoryScanner.getBasedir())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (directoryScanner.getBasedir())) target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
statement is: MockFile.createTempFile("/home/user/Results-Utestgen/dataset/SF110-new-res", "example.txt", ((File) (basedir))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("/home/user/Results-Utestgen/dataset/SF110-new-res", "example.txt", ((File) (basedir))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scandir(basedir, "**/*~", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(basedir, "**/*~", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/user/Results-Utestgen/dataset/SF110-new-res";
directoryScanner.setBasedir(string);
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
String string = "/home/user/Results-Utestgen/dataset/SF110-new-res";
String string = "example.txt";
MockFile.createTempFile(string, string, (File) basedir);
String string = "**/*~";
boolean _boolean = false;
directoryScanner.scandir(basedir, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: org.evosuite.testcase.statements.FieldStatement@f25d2ecb type is: class org.evosuite.testcase.statements.FieldStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = directoryScanner.includes
statement is: org.evosuite.testcase.statements.AssignmentStatement@d42794c7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) arg2)
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/*~", false)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
        directoryScanner.scan();
        String[] stringArray = directoryScanner.includes;
        directoryScanner.excludes = stringArray;
        MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
        MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", ((File) (mockFile)));
        directoryScanner.scandir(mockFile, "**/*~", false);
        // Changed the basedir to a more descriptive directory path, and added some example values for the includes and excludes arrays. }}
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: String[] stringArray = directoryScanner.includes, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: directoryScanner.includes is directoryScanner
CtField is: protected java.lang.String[] com.lts.io.DirectoryScanner.includes String[] includes
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scandir(mockFile, "**/*~", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "**/*~", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: // Changed the basedir to a more descriptive directory path, and added some example values for the includes and excludes arrays. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
directoryScanner.setBasedir(string);
directoryScanner.scan();
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
MockFile mockFile = new MockFile(string);
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
MockFile.createTempFile(string, string, (File) mockFile);
String string = "**/*~";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@ea4f99e2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@65c3344c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "^t9Un)ftW09*=%"
statement is: org.evosuite.testcase.statements.AssignmentStatement@145c8f81 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "^t9Un)ftW09*=%"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("^t9Un)ftW09*=%")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "^t9Un)ftW09*=%";
stringArray[1] = "^t9Un)ftW09*=%";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("^t9Un)ftW09*=%");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[2];
        stringArray[0] = "testdata1";
        stringArray[1] = "testdata2";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.couldHoldIncluded("testdata1");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "testdata1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"testdata1" Ct is: stringArray[0] = "testdata1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "testdata2", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"testdata2" Ct is: stringArray[1] = "testdata2"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.couldHoldIncluded("testdata1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("testdata1") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
String string = "testdata1";
stringArray[0] = string;
String string = "testdata2";
stringArray[1] = string;
directoryScanner.setIncludes(stringArray);
String string = "testdata1";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@200cd4db type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.filesIncluded = vector
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<Object> vector = new Vector<Object>();
        vector.add(new File("path/to/file1"));
        vector.add(new File("path/to/file2"));
        directoryScanner.filesIncluded = vector;
        directoryScanner.getIncludedFiles();
    }
}
statement is: // Improved test data
DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vector.add(new File("path/to/file1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(new File("path/to/file1")) target is: vector method is: add(File)
statement is: vector.add(new File("path/to/file2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(new File("path/to/file2")) target is: vector method is: add(File)
statement is: directoryScanner.filesIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.getIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@f482c934 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.filesIncluded = vector
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = vector.add((Object) ", [")
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<Object> vector = new Vector<Object>();
        directoryScanner.filesIncluded = vector;
        vector.add(((Object) ("file1.txt")));
        vector.add(((Object) ("file2.txt")));
        vector.add(((Object) ("file3.txt")));
        directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.filesIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: vector.add(((Object) ("file1.txt"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(((Object) ("file1.txt"))) target is: vector method is: add(java.lang.Object)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.Object>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: vector.add(((Object) ("file2.txt"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(((Object) ("file2.txt"))) target is: vector method is: add(java.lang.Object)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.Object>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: vector.add(((Object) ("file3.txt"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(((Object) ("file3.txt"))) target is: vector method is: add(java.lang.Object)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.Object>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
String string = "file1.txt";
vector.add((Object) string);
String string = "file2.txt";
vector.add((Object) string);
String string = "file3.txt";
vector.add((Object) string);
directoryScanner.getIncludedFiles();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/path/to/test/data/file");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "");
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/path/to/base/directory");
        directoryScanner.scan();
        List<String> notIncludedFiles = directoryScanner.getNotIncludedFiles();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/path/to/test/data/file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/path/to/base/directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/path/to/base/directory") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 3
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 3
Matched Method is: scan()V
statement is: List<String> notIncludedFiles = directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 3
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: String string = "";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/base/directory";
((DirectoryScanner) appendLineToFile).setBasedir(string);
((DirectoryScanner) appendLineToFile).scan();
((DirectoryScanner) appendLineToFile).getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@f85417ff type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.filesExcluded = vector
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = vector.add((Object) arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7d128ed7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: directoryScanner.haveSlowResults = true
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesExcluded = vector;
vector.add((Object) directoryScanner);
directoryScanner.haveSlowResults = true;
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<Object> vector = new Vector<>();
        vector.add(new Object());// Add a more descriptive object to the vector

        directoryScanner.filesExcluded = vector;
        directoryScanner.haveSlowResults = true;
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vector.add(new Object())// Add a more descriptive object to the vector
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(new Object())// Add a more descriptive object to the vector
 target is: vector method is: add(java.lang.Object)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.Object>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: directoryScanner.filesExcluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.haveSlowResults = true, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
DirectoryScanner directoryScanner = null;
vector.add((Object) directoryScanner);
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String basedir = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(basedir);
        directoryScanner.scan();
        directoryScanner.getIncludedDirectories();
    }
}
statement is: String basedir = "/home/roham/Results-Utestgen/dataset/SF110-new-res", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(basedir) target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 1
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 1
Matched Method is: scan()V
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 1
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir(string);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.String>
statement code is: Vector<String> vector = new Vector<String>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = vector.add("CAS1;Z/fJ{$E+EsDjYN")
statement is: org.evosuite.testcase.statements.AssignmentStatement@d9e3ed32 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.dirsIncluded = vector
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<String> vector = new Vector<String>();
        vector.add("C:\\Temp");
        directoryScanner.dirsIncluded = vector;
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<String> vector = new Vector<String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vector.add("C:\\Temp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add("C:\\Temp") target is: vector method is: add(java.lang.String)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.String>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: directoryScanner.dirsIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
String string = "C:\\Temp";
vector.add(string);
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("mcdE!pYv")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) arg2)
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("testfile123");
        MockFile.createTempFile("testfile123", "testfile123", ((File) (mockFile)));
        directoryScanner.setBasedir("C:\\Users\\testuser");
        directoryScanner.scan();
        List<String> notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("testfile123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("testfile123", "testfile123", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("testfile123", "testfile123", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.setBasedir("C:\\Users\\testuser"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\testuser") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: List<String> notIncludedDirectories = directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "testfile123";
MockFile mockFile = new MockFile(string);
String string = "testfile123";
String string = "testfile123";
MockFile.createTempFile(string, string, (File) mockFile);
String string = "C:\\Users\\testuser";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: org.evosuite.testcase.statements.FieldStatement@a20ed9ad type is: class org.evosuite.testcase.statements.FieldStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = directoryScanner.includes
statement is: org.evosuite.testcase.statements.AssignmentStatement@cfc71a20 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/*~", false)
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
        directoryScanner.scan();
        String[] stringArray = new String[]{ "**/*~" };
        directoryScanner.excludes = stringArray;
        MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
        directoryScanner.getNotIncludedFiles();
        directoryScanner.scandir(mockFile, "**/*~", false);
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: String[] stringArray = new String[]{ "**/*~" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
statement is: directoryScanner.scandir(mockFile, "**/*~", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "**/*~", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
directoryScanner.setBasedir(string);
directoryScanner.scan();
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
MockFile mockFile = new MockFile(string);
directoryScanner.getNotIncludedFiles();
String string = "**/*~";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.java" });
        directoryScanner.setBasedir("C:\\Users\\user\\Documents");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.java" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.java" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
statement is: directoryScanner.setBasedir("C:\\Users\\user\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\user\\Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("jF\nOKCPfVk", "jF\nOKCPfVk")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "jF\nOKCPfVk", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("jF\nOKCPfVk", "jF\nOKCPfVk");
directoryScanner.scandir(mockFile, "jF\nOKCPfVk", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("examplefile1.txt", "examplefile2.txt");
        directoryScanner.scandir(mockFile, "exampledir", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("examplefile1.txt", "examplefile2.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scandir(mockFile, "exampledir", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "exampledir", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "examplefile1.txt";
String string = "examplefile2.txt";
MockFile mockFile = new MockFile(string, string);
String string = "exampledir";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@6b9c3656 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3a86892d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[3];
        stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
        stringArray[1] = "com.lts.lang.classloader.AnotherFileFilter";
        stringArray[2] = "com.lts.lang.classloader.SomeOtherFileFilter";
        directoryScanner.setIncludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[3] Elements: []
lengths: [1] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.SimpleFileFilter" Ct is: stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "com.lts.lang.classloader.AnotherFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.AnotherFileFilter" Ct is: stringArray[1] = "com.lts.lang.classloader.AnotherFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "com.lts.lang.classloader.SomeOtherFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.SomeOtherFileFilter" Ct is: stringArray[2] = "com.lts.lang.classloader.SomeOtherFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[0] = string;
String string = "com.lts.lang.classloader.AnotherFileFilter";
stringArray[0] = string;
String string = "com.lts.lang.classloader.SomeOtherFileFilter";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("basedir does not exist")
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("c:\\temp");
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("c:\\temp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("c:\\temp") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "c:\\temp";
directoryScanner.setBasedir(string);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("basedir does not exist")
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist")
statement is: org.evosuite.testcase.statements.ArrayStatement@716eebbc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("src/test/resources");
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("src/test/resources");
        byte[] byteArray = new byte[2];
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("src/test/resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("src/test/resources") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("src/test/resources"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "src/test/resources";
directoryScanner.setBasedir(string);
byte[] byteArray = new byte[2];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@4cb33ce0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("#*#")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("#*#");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[]{ "**/*.java", "**/*.xml" };
        directoryScanner.setIncludes(stringArray);
        directoryScanner.isIncluded("src/main/java/com/example/App.java");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "**/*.java", "**/*.xml" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[]{ "**/*.java", "**/*.xml" } Elements: ["**/*.java", "**/*.xml"]
lengths: [0] []
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: directoryScanner.isIncluded("src/main/java/com/example/App.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("src/main/java/com/example/App.java") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setIncludes(stringArray);
String string = "src/main/java/com/example/App.java";
directoryScanner.isIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: slowScan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.slowScan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int numFiles = 100;
        String[] fileNames = new String[]{ "file1", "file2", "file3" };
    }
}
statement is: int numFiles = 100, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] fileNames = new String[]{ "file1", "file2", "file3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
* this is vulnerable: int _int = 100
TestCase is: int _int = 100;

* test suite isTestSuite: 112
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 3: 
DirectoryScanner.matchPatternStart("/*(", "/");
Test 4: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");
Test 5: 
DirectoryScanner.matchPatternStart("/W", "/**");
Test 6: 
DirectoryScanner.matchPatternStart("/", "/basedir does not exist");
Test 7: 
DirectoryScanner.matchPath("/**/CVS", "/");
Test 8: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*W/~");
Test 9: 
DirectoryScanner.matchPath("/*M*home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 10: 
DirectoryScanner.matchPath("//", "/IO error scanning directory ");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 12: 
DirectoryScanner.matchPath("/**/.cvsignore", "/W");
Test 13: 
DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");
Test 14: 
DirectoryScanner.matchPath("**/**", "**/**");
Test 15: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("**");
Test 16: 
DirectoryScanner.matchPatternStart("Q5e|DzGL?Hk", "Q5e|DzGL?Hk");
Test 17: 
DirectoryScanner.match("/W", "\"[");
Test 18: 
DirectoryScanner.matchPath("/*/e*G", "/*/e*G");
Test 19: 
DirectoryScanner.match(" *", "");
Test 20: 
DirectoryScanner.matchPath("i?*", "i?*");
Test 21: 
DirectoryScanner.match("/**", "/");
Test 22: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 23: 
DirectoryScanner.match("*?", "*?");
Test 24: 
DirectoryScanner.match("**/CVS**", "/**/CVS");
Test 25: 
DirectoryScanner.match("*f*", "W");
Test 26: 
DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("w~^J[THE!Pdy40|");
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "w~^J[THE!Pdy40|";
stringArray[1] = "w~^J[THE!Pdy40|";
stringArray[2] = "/, [";
stringArray[3] = "w~^J[THE!Pdy40|";
stringArray[4] = "w~^J[THE!Pdy40|";
stringArray[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(stringArray);
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&yzv5f@FLhy)X");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("Usv0=+", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/**_/*~78_caloriecount
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
directoryScanner.scandir(basedir, "**/*~", true);
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", ";o$FB\"ya", (File) basedir);
directoryScanner.scandir(basedir, "**/*~", false);
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "^t9Un)ftW09*=%";
stringArray[1] = "^t9Un)ftW09*=%";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("^t9Un)ftW09*=%");
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
directoryScanner.getIncludedFiles();
Test 44: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesExcluded = vector;
vector.add((Object) directoryScanner);
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // com.lts.io.DirectoryScanner cannot be cast to java.lang.String
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("jF\nOKCPfVk", "jF\nOKCPfVk");
try { 
  directoryScanner.scandir(mockFile, "jF\nOKCPfVk", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/jF
   // OKCPfVk/jF
   // OKCPfVk
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
directoryScanner.getBasedir();
Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
directoryScanner.getBasedir();
Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("#*#");
Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn DoeDocuments");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();

Test 58: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("example");
MockFile.createTempFile("example", "example", (File) mockFile);
directoryScanner.setBasedir("/path/to/base/dir");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 59: 
DirectoryScanner.matchPatternStart("/*(regex_pattern)", "/*(/user/home/documents)");

Test 60: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git");

Test 61: 
DirectoryScanner.matchPatternStart("/W", "/*");

Test 62: 
DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist");
DirectoryScanner.matchPatternStart("//", "//base/dir2 does not exist");
DirectoryScanner.matchPatternStart("/basedir/subdir/", "/basedir/subdir/file1.txt exists");

Test 63: 
DirectoryScanner.matchPath("/**/CVS", "/home/user1/project1");
DirectoryScanner.matchPath("/**/CVS", "/home/user2/project2");
DirectoryScanner.matchPath("/**/CVS", "/var/www/html/cvs-repo");

Test 64: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/home/user/Documents/myProject");
directoryScanner.isExcluded("*.txt");
directoryScanner.isExcluded("*W/~");

Test 65: 
DirectoryScanner.matchPath("/*M*data/input/SF110-new-res0/data/input/SF110-new-res", "/data/input/SF110-new-res");

Test 66: 
DirectoryScanner.matchPath("//", "//");

Test 67: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
directoryScanner.isExcluded("*.tmp");
directoryScanner.isExcluded("*.bak");
directoryScanner.isExcluded("*.log");
directoryScanner.isExcluded("*.zip");

Test 68: 
DirectoryScanner.matchPath("/**/.gitignore", "/Users/johndoe/Projects/MyApp");

Test 69: 
DirectoryScanner.matchPath("**/CVS/*", "**/*.txt");

Test 70: 
DirectoryScanner.matchPath("**/**", "**/**");

Test 71: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("ALL_TEXT_FILES");

Test 72: 
DirectoryScanner.matchPatternStart("A_1234", "A_1234");

Test 73: 
DirectoryScanner.match("/W+", "[[");

Test 74: 
DirectoryScanner.matchPath("src/main/java/com/example/*.java", "src/main/java/com/example/*.java");

Test 75: 
DirectoryScanner.match(" *", "");

Test 76: 
DirectoryScanner.matchPath("i*", "i?");
DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*");
DirectoryScanner.matchPath("i?*", "i[0-9]?*");

Test 77: 
DirectoryScanner.match("/**", "/home/user/Documents/photos/2019-05-14/");

Test 78: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");

Test 79: 
DirectoryScanner.match("abcd", "efgh");
DirectoryScanner.match("a*b", "a*c");
DirectoryScanner.match("a?b", "a?c");

Test 80: 
DirectoryScanner.match("**/CVS/**", "/**/CVS/**");

Test 81: 
DirectoryScanner.match("*.txt", "W");
DirectoryScanner.match("*f*", "R");
DirectoryScanner.match("*.jpg", "X");

Test 82: 
DirectoryScanner.match("**@?tI*x:", "file1.txt");
DirectoryScanner.match("**@?tI*x:", "file2.txt");
DirectoryScanner.match("**@?tI*x:", "file3.txt");

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.{java,properties}";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("example.java");

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 86: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn DoeDocuments");
directoryScanner.scan();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersUserDesktop");
directoryScanner.scan();
directoryScanner.scan();

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((String) null);
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
String string = "*";
boolean _boolean = true;
directoryScanner.scandir(basedir, string, _boolean);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("testFile", "testFile");
MockFile.createTempFile("testFile", "testFile", (File) mockFile);
directoryScanner.setBasedir("C:\temp");
directoryScanner.scan();

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/user/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
String string = "/home/user/Results-Utestgen/dataset/SF110-new-res";
String string = "example.txt";
MockFile.createTempFile(string, string, (File) basedir);
String string = "**/*~";
boolean _boolean = false;
directoryScanner.scandir(basedir, string, _boolean);

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "testdata1";
stringArray[1] = "testdata2";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("testdata1");

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.getIncludedFiles();

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "file1.txt");
vector.add((Object) "file2.txt");
vector.add((Object) "file3.txt");
directoryScanner.getIncludedFiles();

Test 99: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "", (String) null);
DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/base/directory";
((DirectoryScanner) appendLineToFile).setBasedir(string);
((DirectoryScanner) appendLineToFile).scan();
((DirectoryScanner) appendLineToFile).getNotIncludedFiles();

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) null);
directoryScanner.getExcludedFiles();

Test 101: 
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"/home/roham/Results-Utestgen/dataset/SF110-new-res").setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getIncludedDirectories();

Test 102: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("C:Temp");
directoryScanner.getIncludedDirectories();

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("testfile123");
MockFile.createTempFile("testfile123", "testfile123", (File) mockFile);
directoryScanner.setBasedir("C:Users\testuser");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 104: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();

Test 105: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

Test 106: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("examplefile1.txt", "examplefile2.txt");
directoryScanner.scandir(mockFile, "exampledir", true);

Test 107: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[0] = "com.lts.lang.classloader.AnotherFileFilter";
stringArray[0] = "com.lts.lang.classloader.SomeOtherFileFilter";
directoryScanner.setIncludes(stringArray);

Test 108: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("c:\temp");
directoryScanner.getBasedir();

Test 109: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src/test/resources");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
directoryScanner.getBasedir();

Test 110: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
directoryScanner.isIncluded("src/main/java/com/example/App.java");

Test 111: 


* Generated after the refinement and before minimization 112 tests with total length 389
* test suite isTestSuite: 112
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 3: 
DirectoryScanner.matchPatternStart("/*(", "/");
Test 4: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");
Test 5: 
DirectoryScanner.matchPatternStart("/W", "/**");
Test 6: 
DirectoryScanner.matchPatternStart("/", "/basedir does not exist");
Test 7: 
DirectoryScanner.matchPath("/**/CVS", "/");
Test 8: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*W/~");
Test 9: 
DirectoryScanner.matchPath("/*M*home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 10: 
DirectoryScanner.matchPath("//", "/IO error scanning directory ");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 12: 
DirectoryScanner.matchPath("/**/.cvsignore", "/W");
Test 13: 
DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");
Test 14: 
DirectoryScanner.matchPath("**/**", "**/**");
Test 15: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("**");
Test 16: 
DirectoryScanner.matchPatternStart("Q5e|DzGL?Hk", "Q5e|DzGL?Hk");
Test 17: 
DirectoryScanner.match("/W", "\"[");
Test 18: 
DirectoryScanner.matchPath("/*/e*G", "/*/e*G");
Test 19: 
DirectoryScanner.match(" *", "");
Test 20: 
DirectoryScanner.matchPath("i?*", "i?*");
Test 21: 
DirectoryScanner.match("/**", "/");
Test 22: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 23: 
DirectoryScanner.match("*?", "*?");
Test 24: 
DirectoryScanner.match("**/CVS**", "/**/CVS");
Test 25: 
DirectoryScanner.match("*f*", "W");
Test 26: 
DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("w~^J[THE!Pdy40|");
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "w~^J[THE!Pdy40|";
stringArray[1] = "w~^J[THE!Pdy40|";
stringArray[2] = "/, [";
stringArray[3] = "w~^J[THE!Pdy40|";
stringArray[4] = "w~^J[THE!Pdy40|";
stringArray[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(stringArray);
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&yzv5f@FLhy)X");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("Usv0=+", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/**_/*~78_caloriecount
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
directoryScanner.scandir(basedir, "**/*~", true);
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", ";o$FB\"ya", (File) basedir);
directoryScanner.scandir(basedir, "**/*~", false);
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "^t9Un)ftW09*=%";
stringArray[1] = "^t9Un)ftW09*=%";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("^t9Un)ftW09*=%");
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
directoryScanner.getIncludedFiles();
Test 44: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesExcluded = vector;
vector.add((Object) directoryScanner);
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // com.lts.io.DirectoryScanner cannot be cast to java.lang.String
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("jF\nOKCPfVk", "jF\nOKCPfVk");
try { 
  directoryScanner.scandir(mockFile, "jF\nOKCPfVk", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/jF
   // OKCPfVk/jF
   // OKCPfVk
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
directoryScanner.getBasedir();
Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
directoryScanner.getBasedir();
Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("#*#");
Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn DoeDocuments");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();

Test 58: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("example");
MockFile.createTempFile("example", "example", (File) mockFile);
directoryScanner.setBasedir("/path/to/base/dir");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 59: 
DirectoryScanner.matchPatternStart("/*(regex_pattern)", "/*(/user/home/documents)");

Test 60: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git");

Test 61: 
DirectoryScanner.matchPatternStart("/W", "/*");

Test 62: 
DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist");
DirectoryScanner.matchPatternStart("//", "//base/dir2 does not exist");
DirectoryScanner.matchPatternStart("/basedir/subdir/", "/basedir/subdir/file1.txt exists");

Test 63: 
DirectoryScanner.matchPath("/**/CVS", "/home/user1/project1");
DirectoryScanner.matchPath("/**/CVS", "/home/user2/project2");
DirectoryScanner.matchPath("/**/CVS", "/var/www/html/cvs-repo");

Test 64: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("/home/user/Documents/myProject");
directoryScanner.isExcluded("*.txt");
directoryScanner.isExcluded("*W/~");

Test 65: 
DirectoryScanner.matchPath("/*M*data/input/SF110-new-res0/data/input/SF110-new-res", "/data/input/SF110-new-res");

Test 66: 
DirectoryScanner.matchPath("//", "//");

Test 67: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
directoryScanner.isExcluded("*.tmp");
directoryScanner.isExcluded("*.bak");
directoryScanner.isExcluded("*.log");
directoryScanner.isExcluded("*.zip");

Test 68: 
DirectoryScanner.matchPath("/**/.gitignore", "/Users/johndoe/Projects/MyApp");

Test 69: 
DirectoryScanner.matchPath("**/CVS/*", "**/*.txt");

Test 70: 
DirectoryScanner.matchPath("**/**", "**/**");

Test 71: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("ALL_TEXT_FILES");

Test 72: 
DirectoryScanner.matchPatternStart("A_1234", "A_1234");

Test 73: 
DirectoryScanner.match("/W+", "[[");

Test 74: 
DirectoryScanner.matchPath("src/main/java/com/example/*.java", "src/main/java/com/example/*.java");

Test 75: 
DirectoryScanner.match(" *", "");

Test 76: 
DirectoryScanner.matchPath("i*", "i?");
DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*");
DirectoryScanner.matchPath("i?*", "i[0-9]?*");

Test 77: 
DirectoryScanner.match("/**", "/home/user/Documents/photos/2019-05-14/");

Test 78: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");

Test 79: 
DirectoryScanner.match("abcd", "efgh");
DirectoryScanner.match("a*b", "a*c");
DirectoryScanner.match("a?b", "a?c");

Test 80: 
DirectoryScanner.match("**/CVS/**", "/**/CVS/**");

Test 81: 
DirectoryScanner.match("*.txt", "W");
DirectoryScanner.match("*f*", "R");
DirectoryScanner.match("*.jpg", "X");

Test 82: 
DirectoryScanner.match("**@?tI*x:", "file1.txt");
DirectoryScanner.match("**@?tI*x:", "file2.txt");
DirectoryScanner.match("**@?tI*x:", "file3.txt");

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.{java,properties}";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("example.java");

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 86: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn DoeDocuments");
directoryScanner.scan();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersUserDesktop");
directoryScanner.scan();
directoryScanner.scan();

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((String) null);
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
String string = "*";
boolean _boolean = true;
directoryScanner.scandir(basedir, string, _boolean);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("testFile", "testFile");
MockFile.createTempFile("testFile", "testFile", (File) mockFile);
directoryScanner.setBasedir("C:\temp");
directoryScanner.scan();

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/user/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
String string = "/home/user/Results-Utestgen/dataset/SF110-new-res";
String string = "example.txt";
MockFile.createTempFile(string, string, (File) basedir);
String string = "**/*~";
boolean _boolean = false;
directoryScanner.scandir(basedir, string, _boolean);

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "testdata1";
stringArray[1] = "testdata2";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("testdata1");

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.getIncludedFiles();

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "file1.txt");
vector.add((Object) "file2.txt");
vector.add((Object) "file3.txt");
directoryScanner.getIncludedFiles();

Test 99: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "", (String) null);
DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/base/directory";
((DirectoryScanner) appendLineToFile).setBasedir(string);
((DirectoryScanner) appendLineToFile).scan();
((DirectoryScanner) appendLineToFile).getNotIncludedFiles();

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) null);
directoryScanner.getExcludedFiles();

Test 101: 
String string = "/home/roham/Results-Utestgen/dataset/SF110-new-res";
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"/home/roham/Results-Utestgen/dataset/SF110-new-res").setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getIncludedDirectories();

Test 102: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("C:Temp");
directoryScanner.getIncludedDirectories();

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("testfile123");
MockFile.createTempFile("testfile123", "testfile123", (File) mockFile);
directoryScanner.setBasedir("C:Users\testuser");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 104: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();

Test 105: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();

Test 106: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("examplefile1.txt", "examplefile2.txt");
directoryScanner.scandir(mockFile, "exampledir", true);

Test 107: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[0] = "com.lts.lang.classloader.AnotherFileFilter";
stringArray[0] = "com.lts.lang.classloader.SomeOtherFileFilter";
directoryScanner.setIncludes(stringArray);

Test 108: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("c:\temp");
directoryScanner.getBasedir();

Test 109: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src/test/resources");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
directoryScanner.getBasedir();

Test 110: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
directoryScanner.isIncluded("src/main/java/com/example/App.java");

Test 111: 


* Minimizing test suite
* test suite isTestSuite: 55
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn DoeDocuments");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "testdata1";
stringArray[1] = "testdata2";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("testdata1");
Test 3: 
DirectoryScanner.matchPatternStart("/*(", "/");
Test 4: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git");
Test 5: 
DirectoryScanner.matchPatternStart("/W", "/*");
Test 6: 
DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist");
Test 7: 
DirectoryScanner.matchPath("/**/CVS", "/");
Test 8: 
DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*");
Test 9: 
DirectoryScanner.matchPath("//", "/IO error scanning directory ");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*.tmp");
Test 12: 
DirectoryScanner.matchPath("**/**", "**/**");
Test 13: 
DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");
Test 14: 
DirectoryScanner.match("a?b", "a?c");
Test 15: 
DirectoryScanner.matchPath("**/CVS/*", "**/*.txt");
Test 16: 
DirectoryScanner.match(" *", "");
Test 17: 
DirectoryScanner.matchPath("i?*", "i[0-9]?*");
Test 18: 
DirectoryScanner.match("/**", "/");
Test 19: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 20: 
DirectoryScanner.match("*?", "*?");
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*W/~");
Test 22: 
DirectoryScanner.match("*f*", "R");
Test 23: 
DirectoryScanner.match("**/CVS**", "/**/CVS");
Test 24: 
DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "w~^J[THE!Pdy40|";
stringArray[1] = "w~^J[THE!Pdy40|";
stringArray[2] = "/, [";
stringArray[3] = "w~^J[THE!Pdy40|";
stringArray[4] = "w~^J[THE!Pdy40|";
stringArray[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(stringArray);
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
directoryScanner.getExcludedDirectories();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/**_/*~78_caloriecount
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
directoryScanner.scandir(basedir, "**/*~", true);
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
directoryScanner.getIncludedFiles();
Test 40: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesExcluded = vector;
vector.add((Object) directoryScanner);
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // com.lts.io.DirectoryScanner cannot be cast to java.lang.String
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("examplefile1.txt", "examplefile2.txt");
try { 
  directoryScanner.scandir(mockFile, "exampledir", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/examplefile1.txt/examplefile2.txt
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
directoryScanner.getBasedir();
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
directoryScanner.getBasedir();
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("#*#");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("w~^J[THE!Pdy40|");
Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 232
* Number of covered goals: 222
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 307
* Number of covered goals: 303
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 62
* Number of covered goals: 46
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 232
* Number of covered goals: 222
* Generated 55 tests with total length 191
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn DoeDocuments");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSetBasedirInvalidPathThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File basedir = directoryScanner.getBasedir();
assertNull(basedir);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithoutBaseDir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[2];
arg0[0] = "testdata1";
arg0[1] = "testdata2";
directoryScanner.setIncludes(arg0);
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("testdata1");
assertTrue(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncludedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/*(", "/");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartWithForwardSlash
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("**/CVS/**", "**/*.git");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartWithCVS
* Compiling Tests
refined test name is: testMatchPatternStartWithCVS
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/W", "/*");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartFalseForStarPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/", "/base/dir1 does not exist");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testInvalidDirectoryMatchPatternStart
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**/CVS", "/");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithForwardSlashes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("i[0-9]*", "i[a-z]*");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithOnlyNumbers
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("//", "/IO error scanning directory ");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithNonExistentDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
boolean excluded = directoryScanner.isExcluded("*~");
assertTrue(excluded);


** It was a parseable test case! 
refined test name is: testIsExcludedWhenGlobPatternMatches
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
boolean excluded = directoryScanner.isExcluded("*.tmp");
assertFalse(excluded);


** It was a parseable test case! 
refined test name is: testIsExcludedNoMatchingFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/**", "**/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithWildcards
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithMultipleWildcardCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("a?b", "a?c");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchWithQuestionMarkWhenNoMatchReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/CVS/*", "**/*.txt");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithCVSInPathReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match(" *", "");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchesEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("i?*", "i[0-9]?*");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithQuestionMark
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("/**", "/");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchValidDirectoryPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchIdentifiesNonMatches
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("*?", "*?");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchWildcardPatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
boolean excluded = directoryScanner.isExcluded("*W/~");
assertTrue(excluded);


** It was a parseable test case! 
refined test name is: testDefaultExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("*f*", "R");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchWithPatternAndInputreturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/CVS**", "/**/CVS");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchCVSDirectory
* Compiling Tests
refined test name is: testDirectoryScannerMatchesCVSDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchValidPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
refined test name is: testSetIncludesToNullShouldResultInEmptyArray
* Compiling Tests
refined test name is: testSetIncludesToNullShouldSetEmptyList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[6];
arg0[0] = "w~^J[THE!Pdy40|";
arg0[1] = "w~^J[THE!Pdy40|";
arg0[2] = "/, [";
arg0[3] = "w~^J[THE!Pdy40|";
arg0[4] = "w~^J[THE!Pdy40|";
arg0[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(arg0);
assertEquals(6, arg0.length);


** It was a parseable test case! 
refined test name is: testSetIncludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
refined test name is: testNoExclusionPatternsShouldNotExcludeFiles
* Compiling Tests
refined test name is: testScanWithNoExclusions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[8];
arg0[0] = "6/";
arg0[1] = "6/";
arg0[2] = "6/";
arg0[3] = "6/";
arg0[4] = "/4hb{,";
arg0[5] = "6/";
arg0[6] = "6/";
arg0[7] = "6/";
directoryScanner.setExcludes(arg0);
assertEquals(8, arg0.length);


** It was a parseable test case! 
refined test name is: testSetExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanWithoutBasedirSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File arg0 = MockFile.createTempFile("example_file", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir(arg0);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanThrowsExceptionWhenBasedirIsNotADirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();

** It was a parseable test case! 
refined test name is: testScanMethodReturnsFilesInBaseDirectory
* Compiling Tests
refined test name is: testScanReturnsListOfFilesInBaseDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertNotSame(excludedDirectories, notIncludedFiles);


** It was a parseable test case! 
refined test name is: testScanDirectoryReturnsNotIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile arg0 = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(arg0, "**/*~", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/**_/*~78_caloriecount
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScandirThrowsExceptionOnInvalidGlobPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile arg0 = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) arg0);
directoryScanner.scandir(arg0, "**/*~", false);
assertTrue(arg0.canRead());


** It was a parseable test case! 
refined test name is: testDirectoryScannerScan
* Compiling Tests
refined test name is: testScandirWithPatternAndAddToFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
File arg0 = directoryScanner.getBasedir();
directoryScanner.scandir(arg0, "**/*~", true);
assertFalse(arg0.isFile());


** It was a parseable test case! 
refined test name is: testBasedirAndScanMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) arg2);
directoryScanner.setBasedir("");
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithNoExclusions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile arg0 = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) arg0);
directoryScanner.scandir(arg0, "**/*~", false);
assertEquals(0L, arg0.getUsableSpace());


** It was a parseable test case! 
refined test name is: testExcludedFilesAreNotIncludedInScanResult
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
String[] includedFiles = directoryScanner.getIncludedFiles();
assertNotNull(includedFiles);
assertEquals(0, includedFiles.length);


** It was a parseable test case! 
refined test name is: testGetIncludedFilesWithEmptyVector
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
String[] includedFiles = directoryScanner.getIncludedFiles();
assertNotNull(includedFiles);
assertEquals(1, includedFiles.length);


** It was a parseable test case! 
refined test name is: testAddCommaAndOpeningBracketToVectorOfObjects
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(arg0, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(1, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testAppendLineToFileWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner arg0 = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
arg0.filesExcluded = vector;
vector.add((Object) arg0);
arg0.haveSlowResults = true;
// Undeclared exception!
try { 
  arg0.getExcludedFiles();
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // com.lts.io.DirectoryScanner cannot be cast to java.lang.String
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testGetExcludedFilesThrowsClassCastException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(0, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testEmptyDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertNotNull(includedDirectories);
assertEquals(1, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testGetIncludedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(0, notIncludedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanBaseDirectoryWithNoNotIncludedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) arg2);
directoryScanner.setBasedir("");
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(1, notIncludedDirectories.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithInvalidFile
* Compiling Tests
refined test name is: testScanWithMockFileReturnsOneNotIncludedDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile arg0 = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(arg0, "**/*~", false);
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(1, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testGetNotIncludedFilesReturnsExpectedFiles
* Compiling Tests
refined test name is: testGetNotIncludedFilesWhenExcludesAreSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
refined test name is: testScanShouldReturnOnlyNonExcludedFiles
* Compiling Tests
refined test name is: testScanShouldReturnOnlyIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("examplefile1.txt", "examplefile2.txt");
try { 
  directoryScanner.scandir(arg0, "exampledir", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/examplefile1.txt/examplefile2.txt
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScandirThrowsIOExceptionWhenFileNotFound
* Compiling Tests
refined test name is: testScanDirWhenIOExceptionOccursVerifyException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(arg0);
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");
assertFalse(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncludedWithNonMatchingFilter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
File basedir = directoryScanner.getBasedir();
assertFalse(basedir.exists());


** It was a parseable test case! 
refined test name is: testDirectoryScannerSetAndGetBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile arg0 = new EvoSuiteFile("basedir does not exist");
byte[] arg1 = new byte[2];
FileSystemHandling.appendDataToFile(arg0, arg1);
File basedir = directoryScanner.getBasedir();
assertFalse(basedir.isDirectory());


** It was a parseable test case! 
refined test name is: testAppendDataToFileNonDirectoryBaseDir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[0];
directoryScanner.setIncludes(arg0);
boolean included = directoryScanner.isIncluded("#*#");
assertFalse(included);


** It was a parseable test case! 
refined test name is: testIsIncludedWithEmptyIncludePatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(arg0);
boolean included = directoryScanner.isIncluded("w~^J[THE!Pdy40|");
assertTrue(included);


** It was a parseable test case! 
refined test name is: testIsIncludedWithMatchingIncludePattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSlowScanThrowsNullPointerException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.298 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.385 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.386 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.436 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.489 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:12.533 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.534 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.567 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.568 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.611 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.655 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.656 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.700 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.701 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.738 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.775 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.811 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.847 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.848 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.883 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.884 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.928 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:12.979 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:12.981 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.031 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.084 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.095 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.150 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.210 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.276 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.329 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.330 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:13.461 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.462 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.518 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:13.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.575 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.630 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:13.686 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.687 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.740 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.795 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.853 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.854 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:13.909 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:13.961 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:13.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:14.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.152 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.153 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.196 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
[MASTER] 05:33:14.230 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.231 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.266 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.340 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.388 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.434 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.435 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 05:33:14.493 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:14.542 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.543 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:14.605 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:14.671 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.673 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:14.721 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.772 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.773 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.830 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.831 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.898 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:14.956 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:14.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:15.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:15.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:15.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:15.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 23 called: 1 to improve: false
** Write a test suite: 25 called: 2 to improve: false
** Write a test suite: 27 called: 3 to improve: false
** Write a test suite: 31 called: 4 to improve: false
** Write a test suite: 34 called: 5 to improve: false
** Write a test suite: 45 called: 6 to improve: false
** Write a test suite: 46 called: 7 to improve: false
** Write a test suite: 47 called: 8 to improve: false
** Write a test suite: 48 called: 9 to improve: false
[MASTER] 05:33:16.134 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:16.135 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 9 called: 3 to improve: false
** Write a test suite: 20 called: 4 to improve: false
** Write a test suite: 23 called: 5 to improve: false
** Write a test suite: 27 called: 6 to improve: false
** Write a test suite: 29 called: 7 to improve: false
** Write a test suite: 31 called: 8 to improve: false
** Write a test suite: 50 called: 9 to improve: false
[MASTER] 05:33:17.136 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:17.137 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
[MASTER] 05:33:18.774 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 57
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 3: 
DirectoryScanner.matchPatternStart("/*(", "/");
Test 4: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");
Test 5: 
DirectoryScanner.matchPatternStart("/W", "/**");
Test 6: 
DirectoryScanner.matchPatternStart("/", "/basedir does not exist");
Test 7: 
DirectoryScanner.matchPath("/**/CVS", "/");
Test 8: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*W/~");
Test 9: 
DirectoryScanner.matchPath("/*M*home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 10: 
DirectoryScanner.matchPath("//", "/IO error scanning directory ");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 12: 
DirectoryScanner.matchPath("/**/.cvsignore", "/W");
Test 13: 
DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");
Test 14: 
DirectoryScanner.matchPath("**/**", "**/**");
Test 15: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("**");
Test 16: 
DirectoryScanner.matchPatternStart("Q5e|DzGL?Hk", "Q5e|DzGL?Hk");
Test 17: 
DirectoryScanner.match("/W", "\"[");
Test 18: 
DirectoryScanner.matchPath("/*/e*G", "/*/e*G");
Test 19: 
DirectoryScanner.match(" *", "");
Test 20: 
DirectoryScanner.matchPath("i?*", "i?*");
Test 21: 
DirectoryScanner.match("/**", "/");
Test 22: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 23: 
DirectoryScanner.match("*?", "*?");
Test 24: 
DirectoryScanner.match("**/CVS**", "/**/CVS");
Test 25: 
DirectoryScanner.match("*f*", "W");
Test 26: 
DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("w~^J[THE!Pdy40|");
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "w~^J[THE!Pdy40|";
stringArray[1] = "w~^J[THE!Pdy40|";
stringArray[2] = "/, [";
stringArray[3] = "w~^J[THE!Pdy40|";
stringArray[4] = "w~^J[THE!Pdy40|";
stringArray[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(stringArray);
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&yzv5f@FLhy)X");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("Usv0=+", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/**_/*~78_caloriecount
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
directoryScanner.scandir(basedir, "**/*~", true);
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", ";o$FB\"ya", (File) basedir);
directoryScanner.scandir(basedir, "**/*~", false);
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "^t9Un)ftW09*=%";
stringArray[1] = "^t9Un)ftW09*=%";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("^t9Un)ftW09*=%");
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
directoryScanner.getIncludedFiles();
Test 44: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesExcluded = vector;
vector.add((Object) directoryScanner);
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // com.lts.io.DirectoryScanner cannot be cast to java.lang.String
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("jF\nOKCPfVk", "jF\nOKCPfVk");
try { 
  directoryScanner.scandir(mockFile, "jF\nOKCPfVk", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/jF
   // OKCPfVk/jF
   // OKCPfVk
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
directoryScanner.getBasedir();
Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
directoryScanner.getBasedir();
Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("#*#");
Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
* test suite isTestSuite: 56
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&yzv5f@FLhy)X");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("**/CVS/**", "**/CVS/**");
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/");
directoryScanner.scan();
directoryScanner.scan();
Test 4: 
DirectoryScanner.matchPatternStart("/", "/basedir does not exist");
Test 5: 
DirectoryScanner.matchPatternStart("/*(", "/");
Test 6: 
DirectoryScanner.matchPatternStart("/W", "/**");
Test 7: 
DirectoryScanner.matchPatternStart("Q5e|DzGL?Hk", "Q5e|DzGL?Hk");
Test 8: 
DirectoryScanner.matchPath("**/**", "**/**");
Test 9: 
DirectoryScanner.matchPath("/*/e*G", "/*/e*G");
Test 10: 
DirectoryScanner.matchPath("/**/CVS", "/");
Test 11: 
DirectoryScanner.matchPath("/*M*home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 12: 
DirectoryScanner.matchPath("//", "/IO error scanning directory ");
Test 13: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 14: 
DirectoryScanner.matchPath("/**/.cvsignore", "/W");
Test 15: 
DirectoryScanner.matchPath("**/CVS/**", "**/CVS/**");
Test 16: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("**");
Test 17: 
DirectoryScanner.match("/W", "\"[");
Test 18: 
DirectoryScanner.match(" *", "");
Test 19: 
DirectoryScanner.matchPath("i?*", "i?*");
Test 20: 
DirectoryScanner.match("/**", "/");
Test 21: 
DirectoryScanner.match("/**/*~home/roham/Results-Utestgen/dataset/SF110-new-res0/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res");
Test 22: 
DirectoryScanner.match("*?", "*?");
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*W/~");
Test 24: 
DirectoryScanner.match("**/CVS**", "/**/CVS");
Test 25: 
DirectoryScanner.match("*f*", "W");
Test 26: 
DirectoryScanner.match("**@?tI*x:", "**@?tI*x:");
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("#*#");
Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "com.lts.lang.classloader.SimpleFileFilter";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("oR7}T'.Dlz2KM%{k");
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "w~^J[THE!Pdy40|";
stringArray[1] = "w~^J[THE!Pdy40|";
stringArray[2] = "/, [";
stringArray[3] = "w~^J[THE!Pdy40|";
stringArray[4] = "w~^J[THE!Pdy40|";
stringArray[5] = "w~^J[THE!Pdy40|/";
directoryScanner.setIncludes(stringArray);
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "6/";
stringArray[1] = "6/";
stringArray[2] = "6/";
stringArray[3] = "6/";
stringArray[4] = "/4hb{,";
stringArray[5] = "6/";
stringArray[6] = "6/";
stringArray[7] = "6/";
directoryScanner.setExcludes(stringArray);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("Usv0=+", "_*:{q`T%K6f+0/G'");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
directoryScanner.getNotIncludedDirectories();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scandir(mockFile, "**/*~", false);
try { 
  directoryScanner.getExcludedDirectories();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/**_/*~78_caloriecount
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!Yv", "mcdE!Yv");
MockFile.createTempFile("mcdE!Yv", "mcdE!Yv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
directoryScanner.scandir(basedir, "**/*~", true);
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
MockFile basedir = (MockFile)directoryScanner.getBasedir();
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", ";o$FB\"ya", (File) basedir);
directoryScanner.scandir(basedir, "**/*~", false);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
MockFile.createTempFile("/home/roham/Results-Utestgen/dataset/SF110-new-res", "/home/roham/Results-Utestgen/dataset/SF110-new-res", (File) mockFile);
directoryScanner.scandir(mockFile, "**/*~", false);
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "^t9Un)ftW09*=%";
stringArray[1] = "^t9Un)ftW09*=%";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("^t9Un)ftW09*=%");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
vector.add((Object) ", [");
directoryScanner.getIncludedFiles();
Test 45: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("b-@<Wa)70Q9;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesExcluded = vector;
vector.add((Object) directoryScanner);
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // com.lts.io.DirectoryScanner cannot be cast to java.lang.String
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("CAS1;Z/fJ{$E+EsDjYN");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("mcdE!pYv");
MockFile.createTempFile("mcdE!pYv", "mcdE!pYv", (File) mockFile);
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
String[] stringArray = directoryScanner.includes;
directoryScanner.excludes = stringArray;
MockFile mockFile = new MockFile("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.getNotIncludedFiles();
directoryScanner.scandir(mockFile, "**/*~", false);
directoryScanner.getExcludedDirectories();
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("jF\nOKCPfVk", "jF\nOKCPfVk");
try { 
  directoryScanner.scandir(mockFile, "jF\nOKCPfVk", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/jF
   // OKCPfVk/jF
   // OKCPfVk
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
directoryScanner.getBasedir();
Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("basedir does not exist");
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("basedir does not exist");
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
directoryScanner.getBasedir();
Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "w~^J[THE!Pdy40|";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("w~^J[THE!Pdy40|");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
[MASTER] 05:33:32.373 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Coverage of criterion BRANCH: 96%
* Total number of goals: 232
* Number of covered goals: 222
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 307
* Number of covered goals: 303
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 62
* Number of covered goals: 46
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 232
* Number of covered goals: 222
* Generated 56 tests with total length 189
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 05:33:32.574 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 05:33:38.756 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.165 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.234 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.301 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.302 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.455 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.456 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.586 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.591 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.644 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.645 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.694 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:41.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.790 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.846 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.847 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.902 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.903 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:41.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:41.979 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.050 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.051 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.102 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.158 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.217 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.279 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.332 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.450 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.509 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.565 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.621 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.622 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.678 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.679 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.736 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.737 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.797 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.855 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.914 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:42.974 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:42.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.031 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.091 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.211 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.277 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.338 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.339 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.406 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.475 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:33:43.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.539 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.604 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.605 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.668 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.740 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.826 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.827 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.885 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:43.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
[MASTER] 05:33:43.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:43.942 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.013 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.014 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.083 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.084 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.143 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.205 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.267 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.268 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.331 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.332 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.794 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.795 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:33:44.833 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:44.833 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
[MASTER] 05:33:45.106 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:45.107 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
[MASTER] 05:33:45.425 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar8127599669391003679.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:33:45.426 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8127599669391003679.jar
* Writing tests to file
[MASTER] 05:33:45.427 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'DirectoryScanner_ESTest' to evosuite-tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 9 called: 3 to improve: false
** Write a test suite: 20 called: 4 to improve: false
** Write a test suite: 23 called: 5 to improve: false
** Write a test suite: 27 called: 6 to improve: false
** Write a test suite: 29 called: 7 to improve: false
** Write a test suite: 31 called: 8 to improve: false
** Write a test suite: 50 called: 9 to improve: false
* Writing JUnit test case 'DirectoryScanner_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
* Done!

* Computation finished
