* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.event.SimpleKeyListenerHelper
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 5793
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:26:13.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:26:13.379 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:26:13.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:26:13.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:26:13.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:26:13.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:26:16.737 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 20:26:16.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 20:26:16.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 20:26:16.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 20:26:16.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 20:26:16.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 20:26:16.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 20:26:16.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 20:26:16.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 20:26:16.821 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 20:26:16.830 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class com.lts.event.SimpleKeyListenerHelper
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 79
* Using seed 1710275168832
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 38 / 79
[Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:=============================>     84%][Progress:>                             1%] [Cov:=============================>     84%][MASTER] 20:26:22.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 20:26:22.695 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             2%] [Cov:===============================>   89%][Progress:>                             2%] [Cov:===============================>   91%][Progress:>                             2%] [Cov:===============================>   91%][Progress:>                             2%] [Cov:===============================>   91%][Progress:>                             3%] [Cov:===============================>   91%][Progress:>                             3%] [Cov:================================>  94%][Progress:>                             3%] [Cov:================================>  94%][Progress:>                             3%] [Cov:================================>  94%][Progress:>                             3%] [Cov:=================================> 96%][Progress:>                             3%] [Cov:==================================>99%][Progress:>                             3%] [Cov:==================================>99%][Progress:=>                            4%] [Cov:==================================>99%][Progress:=>                            4%] [Cov:===================================100%]
* Search finished after 8s and 15 generations, 16538 statements, best individual has fitness: 0.0
* Generated before the refinement 13 tests with total length 68
statement is: javax.swing.JMenu(Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JMenu
statement code is: JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@39a18b29 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.MenuElement;
statement code is: MenuElement[] menuElementArray = new MenuElement[1]
statement is: defaultManager()Ljavax/swing/MenuSelectionManager; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager()
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, (-2067), (-3442L), (-2067), (-2067), 'X', arg6, arg7)
statement is: keyReleased(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyReleased(arg0)
test data is: JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
simpleKeyListenerHelper.keyReleased(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
        MenuElement[] menuElementArray = new MenuElement[1];
        MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
        // Improved test data:
        int keyCode = KeyEvent.VK_X;
        char keyChar = 'X';
        long when = System.currentTimeMillis();
        int modifiers = InputEvent.CTRL_MASK;
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, -2067, when, -2067, -2067, keyChar, menuElementArray, defaultManager);
        simpleKeyListenerHelper.keyReleased(menuKeyEvent);
    }
}
statement is: JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuElement[] menuElementArray = new MenuElement[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: MenuElement[] menuElementArray = new MenuElement[1] isAssignment: false Array: new MenuElement[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljavax.swing.MenuElement; MenuElement[]
statement is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: MenuSelectionManager.defaultManager() target is: MenuSelectionManager method is: defaultManager()
Matched Method is: defaultManager()Ljavax/swing/MenuSelectionManager;
statement is: // Improved test data:
int keyCode = KeyEvent.VK_X, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: KeyEvent.VK_X is KeyEvent
statement is: char keyChar = 'X', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: long when = System.currentTimeMillis(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.currentTimeMillis() target is: System method is: currentTimeMillis()
statement is: int modifiers = InputEvent.CTRL_MASK, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: InputEvent.CTRL_MASK is InputEvent
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, -2067, when, -2067, -2067, keyChar, menuElementArray, defaultManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyReleased(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyReleased(menuKeyEvent) target is: simpleKeyListenerHelper method is: keyReleased(MenuKeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 3
Matched Method is: keyReleased(Ljava/awt/event/KeyEvent;)V
TestCase is: String string = "com.lts.pest.tree.SimpleTreeListener";
boolean _boolean = false;
MenuElement[] menuElementArray = new JMenu(string, _boolean);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
char _char = 'X';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, _char, (long) menuElementArray, (int) defaultManager, (-2067), 'X', menuElementArray, (MenuSelectionManager) simpleKeyListenerHelper);
((SimpleKeyListenerHelper) _boolean).keyReleased(menuKeyEvent);

statement is: javax.swing.table.DefaultTableModel(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.table.DefaultTableModel
statement code is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8)
statement is: javax.swing.JTable(Ljavax/swing/table/TableModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTable
statement code is: JTable jTable = new JTable(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.JFormattedTextField(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JFormattedTextField
statement code is: JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ")
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, (-3471), 127, 8, 8, 'h')
statement is: keyTyped(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyTyped(arg0)
test data is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyTyped(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
        JTable jTable = new JTable(defaultTableModel);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
        JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are different objects: ");
        KeyEvent keyEvent = new KeyEvent(jFormattedTextField, -3471, 127, 8, 8, 'h');
        simpleKeyListenerHelper.keyTyped(keyEvent);
    }
}
statement is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTable jTable = new JTable(defaultTableModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are different objects: "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(jFormattedTextField, -3471, 127, 8, 8, 'h'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyTyped(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyTyped(keyEvent) target is: simpleKeyListenerHelper method is: keyTyped(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 4
Matched Method is: keyTyped(Ljava/awt/event/KeyEvent;)V
TestCase is: int _int = 8;
int _int = 8;
DefaultTableModel defaultTableModel = new DefaultTableModel(_int, _int);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
String string = "Child and parent are different objects: ";
JFormattedTextField jFormattedTextField = new JFormattedTextField(string);
int _int = 127;
int _int = 8;
int _int = 8;
char _char = 'h';
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, _int, _int, _int, _char, 'h');
((SimpleKeyListenerHelper) defaultTableModel).keyTyped(keyEvent);

statement is: org.evosuite.testcase.statements.ArrayStatement@1b3a794d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[1]
statement is: javax.swing.JList([Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type javax.swing.JList<java.lang.Object>
statement code is: JList<Object> jList = new JList<Object>(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: detach()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.detach()
statement is: detach()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.detach()
test data is: Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Object[] objectArray = new Object[]{ new Object("test1", 1), new Object("test2", 2), new Object("test3", 3), new Object("test4", 4), new Object("test5", 5) };
        JList<Object> jList = new JList<Object>(objectArray);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
        simpleKeyListenerHelper.detach();
        simpleKeyListenerHelper.detach();
    }
}
statement is: Object[] objectArray = new Object[]{ new Object("test1", 1), new Object("test2", 2), new Object("test3", 3), new Object("test4", 4), new Object("test5", 5) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: Object[] objectArray = new Object[1] isAssignment: false Array: new Object[]{ new Object("test1", 1), new Object("test2", 2), new Object("test3", 3), new Object("test4", 4), new Object("test5", 5) } Elements: [new Object("test1", 1), new Object("test2", 2), new Object("test3", 3), new Object("test4", 4), new Object("test5", 5)]
lengths: [1] []
statement is: JList<Object> jList = new JList<Object>(objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: javax.swing.JList([Ljava/lang/Object;)V
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V
statement is: simpleKeyListenerHelper.detach(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.detach() target is: simpleKeyListenerHelper method is: detach()
statement is: simpleKeyListenerHelper.detach(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.detach() target is: simpleKeyListenerHelper method is: detach()
statement is: javax.swing.table.DefaultTableModel(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.table.DefaultTableModel
statement code is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0)
statement is: javax.swing.JTable(Ljavax/swing/table/TableModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTable
statement code is: JTable jTable = new JTable(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, 9, "/resources/swing.properties")
test data is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, "/resources/swing.properties");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
        JTable jTable = new JTable(defaultTableModel);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_ENTER, "/resources/swing.properties");
    }
}
statement is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTable jTable = new JTable(defaultTableModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_ENTER, "/resources/swing.properties"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_ENTER, "/resources/swing.properties") target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,java.lang.String)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 4
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: int _int = 0;
int _int = 0;
DefaultTableModel defaultTableModel = new DefaultTableModel(_int, _int);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
String string = "/resources/swing.properties";
String string = null;
((SimpleKeyListenerHelper) defaultTableModel).notifyListener(simpleKeyListenerAdapter, (int) string, string);

statement is: javax.swing.table.DefaultTableModel(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.table.DefaultTableModel
statement code is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8)
statement is: javax.swing.JTable(Ljavax/swing/table/TableModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTable
statement code is: JTable jTable = new JTable(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, 127, arg2)
test data is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, jTable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
        JTable jTable = new JTable(defaultTableModel);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, new KeyEvent(jTable, KeyEvent.KEY_PRESSED, 0, 0, KeyEvent.VK_DELETE));
    }
}
statement is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTable jTable = new JTable(defaultTableModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, new KeyEvent(jTable, KeyEvent.KEY_PRESSED, 0, 0, KeyEvent.VK_DELETE)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, new KeyEvent(jTable, KeyEvent.KEY_PRESSED, 0, 0, KeyEvent.VK_DELETE)) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,KeyEvent)
TestCase is: int _int = 8;
int _int = 8;
DefaultTableModel defaultTableModel = new DefaultTableModel(_int, _int);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();

statement is: javax.swing.JMenu(Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JMenu
statement code is: JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@f665fa7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.MenuElement;
statement code is: MenuElement[] menuElementArray = new MenuElement[1]
statement is: defaultManager()Ljavax/swing/MenuSelectionManager; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager()
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, (-2067), (-3442L), (-2067), (-2067), 'X', arg6, arg7)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, 10, arg2)
test data is: JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
        MenuElement[] menuElementArray = new MenuElement[10];
        MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, "menuKeyEventId", -3442L, "menuKeyEventWhenParameter", -2067, 'X', menuElementArray, defaultManager);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, "numberOfMenuElements", menuKeyEvent);
    }
}
statement is: JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuElement[] menuElementArray = new MenuElement[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: MenuElement[] menuElementArray = new MenuElement[1] isAssignment: false Array: new MenuElement[10] Elements: []
lengths: [1] [10]
Their type are: class [Ljavax.swing.MenuElement; MenuElement[]
statement is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: MenuSelectionManager.defaultManager() target is: MenuSelectionManager method is: defaultManager()
Matched Method is: defaultManager()Ljavax/swing/MenuSelectionManager;
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, "menuKeyEventId", -3442L, "menuKeyEventWhenParameter", -2067, 'X', menuElementArray, defaultManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, "numberOfMenuElements", menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, "numberOfMenuElements", menuKeyEvent) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,java.lang.String,MenuKeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 3
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
TestCase is: String string = "com.lts.pest.tree.SimpleTreeListener";
boolean _boolean = false;
MenuElement[] menuElementArray = new JMenu(string, _boolean);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
String string = "menuKeyEventId";
String string = "menuKeyEventWhenParameter";
char _char = 'X';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, (int) string, (long) string, _char, (int) menuElementArray, (char) defaultManager, menuElementArray, (MenuSelectionManager) simpleKeyListenerHelper);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
String string = "numberOfMenuElements";
((SimpleKeyListenerHelper) _boolean).notifyListener(simpleKeyListenerAdapter, (int) string, menuKeyEvent);

statement is: javax.swing.JMenu(Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JMenu
statement code is: JMenu jMenu = new JMenu((String) null, false)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, 155, arg2)
test data is: JMenu jMenu = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, jMenu);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JMenu jMenu = new JMenu("File", false);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_F, jMenu);
    }
}
statement is: JMenu jMenu = new JMenu("File", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_F, jMenu), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_F, jMenu) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,JMenu)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 3
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: String string = "File";
boolean _boolean = false;
JMenu jMenu = new JMenu(string, _boolean);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
JMenu jMenu = null;
((SimpleKeyListenerHelper) _boolean).notifyListener(simpleKeyListenerAdapter, (int) jMenu, jMenu);

statement is: org.evosuite.testcase.statements.ArrayStatement@dd185ba4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[1]
statement is: javax.swing.JList([Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type javax.swing.JList<java.lang.Object>
statement code is: JList<Object> jList = new JList<Object>(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null)
test data is: Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Object[] objectArray = new Object[]{ new Integer(1), "test", new Double(3.14) };
        JList<Object> jList = new JList<Object>(objectArray);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
        simpleKeyListenerHelper.notifyListener(((Object) (null)), -1, ((Object) (null)));
    }
}
statement is: Object[] objectArray = new Object[]{ new Integer(1), "test", new Double(3.14) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: Object[] objectArray = new Object[1] isAssignment: false Array: new Object[]{ new Integer(1), "test", new Double(3.14) } Elements: [new Integer(1), "test", new Double(3.14)]
lengths: [1] []
statement is: JList<Object> jList = new JList<Object>(objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: javax.swing.JList([Ljava/lang/Object;)V
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V
statement is: simpleKeyListenerHelper.notifyListener(((Object) (null)), -1, ((Object) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(((Object) (null)), -1, ((Object) (null))) target is: simpleKeyListenerHelper method is: notifyListener(java.lang.Object,int,java.lang.Object)
statement is: javax.swing.table.DefaultTableModel(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.table.DefaultTableModel
statement code is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0)
statement is: javax.swing.JTable(Ljavax/swing/table/TableModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTable
statement code is: JTable jTable = new JTable(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.JRadioButtonMenuItem(Ljava/lang/String;Ljavax/swing/Icon;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JRadioButtonMenuItem
statement code is: JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 9, 0L, 2911, 9, '$')
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true);
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultTableModel defaultTableModel = new DefaultTableModel(new Object[][]{ new Object[]{ "John", "Doe" }, new Object[]{ "Jane", "Smith" } }, new String[]{ "First Name", "Last Name" });
        JTable jTable = new JTable(defaultTableModel);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
        JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", ((Icon) (null)), true);
        KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: DefaultTableModel defaultTableModel = new DefaultTableModel(new Object[][]{ new Object[]{ "John", "Doe" }, new Object[]{ "Jane", "Smith" } }, new String[]{ "First Name", "Last Name" }), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTable jTable = new JTable(defaultTableModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", ((Icon) (null)), true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 2
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
String string = "com.lts.event.SimpleKeyListenerHelper";
boolean _boolean = true;
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem(string, (Icon) _boolean, true);
int _int = 9;
long _long = 0L;
int _int = 2911;
int _int = 9;
char _char = '$';
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, _int, _long, _int, _int, _char);
simpleKeyListenerHelper.keyPressed(keyEvent);

statement is: javax.swing.table.DefaultTableModel(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.table.DefaultTableModel
statement code is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8)
statement is: javax.swing.JTable(Ljavax/swing/table/TableModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTable
statement code is: JTable jTable = new JTable(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.JFormattedTextField(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JFormattedTextField
statement code is: JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ")
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, (-3471), 127, 8, 8, 'h')
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
        JTable jTable = new JTable(defaultTableModel);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
        JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
        // Changed the integer value to a more descriptive example (e.g., 127)
        KeyEvent keyEvent = new KeyEvent(jFormattedTextField, -3471, 127, 8, 8, 'h');
        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTable jTable = new JTable(defaultTableModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the integer value to a more descriptive example (e.g., 127)
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, -3471, 127, 8, 8, 'h'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 4
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: int _int = 8;
int _int = 8;
DefaultTableModel defaultTableModel = new DefaultTableModel(_int, _int);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
String string = "Child and parent are the same object: ";
JFormattedTextField jFormattedTextField = new JFormattedTextField(string);
int _int = 127;
int _int = 8;
int _int = 8;
char _char = 'h';
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, _int, _int, _int, _char, 'h');
((SimpleKeyListenerHelper) defaultTableModel).keyPressed(keyEvent);

statement is: javax.swing.table.DefaultTableModel(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.table.DefaultTableModel
statement code is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0)
statement is: javax.swing.JTable(Ljavax/swing/table/TableModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTable
statement code is: JTable jTable = new JTable(arg0)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 0, 0L, 10, 10, 'j')
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 0, 0L, 10, 10, 'j');
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultTableModel defaultTableModel = new DefaultTableModel(10, 5);// Improved: changed primitive values to more descriptive examples.

        JTable jTable = new JTable(defaultTableModel);
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
        KeyEvent keyEvent = new KeyEvent(jTable, 10, 0L, 20, 20, 'a');// Improved: changed integer values to more descriptive examples.

        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: DefaultTableModel defaultTableModel = new DefaultTableModel(10, 5)// Improved: changed primitive values to more descriptive examples.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTable jTable = new JTable(defaultTableModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(jTable, 10, 0L, 20, 20, 'a')// Improved: changed integer values to more descriptive examples.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 4
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: int _int = 10;
int _int = 5;
DefaultTableModel defaultTableModel = new DefaultTableModel(_int, _int);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
int _int = 10;
long _long = 0L;
int _int = 20;
int _int = 20;
char _char = 'a';
KeyEvent keyEvent = new KeyEvent(jTable, _int, _long, _int, _int, _char);
((SimpleKeyListenerHelper) defaultTableModel).keyPressed(keyEvent);

statement is: javax.swing.JMenu(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JMenu
statement code is: JMenu jMenu = new JMenu("ToNkNnbkT;!>")
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, (-561), (-561), 127, 127, 'L')
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, (-561), (-561), 127, 127, 'L');
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JMenu jMenu = new JMenu("ToNkNnbkT;!>");
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
        KeyEvent keyEvent = new KeyEvent(jMenu, ((int) (KeyEvent.VK_F1)), ((int) (KeyEvent.SHIFT_MASK)), 127, 127, 'L');
        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: JMenu jMenu = new JMenu("ToNkNnbkT;!>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(jMenu, ((int) (KeyEvent.VK_F1)), ((int) (KeyEvent.SHIFT_MASK)), 127, 127, 'L'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 2
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: String string = "ToNkNnbkT;!>";
JMenu jMenu = new JMenu(string);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
int _int = 127;
int _int = 127;
char _char = 'L';
KeyEvent keyEvent = new KeyEvent(jMenu, _int, _int, _char, 127, 'L');
((SimpleKeyListenerHelper) jMenu).keyPressed(keyEvent);

statement is: javax.swing.JSpinner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner
statement code is: JSpinner jSpinner = new JSpinner()
statement is: javax.swing.JSpinner$NumberEditor(Ljavax/swing/JSpinner;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner$NumberEditor
statement code is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(arg0, ".+W37TzZRv")
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 3705, (-1L), 155, 155, '%')
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, ".+W37TzZRv");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, (-1L), 155, 155, '%');
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSpinner jSpinner = new JSpinner();
        JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, "Amount of eggs to buy");
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
        KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, -1L, 155, 155, '+');
        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: JSpinner jSpinner = new JSpinner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, "Amount of eggs to buy"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V
statement is: KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, -1L, 155, 155, '+'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: int _int = 3705 callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 1
TestCase is: JSpinner jSpinner = new JSpinner();
int _int = 3705;
int _int = 155;
int _int = 155;
char _char = '+';
KeyEvent keyEvent = new KeyEvent((Component) _int, _int, _int, _char, 155, '%');

* test suite isTestSuite: 24
Test 0: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
simpleKeyListenerHelper.keyReleased(menuKeyEvent);

Test 1: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyTyped(keyEvent);
Test 2: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, "/resources/swing.properties");
Test 4: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, jTable);
Test 5: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, menuKeyEvent);
Test 6: 
JMenu jMenu = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, jMenu);
Test 7: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null);
Test 8: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true);
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 9: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 0, 0L, 10, 10, 'j');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, (-561), (-561), 127, 127, 'L');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 12: 
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, ".+W37TzZRv");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, (-1L), 155, 155, '%');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 13: 
boolean _boolean = false;
JMenu jMenuArray = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper((Component) null);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
char _char = 'X';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, _char, (long) menuElementArray, (int) defaultManager, (-2067), 'X', (MenuElement[]) jMenuArray, (MenuSelectionManager) simpleKeyListenerHelper);
((SimpleKeyListenerHelper) _boolean).keyReleased(menuKeyEvent);

Test 14: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are different objects: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, 127, 8, 8, 'h', 'h');
((SimpleKeyListenerHelper) defaultTableModel).keyTyped(keyEvent);

Test 15: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
((SimpleKeyListenerHelper) defaultTableModel).notifyListener(simpleKeyListenerAdapter, (int) "/resources/swing.properties", (Object) null);

Test 16: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();

Test 17: 
boolean _boolean = false;
JMenu jMenuArray = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper((Component) null);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
String string = "menuKeyEventId";
String string = "menuKeyEventWhenParameter";
char _char = 'X';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, (int) string, (long) string, _char, (int) menuElementArray, (char) defaultManager, (MenuElement[]) jMenuArray, (MenuSelectionManager) simpleKeyListenerHelper);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
String string = "numberOfMenuElements";
((SimpleKeyListenerHelper) _boolean).notifyListener(simpleKeyListenerAdapter, (int) string, menuKeyEvent);

Test 18: 
JMenu jMenu = new JMenu("File", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
((SimpleKeyListenerHelper)false).notifyListener(simpleKeyListenerAdapter, (int) jMenu, (Object) null);

Test 19: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) true, true);
int _int = 9;
long _long = 0L;
int _int = 2911;
int _int = 9;
char _char = '$';
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, _int, _long, _int, _int, _char);
simpleKeyListenerHelper.keyPressed(keyEvent);

Test 20: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, 127, 8, 8, 'h', 'h');
((SimpleKeyListenerHelper) defaultTableModel).keyPressed(keyEvent);

Test 21: 
DefaultTableModel defaultTableModel = new DefaultTableModel(10, 5);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 10, 0L, 20, 20, 'a');
((SimpleKeyListenerHelper) defaultTableModel).keyPressed(keyEvent);

Test 22: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, 127, 127, 'L', 127, 'L');
((SimpleKeyListenerHelper) jMenu).keyPressed(keyEvent);

Test 23: 
JSpinner jSpinner = new JSpinner();
KeyEvent keyEvent = new KeyEvent((Component) 3705, 155, 155, '+', 155, '%');


* Generated after the refinement and before minimization 24 tests with total length 135
* test suite isTestSuite: 24
Test 0: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
simpleKeyListenerHelper.keyReleased(menuKeyEvent);

Test 1: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyTyped(keyEvent);
Test 2: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, "/resources/swing.properties");
Test 4: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, jTable);
Test 5: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, menuKeyEvent);
Test 6: 
JMenu jMenu = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, jMenu);
Test 7: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null);
Test 8: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true);
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 9: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 0, 0L, 10, 10, 'j');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, (-561), (-561), 127, 127, 'L');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 12: 
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, ".+W37TzZRv");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, (-1L), 155, 155, '%');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 13: 
boolean _boolean = false;
JMenu jMenuArray = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper((Component) null);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
char _char = 'X';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, _char, (long) menuElementArray, (int) defaultManager, (-2067), 'X', (MenuElement[]) jMenuArray, (MenuSelectionManager) simpleKeyListenerHelper);
((SimpleKeyListenerHelper) _boolean).keyReleased(menuKeyEvent);

Test 14: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are different objects: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, 127, 8, 8, 'h', 'h');
((SimpleKeyListenerHelper) defaultTableModel).keyTyped(keyEvent);

Test 15: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
((SimpleKeyListenerHelper) defaultTableModel).notifyListener(simpleKeyListenerAdapter, (int) "/resources/swing.properties", (Object) null);

Test 16: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();

Test 17: 
boolean _boolean = false;
JMenu jMenuArray = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper((Component) null);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
String string = "menuKeyEventId";
String string = "menuKeyEventWhenParameter";
char _char = 'X';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, (int) string, (long) string, _char, (int) menuElementArray, (char) defaultManager, (MenuElement[]) jMenuArray, (MenuSelectionManager) simpleKeyListenerHelper);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
String string = "numberOfMenuElements";
((SimpleKeyListenerHelper) _boolean).notifyListener(simpleKeyListenerAdapter, (int) string, menuKeyEvent);

Test 18: 
JMenu jMenu = new JMenu("File", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
((SimpleKeyListenerHelper)false).notifyListener(simpleKeyListenerAdapter, (int) jMenu, (Object) null);

Test 19: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) true, true);
int _int = 9;
long _long = 0L;
int _int = 2911;
int _int = 9;
char _char = '$';
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, _int, _long, _int, _int, _char);
simpleKeyListenerHelper.keyPressed(keyEvent);

Test 20: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, 127, 8, 8, 'h', 'h');
((SimpleKeyListenerHelper) defaultTableModel).keyPressed(keyEvent);

Test 21: 
DefaultTableModel defaultTableModel = new DefaultTableModel(10, 5);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 10, 0L, 20, 20, 'a');
((SimpleKeyListenerHelper) defaultTableModel).keyPressed(keyEvent);

Test 22: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, 127, 127, 'L', 127, 'L');
((SimpleKeyListenerHelper) jMenu).keyPressed(keyEvent);

Test 23: 
JSpinner jSpinner = new JSpinner();
KeyEvent keyEvent = new KeyEvent((Component) 3705, 155, 155, '+', 155, '%');


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
simpleKeyListenerHelper.keyReleased(menuKeyEvent);

Test 1: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyTyped(keyEvent);
Test 2: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, "/resources/swing.properties");
Test 4: 
JMenu jMenu = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, jMenu);
Test 5: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, menuKeyEvent);
Test 6: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, jTable);
Test 7: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null);
Test 8: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true);
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 9: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, (-561), (-561), 127, 127, 'L');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 0, 0L, 10, 10, 'j');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, ".+W37TzZRv");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, (-1L), 155, 155, '%');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 12: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyPressed(keyEvent);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Generated 13 tests with total length 68
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JMenu arg2 = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg2);
SimpleKeyListenerAdapter arg0 = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(arg0, 155, arg2);
assertTrue(arg2.getFocusTraversalKeysEnabled());


** It was a parseable test case! 
refined test name is: testFocusTraversalKeysEnabledForJMenu
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:34:07.261 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1085017693968081754.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:34:07.289 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1085017693968081754.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:34:07.377 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1085017693968081754.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:34:07.378 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1085017693968081754.jar
[MASTER] 20:34:07.508 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 13
Test 0: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
simpleKeyListenerHelper.keyReleased(menuKeyEvent);

Test 1: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyTyped(keyEvent);
Test 2: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, "/resources/swing.properties");
Test 4: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, jTable);
Test 5: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, menuKeyEvent);
Test 6: 
JMenu jMenu = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, jMenu);
Test 7: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null);
Test 8: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true);
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 9: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 0, 0L, 10, 10, 'j');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, (-561), (-561), 127, 127, 'L');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 12: 
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, ".+W37TzZRv");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, (-1L), 155, 155, '%');
simpleKeyListenerHelper.keyPressed(keyEvent);

* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
simpleKeyListenerHelper.keyReleased(menuKeyEvent);

Test 1: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyTyped(keyEvent);
Test 2: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, "/resources/swing.properties");
Test 4: 
JMenu jMenu = new JMenu((String) null, false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, jMenu);
Test 5: 
JMenu jMenu = new JMenu("com.lts.pest.tree.SimpleTreeListener", false);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
MenuElement[] menuElementArray = new MenuElement[1];
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jMenu, (-2067), (-3442L), (-2067), (-2067), 'X', menuElementArray, defaultManager);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, menuKeyEvent);
Test 6: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, jTable);
Test 7: 
Object[] objectArray = new Object[1];
JList<Object> jList = new JList<Object>(objectArray);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jList);
simpleKeyListenerHelper.notifyListener((Object) null, (-1), (Object) null);
Test 8: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JRadioButtonMenuItem jRadioButtonMenuItem = new JRadioButtonMenuItem("com.lts.event.SimpleKeyListenerHelper", (Icon) null, true);
KeyEvent keyEvent = new KeyEvent(jRadioButtonMenuItem, 9, 0L, 2911, 9, '$');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 9: 
JMenu jMenu = new JMenu("ToNkNnbkT;!>");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jMenu);
KeyEvent keyEvent = new KeyEvent(jMenu, (-561), (-561), 127, 127, 'L');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultTableModel defaultTableModel = new DefaultTableModel(0, 0);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
KeyEvent keyEvent = new KeyEvent(jTable, 0, 0L, 10, 10, 'j');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner, ".+W37TzZRv");
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jSpinner_NumberEditor);
KeyEvent keyEvent = new KeyEvent(jSpinner_NumberEditor, 3705, (-1L), 155, 155, '%');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 12: 
DefaultTableModel defaultTableModel = new DefaultTableModel(8, 8);
JTable jTable = new JTable(defaultTableModel);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jTable);
JFormattedTextField jFormattedTextField = new JFormattedTextField("Child and parent are the same object: ");
KeyEvent keyEvent = new KeyEvent(jFormattedTextField, (-3471), 127, 8, 8, 'h');
simpleKeyListenerHelper.keyPressed(keyEvent);

[MASTER] 20:34:09.457 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Generated 13 tests with total length 68
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:34:09.559 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 20:34:09.857 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:34:10.586 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1085017693968081754.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:34:10.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1085017693968081754.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:34:10.640 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1085017693968081754.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:34:10.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1085017693968081754.jar
* Writing tests to file
[MASTER] 20:34:10.643 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'SimpleKeyListenerHelper_ESTest' to evosuite-tests
* Writing JUnit test case 'SimpleKeyListenerHelper_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
