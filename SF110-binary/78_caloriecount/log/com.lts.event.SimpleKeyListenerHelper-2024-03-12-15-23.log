* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.event.SimpleKeyListenerHelper
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 4753
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:23:36.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:23:36.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:23:37.278 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:23:37.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:23:37.315 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:23:37.316 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:23:39.568 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:23:39.614 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:23:39.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:23:39.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:23:39.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:23:39.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:23:39.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:23:39.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:23:39.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:23:39.627 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:23:39.635 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class com.lts.event.SimpleKeyListenerHelper
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 79
* Using seed 1710257014807
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 38 / 79
[MASTER] 15:23:40.569 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:>                             0%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:==========================>        77%][Progress:=>                            4%] [Cov:===============================>   90%][Progress:=>                            5%] [Cov:===============================>   90%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:=================================> 95%][Progress:=>                            6%] [Cov:=================================> 95%][MASTER] 15:23:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 15:23:47.407 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:==>                           7%] [Cov:=================================> 95%][Progress:==>                           7%] [Cov:=================================> 95%][Progress:==>                           7%] [Cov:=================================> 96%][Progress:==>                           8%] [Cov:=================================> 97%][Progress:==>                           8%] [Cov:=================================> 97%][Progress:==>                           8%] [Cov:==================================>98%][Progress:==>                           8%] [Cov:==================================>98%][Progress:==>                           9%] [Cov:===================================100%]
* Search finished after 9s and 14 generations, 13940 statements, best individual has fitness: 0.0
* Generated before the refinement 13 tests with total length 63
statement is: javax.swing.CellRendererPane()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.CellRendererPane
statement code is: CellRendererPane cellRendererPane = new CellRendererPane()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIICI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 0, (-2493L), 1669, 0, '/', 0)
statement is: keyReleased(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyReleased(arg0)
test data is: CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, (-2493L), 1669, 0, '/', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CellRendererPane cellRendererPane = new CellRendererPane();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
        KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, 1000L, 1669, 0, 'a', 0);
        simpleKeyListenerHelper.keyReleased(keyEvent);
    }
}
statement is: CellRendererPane cellRendererPane = new CellRendererPane(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, 1000L, 1669, 0, 'a', 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyReleased(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyReleased(keyEvent) target is: simpleKeyListenerHelper method is: keyReleased(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyReleased(Ljava/awt/event/KeyEvent;)V
TestCase is: CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
int _int = 0;
long _long = 1000L;
int _int = 1669;
int _int = 0;
char _char = 'a';
int _int = 0;
KeyEvent keyEvent = new KeyEvent(cellRendererPane, _int, _long, _int, _int, _char, _int);
simpleKeyListenerHelper.keyReleased(keyEvent);

statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.JPopupMenu()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPopupMenu
statement code is: JPopupMenu jPopupMenu = new JPopupMenu()
statement is: javax.swing.MenuSelectionManager()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager()
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, 6, 6, 6, 9, 'u', (MenuElement[]) null, arg7)
statement is: keyTyped(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyTyped(arg0)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        JPopupMenu jPopupMenu = new JPopupMenu();
        MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', ((MenuElement[]) (null)), menuSelectionManager);
        simpleKeyListenerHelper.keyTyped(menuKeyEvent);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JPopupMenu jPopupMenu = new JPopupMenu(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', ((MenuElement[]) (null)), menuSelectionManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyTyped(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyTyped(menuKeyEvent) target is: simpleKeyListenerHelper method is: keyTyped(MenuKeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyTyped(Ljava/awt/event/KeyEvent;)V
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
int _int = 6;
int _int = 6;
int _int = 6;
int _int = 9;
char _char = 'u';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, _int, _int, _int, _int, _char, (MenuElement[]) menuSelectionManager, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);

statement is: javax.swing.JPasswordField()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPasswordField
statement code is: JPasswordField jPasswordField = new JPasswordField()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: detach()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.detach()
statement is: detach()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.detach()
test data is: JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPasswordField jPasswordField = new JPasswordField("12345678");
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
        simpleKeyListenerHelper.detach();
        simpleKeyListenerHelper.detach();
    }
}
statement is: JPasswordField jPasswordField = new JPasswordField("12345678"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V
statement is: simpleKeyListenerHelper.detach(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.detach() target is: simpleKeyListenerHelper method is: detach()
statement is: simpleKeyListenerHelper.detach(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.detach() target is: simpleKeyListenerHelper method is: detach()
statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg2, 9, arg2)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, simpleKeyListenerAdapter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 37, simpleKeyListenerAdapter);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 37, simpleKeyListenerAdapter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 37, simpleKeyListenerAdapter) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,int,SimpleKeyListenerAdapter)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
int _int = 37;
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, _int, simpleKeyListenerAdapter);

statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg2, 10, arg2)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, simpleKeyListenerAdapter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 500, simpleKeyListenerAdapter);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 500, simpleKeyListenerAdapter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 500, simpleKeyListenerAdapter) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,int,SimpleKeyListenerAdapter)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
int _int = 500;
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, _int, simpleKeyListenerAdapter);

statement is: javax.swing.JPasswordField()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPasswordField
statement code is: JPasswordField jPasswordField = new JPasswordField()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: org.evosuite.testcase.statements.ArrayStatement@b916e93a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.MenuElement;
statement code is: MenuElement[] menuElementArray = new MenuElement[1]
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, 155, menuElementArray[0])
test data is: JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, menuElementArray[0]);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPasswordField jPasswordField = new JPasswordField("mypassword");
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        MenuElement[] menuElementArray = new MenuElement[1];
        menuElementArray[0] = new JMenuItem("Delete");
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_DELETE, menuElementArray[0]);
    }
}
statement is: JPasswordField jPasswordField = new JPasswordField("mypassword"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuElement[] menuElementArray = new MenuElement[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: MenuElement[] menuElementArray = new MenuElement[1] isAssignment: false Array: new MenuElement[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljavax.swing.MenuElement; MenuElement[]
statement is: menuElementArray[0] = new JMenuItem("Delete"), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : menuElementArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:new JMenuItem("Delete") Ct is: menuElementArray[0] = new JMenuItem("Delete")
target : menuElementArray class spoon.support.reflect.code.CtLiteralImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_DELETE, menuElementArray[0]), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_DELETE, menuElementArray[0]) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter)
source statement: com.lts.event.SimpleKeyListenerAdapter()V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 0
TestCase is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];

statement is: javax.swing.JPasswordField()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPasswordField
statement code is: JPasswordField jPasswordField = new JPasswordField()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.util.TreeSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.TreeSet<java.lang.Object>
statement code is: TreeSet<Object> treeSet = new TreeSet<Object>()
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, (-2159), arg2)
test data is: JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (-2159), treeSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPasswordField jPasswordField = new JPasswordField("test1234");
        TreeSet<Object> treeSet = new TreeSet<>();
        treeSet.add("Testing Password Field");
        treeSet.add(new Integer(-2159));
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, -2159, treeSet);
    }
}
statement is: JPasswordField jPasswordField = new JPasswordField("test1234"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeSet<Object> treeSet = new TreeSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeSet.add("Testing Password Field"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeSet.add("Testing Password Field") target is: treeSet method is: add(java.lang.String)
statement is: treeSet.add(new Integer(-2159)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeSet.add(new Integer(-2159)) target is: treeSet method is: add(java.lang.Integer)
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, -2159, treeSet), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, -2159, treeSet) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,int,TreeSet)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(treeSet);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
TreeSet<Object> treeSet = null;
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, treeSet, treeSet);

statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.JPopupMenu()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPopupMenu
statement code is: JPopupMenu jPopupMenu = new JPopupMenu()
statement is: javax.swing.MenuSelectionManager()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager()
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, 6, 6, 6, 9, 'u', (MenuElement[]) null, arg7)
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        JPopupMenu jPopupMenu = new JPopupMenu();
        MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', ((MenuElement[]) (null)), menuSelectionManager);
        simpleKeyListenerHelper.keyPressed(menuKeyEvent);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JPopupMenu jPopupMenu = new JPopupMenu(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', ((MenuElement[]) (null)), menuSelectionManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(menuKeyEvent) target is: simpleKeyListenerHelper method is: keyPressed(MenuKeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
int _int = 6;
int _int = 6;
int _int = 6;
int _int = 9;
char _char = 'u';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, _int, _int, _int, _int, _char, (MenuElement[]) menuSelectionManager, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.MenuSelectionManager()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager()
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, arg7)
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, -1868, 'c', ((MenuElement[]) (null)), menuSelectionManager);// Changed 'C' to 'c' to make the character case more descriptive

        simpleKeyListenerHelper.keyPressed(menuKeyEvent);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, -1868, 'c', ((MenuElement[]) (null)), menuSelectionManager)// Changed 'C' to 'c' to make the character case more descriptive
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(menuKeyEvent) target is: simpleKeyListenerHelper method is: keyPressed(MenuKeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
int _int = 127;
long _long = 0L;
int _int = 100;
char _char = 'c';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, _int, _long, _int, _char, (char) menuSelectionManager, (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

statement is: javax.swing.JPasswordField()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPasswordField
statement code is: JPasswordField jPasswordField = new JPasswordField()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIIC)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, (-1470), (-2159), 10, 10, '`')
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, (-1470), (-2159), 10, 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPasswordField jPasswordField = new JPasswordField();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
        KeyEvent keyEvent = new KeyEvent(jPasswordField, -1470, -2159, 10, 10, '~');
        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: JPasswordField jPasswordField = new JPasswordField(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(jPasswordField, -1470, -2159, 10, 10, '~'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
int _int = 10;
int _int = 10;
char _char = '~';
KeyEvent keyEvent = new KeyEvent(jPasswordField, _int, _int, _char, 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);

statement is: javax.swing.DefaultListCellRenderer$UIResource()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.DefaultListCellRenderer$UIResource
statement code is: DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource()
statement is: javax.swing.JCheckBoxMenuItem(Ljavax/swing/Action;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JCheckBoxMenuItem
statement code is: JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null)
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIICI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 127, (-966L), (-1436), 127, '3', 0)
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, (-966L), (-1436), 127, '3', 0);
simpleKeyListenerHelper.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
        JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem(((Action) (null)));
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
        KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, -966L, -1436, 127, 'D', 0);
        simpleKeyListenerHelper.keyPressed(keyEvent);
    }
}
statement is: DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem(((Action) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, -966L, -1436, 127, 'D', 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(keyEvent) target is: simpleKeyListenerHelper method is: keyPressed(KeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 2, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jCheckBoxMenuItem);
int _int = 127;
int _int = 127;
char _char = 'D';
int _int = 0;
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, _int, _int, _char, _int, '3', 0);
((SimpleKeyListenerHelper) _int).keyPressed(keyEvent);

statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: javax.swing.MenuSelectionManager()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager()
statement is: org.evosuite.testcase.statements.ArrayStatement@38b9c6f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.MenuElement;
statement code is: MenuElement[] menuElementArray = new MenuElement[1]
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, (-1676), 10, (-1676), 155, 'C', arg6, arg7)
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.keyPressed(arg0)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, (-1676), 10, (-1676), 155, 'C', menuElementArray, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
        MenuElement[] menuElementArray = new MenuElement[1];
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, KeyEvent.VK_C, 10, 155, 'C', menuElementArray, menuSelectionManager);
        simpleKeyListenerHelper.keyPressed(menuKeyEvent);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuSelectionManager menuSelectionManager = new MenuSelectionManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuElement[] menuElementArray = new MenuElement[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: MenuElement[] menuElementArray = new MenuElement[1] isAssignment: false Array: new MenuElement[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljavax.swing.MenuElement; MenuElement[]
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, KeyEvent.VK_C, 10, 155, 'C', menuElementArray, menuSelectionManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.keyPressed(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.keyPressed(menuKeyEvent) target is: simpleKeyListenerHelper method is: keyPressed(MenuKeyEvent)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = null;
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

statement is: javax.swing.JPanel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JPanel
statement code is: JPanel jPanel = new JPanel()
statement is: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerHelper
statement code is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0)
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: com.lts.event.SimpleKeyListenerAdapter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.event.SimpleKeyListenerAdapter
statement code is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter()
statement is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: simpleKeyListenerHelper.notifyListener(arg0, 127, arg2)
test data is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, object);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JPanel jPanel = new JPanel();
        SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
        Object object = new Object();
        SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
        simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_DELETE, object);
    }
}
statement is: JPanel jPanel = new JPanel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_DELETE, object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, VK_DELETE, object) target is: simpleKeyListenerHelper method is: notifyListener(SimpleKeyListenerAdapter,java.lang.Object)
source statement: com.lts.event.SimpleKeyListenerHelper(Ljava/awt/Component;)V callee: VariableReference: Statement 1, type com.lts.event.SimpleKeyListenerHelperindex is: 1
Matched Method is: notifyListener(Ljava/lang/Object;ILjava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
Object object = null;
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (int) object, object);

* test suite isTestSuite: 25
Test 0: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, (-2493L), 1669, 0, '/', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 1: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);
Test 2: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, simpleKeyListenerAdapter);
Test 4: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, simpleKeyListenerAdapter);
Test 5: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, menuElementArray[0]);
Test 6: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (-2159), treeSet);
Test 7: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 8: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 9: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, (-1470), (-2159), 10, 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, (-966L), (-1436), 127, '3', 0);
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, (-1676), 10, (-1676), 155, 'C', menuElementArray, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 12: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, object);
Test 13: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, 1000L, 1669, 0, 'a', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 14: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) menuSelectionManager, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);

Test 15: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 37, simpleKeyListenerAdapter);

Test 16: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 500, simpleKeyListenerAdapter);

Test 17: 
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];

Test 18: 
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(treeSet);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
TreeSet<Object> treeSet = null;
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, treeSet, treeSet);

Test 19: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) menuSelectionManager, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

Test 20: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, 'c', (char) menuSelectionManager, (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

Test 21: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, 10, 10, '~', 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);

Test 22: 
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jCheckBoxMenuItem);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, 127, 'D', 0, '3', 0);
((SimpleKeyListenerHelper)127).keyPressed(keyEvent);

Test 23: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.keyPressed((KeyEvent) null);

Test 24: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (int) object, (Object) null);


* Generated after the refinement and before minimization 25 tests with total length 117
* test suite isTestSuite: 25
Test 0: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, (-2493L), 1669, 0, '/', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 1: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);
Test 2: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, simpleKeyListenerAdapter);
Test 4: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, simpleKeyListenerAdapter);
Test 5: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, menuElementArray[0]);
Test 6: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (-2159), treeSet);
Test 7: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 8: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 9: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, (-1470), (-2159), 10, 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, (-966L), (-1436), 127, '3', 0);
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, (-1676), 10, (-1676), 155, 'C', menuElementArray, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 12: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, object);
Test 13: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, 1000L, 1669, 0, 'a', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 14: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) menuSelectionManager, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);

Test 15: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 37, simpleKeyListenerAdapter);

Test 16: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 500, simpleKeyListenerAdapter);

Test 17: 
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];

Test 18: 
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(treeSet);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
TreeSet<Object> treeSet = null;
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, treeSet, treeSet);

Test 19: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) menuSelectionManager, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

Test 20: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, 'c', (char) menuSelectionManager, (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

Test 21: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, 10, 10, '~', 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);

Test 22: 
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jCheckBoxMenuItem);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, 127, 'D', 0, '3', 0);
((SimpleKeyListenerHelper)127).keyPressed(keyEvent);

Test 23: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.keyPressed((KeyEvent) null);

Test 24: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (int) object, (Object) null);


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, (-2493L), 1669, 0, '/', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 1: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);
Test 2: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, simpleKeyListenerAdapter);
Test 4: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 37, simpleKeyListenerAdapter);
Test 5: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, simpleKeyListenerAdapter);
Test 6: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, object);
Test 7: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, menuElementArray[0]);
Test 8: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 9: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, 10, 10, '~', 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, (-966L), (-1436), 127, '3', 0);
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, (-1676), 10, (-1676), 155, 'C', menuElementArray, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 12: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Generated 13 tests with total length 62
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JPasswordField arg0 = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();

** It was a parseable test case! 
refined test name is: testDetachFromJPasswordField
* Compiling Tests
refined test name is: testDetachSimpleKeyListenerHelper
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JPanel arg0 = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0);
SimpleKeyListenerAdapter arg2 = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(arg2, 9, arg2);

** It was a parseable test case! 
refined test name is: testNotifyListenerWithValidKeyCodeAndListener
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JPanel arg0 = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0);
SimpleKeyListenerAdapter arg2 = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(arg2, 37, arg2);

** It was a parseable test case! 
refined test name is: testNotifyListenerCallsKeyTypedOnAdapter
* Compiling Tests
refined test name is: testNotifyListenerWithKeyCode37AndAdapter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JPanel arg0 = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(arg0);
SimpleKeyListenerAdapter arg2 = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(arg2, 10, arg2);

** It was a parseable test case! 
refined test name is: testNotifyListenerWithKeyPressedEvent
* Compiling Tests
refined test name is: testKeyPressedEventWithCorrectParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:29:04.075 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:04.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:29:04.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:04.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:29:04.292 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:04.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:29:04.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:04.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
[MASTER] 15:29:04.434 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:04.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
[MASTER] 15:29:04.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:04.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
[MASTER] 15:29:04.652 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 13
Test 0: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, (-2493L), 1669, 0, '/', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 1: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);
Test 2: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, simpleKeyListenerAdapter);
Test 4: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, simpleKeyListenerAdapter);
Test 5: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, menuElementArray[0]);
Test 6: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (-2159), treeSet);
Test 7: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 8: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 9: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, (-1470), (-2159), 10, 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, (-966L), (-1436), 127, '3', 0);
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, (-1676), 10, (-1676), 155, 'C', menuElementArray, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 12: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, object);

* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
CellRendererPane cellRendererPane = new CellRendererPane();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(cellRendererPane);
KeyEvent keyEvent = new KeyEvent(cellRendererPane, 0, (-2493L), 1669, 0, '/', 0);
simpleKeyListenerHelper.keyReleased(keyEvent);

Test 1: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyTyped(menuKeyEvent);
Test 2: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
simpleKeyListenerHelper.detach();
simpleKeyListenerHelper.detach();
Test 3: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 9, simpleKeyListenerAdapter);
Test 4: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 10, simpleKeyListenerAdapter);
Test 5: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
Object object = new Object();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 127, object);
Test 6: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
MenuElement[] menuElementArray = new MenuElement[1];
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, 155, menuElementArray[0]);
Test 7: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
TreeSet<Object> treeSet = new TreeSet<Object>();
SimpleKeyListenerAdapter simpleKeyListenerAdapter = new SimpleKeyListenerAdapter();
simpleKeyListenerHelper.notifyListener(simpleKeyListenerAdapter, (-2159), treeSet);
Test 8: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
JPopupMenu jPopupMenu = new JPopupMenu();
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPopupMenu, 6, 6, 6, 9, 'u', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 9: 
JPasswordField jPasswordField = new JPasswordField();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPasswordField);
KeyEvent keyEvent = new KeyEvent(jPasswordField, (-1470), (-2159), 10, 10, '`');
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 10: 
DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource = new DefaultListCellRenderer.UIResource();
JCheckBoxMenuItem jCheckBoxMenuItem = new JCheckBoxMenuItem((Action) null);
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(defaultListCellRenderer_UIResource);
KeyEvent keyEvent = new KeyEvent(jCheckBoxMenuItem, 127, (-966L), (-1436), 127, '3', 0);
simpleKeyListenerHelper.keyPressed(keyEvent);
Test 11: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuElement[] menuElementArray = new MenuElement[1];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, (-1676), 10, (-1676), 155, 'C', menuElementArray, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);
Test 12: 
JPanel jPanel = new JPanel();
SimpleKeyListenerHelper simpleKeyListenerHelper = new SimpleKeyListenerHelper(jPanel);
MenuSelectionManager menuSelectionManager = new MenuSelectionManager();
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jPanel, 127, 0L, 100, (-1868), 'C', (MenuElement[]) null, menuSelectionManager);
simpleKeyListenerHelper.keyPressed(menuKeyEvent);

[MASTER] 15:29:06.511 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Generated 13 tests with total length 63
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:29:06.565 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 15:29:06.884 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:29:07.920 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:07.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:29:08.019 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:08.020 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:29:08.109 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:08.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 15:29:08.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:08.259 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 15:29:08.375 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3968862966596272644.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:29:08.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3968862966596272644.jar
* Writing tests to file
[MASTER] 15:29:08.380 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'SimpleKeyListenerHelper_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
* Writing JUnit test case 'SimpleKeyListenerHelper_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
* Done!

* Computation finished
