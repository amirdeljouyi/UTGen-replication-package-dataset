* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.io.DirectoryScanner
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 5282
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:52:22.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:52:22.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:52:22.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:52:22.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.lts.io.DirectoryScanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 855
* Using seed 1710276740170
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 170 / 855
[Progress:>                             0%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:==================>                54%][Progress:>                             1%] [Cov:===================>               55%][Progress:>                             1%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:====================>              58%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             62%][Progress:>                             3%] [Cov:=====================>             62%][Progress:>                             3%] [Cov:======================>            64%][Progress:>                             3%] [Cov:======================>            65%][Progress:>                             3%] [Cov:======================>            65%][Progress:>                             3%] [Cov:======================>            65%][Progress:>                             3%] [Cov:======================>            65%][Progress:>                             3%] [Cov:======================>            65%][Progress:>                             3%] [Cov:======================>            65%][Progress:=>                            4%] [Cov:======================>            65%][Progress:=>                            4%] [Cov:======================>            65%][Progress:=>                            4%] [Cov:======================>            65%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:=============================>     83%][Progress:==>                           7%] [Cov:=============================>     83%][Progress:==>                           7%] [Cov:=============================>     83%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       21%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       22%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:======>                       23%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      24%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      26%] [Cov:===============================>   90%][Progress:=======>                      26%] [Cov:===============================>   90%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][MASTER] 20:53:36.060 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%]
* Search finished after 201s and 2263 generations, 671922 statements, best individual has fitness: 34.0
* Generated before the refinement 54 tests with total length 224
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("t;IG*?+17*VhI%Jc_T")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("t;IG*?+17*VhI%Jc_T");
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("src\\main\\resources");
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("src\\main\\resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("src\\main\\resources") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "src\\main\\resources";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents");
        directoryScanner.setIncludes(new String[]{ "*.txt" });
        directoryScanner.setExcludes(new String[]{ "temp*", "*.bak" });
    }
}
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe\\Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
statement is: directoryScanner.setIncludes(new String[]{ "*.txt" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "*.txt" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
statement is: directoryScanner.setExcludes(new String[]{ "temp*", "*.bak" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "temp*", "*.bak" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@785c8b7e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir)
statement is: org.evosuite.testcase.statements.ArrayStatement@9f2e8558 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@712d289e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@3afff70d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e7e9d56f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "*/C%VS**"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*/C%VS**", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*/C%VS**", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("c:/temp", "c:/temp");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("testfile1", "testfile2", directoryScanner.basedir);
        String[] stringArray = new String[3];
        stringArray[0] = "*.java";
        stringArray[1] = "*.xml";
        stringArray[2] = "*.txt";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.scan();
        directoryScanner.scandir(mockFile, "subdir", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("c:/temp", "c:/temp"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("testfile1", "testfile2", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("testfile1", "testfile2", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "*.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.java" Ct is: stringArray[0] = "*.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@71ee7e1f
statement is: stringArray[1] = "*.xml", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.xml" Ct is: stringArray[1] = "*.xml"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d4b81657
statement is: stringArray[2] = "*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: stringArray[2] = "*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@2bdab43d
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scandir(mockFile, "subdir", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "subdir", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
* this is vulnerable: String string = "*.java"
* this is vulnerable: String string = "*.xml"
* this is vulnerable: String string = "*.txt"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "c:/temp";
String string = "c:/temp";
MockFile mockFile = new MockFile(string, string);
String string = "testfile1";
String string = "testfile2";
File file = null;
MockFile.createTempFile(string, string, file);
String[] stringArray = new String[3];
String string = "*.java";
String string = "*.xml";
String string = "*.txt";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
String string = "subdir";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore")
statement is: org.evosuite.testcase.statements.AssignmentStatement@8d70585b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir)
statement is: org.evosuite.testcase.statements.ArrayStatement@e2f8190f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dea731d8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "7igdqy;LJ95u{2k%d>"
statement is: org.evosuite.testcase.statements.AssignmentStatement@8a33ea4f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "7igdqy;LJ95u{2k%d>"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f8e2bea6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "/**/.cvs8ignore"
statement is: org.evosuite.testcase.statements.AssignmentStatement@9847bea2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "**/CVS/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@94fe9d1e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir);
String[] stringArray = new String[4];
stringArray[0] = "7igdqy;LJ95u{2k%d>";
stringArray[1] = "7igdqy;LJ95u{2k%d>";
stringArray[2] = "/**/.cvs8ignore";
stringArray[3] = "**/CVS/**";
directoryScanner.includes = stringArray;
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("my_base_dir", "/**/.cvs8ignore");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir);
        String[] stringArray = new String[4];
        stringArray[0] = "/my_base_dir/file1";
        stringArray[1] = "/my_base_dir/file2";
        stringArray[2] = "/my_base_dir/.cvsignore";
        stringArray[3] = "**/CVS/**";
        directoryScanner.includes = stringArray;
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("my_base_dir", "/**/.cvs8ignore"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "/my_base_dir/file1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/my_base_dir/file1" Ct is: stringArray[0] = "/my_base_dir/file1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@624eb0e1
statement is: stringArray[1] = "/my_base_dir/file2", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/my_base_dir/file2" Ct is: stringArray[1] = "/my_base_dir/file2"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@5e408fd5
statement is: stringArray[2] = "/my_base_dir/.cvsignore", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/my_base_dir/.cvsignore" Ct is: stringArray[2] = "/my_base_dir/.cvsignore"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6f4cf0b1
statement is: stringArray[3] = "**/CVS/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/CVS/**" Ct is: stringArray[3] = "**/CVS/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@69782968
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
* this is vulnerable: String string = "/my_base_dir/file1"
* this is vulnerable: String string = "/my_base_dir/file2"
* this is vulnerable: String string = "/my_base_dir/.cvsignore"
* this is vulnerable: String string = "**/CVS/**"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "my_base_dir";
String string = "/**/.cvs8ignore";
MockFile mockFile = new MockFile(string, string);
String string = "/**/.cvs8ignore";
String string = "7igdqy;LJ95u{2k%d>";
File file = null;
MockFile.createTempFile(string, string, file);
String[] stringArray = new String[4];
String string = "/my_base_dir/file1";
String string = "/my_base_dir/file2";
String string = "/my_base_dir/.cvsignore";
String string = "**/CVS/**";
directoryScanner.scan();

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/**Z/CVS", "/**/CVS")
test data is: DirectoryScanner.matchPatternStart("/**Z/CVS", "/**/CVS");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS");
    }
}
statement is: DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/home/user/project/src/**Z/CVS";
String string = "/home/user/project/src/**/CVS";
DirectoryScanner.matchPatternStart(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("*CVR/**", "*")
test data is: DirectoryScanner.matchPath("*CVR/**", "*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("*C:\\Temp\\CVR*/**", "*");
    }
}
statement is: DirectoryScanner.matchPath("*C:\\Temp\\CVR*/**", "*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("*C:\\Temp\\CVR*/**", "*") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*C:\\Temp\\CVR*/**";
String string = "*";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/")
test data is: DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/Users/John Doe/Documents/*", "/home/johndoe/Documents");
    }
}
statement is: DirectoryScanner.matchPath("/Users/John Doe/Documents/*", "/home/johndoe/Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/Users/John Doe/Documents/*", "/home/johndoe/Documents") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/Users/John Doe/Documents/*";
String string = "/home/johndoe/Documents";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("*~")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.isExcluded("*.bak");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.isExcluded("*.bak"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("*.bak") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "*.bak";
directoryScanner.isExcluded(string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/%*%", "**/cvig'ore")
test data is: DirectoryScanner.matchPath("**/%*%", "**/cvig'ore");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|")
test data is: DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/lS/*", "/home/user/Documents/lS/file1.txt");
    }
}
statement is: DirectoryScanner.matchPath("**/lS/*", "/home/user/Documents/lS/file1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/lS/*", "/home/user/Documents/lS/file1.txt") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/lS/*";
String string = "/home/user/Documents/lS/file1.txt";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/CVS**", "*/CVS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@71774635 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("*", "*.pdf");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("*", "*.pdf", directoryScanner.basedir);
        directoryScanner.scan();
        directoryScanner.getNotIncludedDirectories();
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("*", "*.pdf"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("*", "*.pdf", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("*", "*.pdf", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "*";
String string = "*.pdf";
MockFile mockFile = new MockFile(string, string);
String string = "*";
String string = "*.pdf";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/3*4}eS_./**", "**/3*4}eS_./**")
test data is: DirectoryScanner.matchPath("**/3*4}eS_./**", "**/3*4}eS_./**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/*34*/*.txt", "**/*34*/*.txt");
    }
}
statement is: DirectoryScanner.matchPath("**/*34*/*.txt", "**/*34*/*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/*34*/*.txt", "**/*34*/*.txt") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*34*/*.txt";
String string = "**/*34*/*.txt";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/VS/**", "**/VS/**")
test data is: DirectoryScanner.matchPath("**/VS/**", "**/VS/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**");
    }
}
statement is: DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/Visual Studio/**";
String string = "**/Visual Studio/**";
DirectoryScanner.matchPath(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM")
test data is: DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("\\ [wsM~aV?(VM", "\\ [wsM~aV?(VM");
    }
}
statement is: DirectoryScanner.matchPatternStart("\\ [wsM~aV?(VM", "\\ [wsM~aV?(VM"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("\\ [wsM~aV?(VM", "\\ [wsM~aV?(VM") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "\\ [wsM~aV?(VM";
String string = "\\ [wsM~aV?(VM";
DirectoryScanner.matchPatternStart(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("/*V%N>~(>Y7[Ks", "")
test data is: DirectoryScanner.match("/*V%N>~(>Y7[Ks", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("example.txt", "");
    }
}
statement is: DirectoryScanner.match("example.txt", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("example.txt", "") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "example.txt";
String string = "";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP")
test data is: DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "C:\\Users\\John Doe\\Documents");
    }
}
statement is: DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "C:\\Users\\John Doe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "C:\\Users\\John Doe\\Documents") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "5X\"6/? *Pf(xfbkP";
String string = "C:\\Users\\John Doe\\Documents";
DirectoryScanner.matchPath(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**", "")
test data is: DirectoryScanner.match("**", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("test-*", "");
    }
}
statement is: DirectoryScanner.match("test-*", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("test-*", "") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "test-*";
String string = "";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/CVbt[o", "CVbt[o")
test data is: DirectoryScanner.match("**/CVbt[o", "CVbt[o");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/*.java", "CVbt[o");
    }
}
statement is: DirectoryScanner.match("**/*.java", "CVbt[o"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/*.java", "CVbt[o") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*.java";
String string = "CVbt[o";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?")
test data is: DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("A directory with a lot of files and subdirectories", "A directory with a lot of files and subdirectories");
        DirectoryScanner.match("A directory with a few files but many subdirectories", "A directory with a few files but many subdirectories");
        DirectoryScanner.match("An empty directory", "An empty directory");
    }
}
statement is: DirectoryScanner.match("A directory with a lot of files and subdirectories", "A directory with a lot of files and subdirectories"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("A directory with a lot of files and subdirectories", "A directory with a lot of files and subdirectories") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("A directory with a few files but many subdirectories", "A directory with a few files but many subdirectories"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("A directory with a few files but many subdirectories", "A directory with a few files but many subdirectories") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("An empty directory", "An empty directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("An empty directory", "An empty directory") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "A directory with a lot of files and subdirectories";
String string = "A directory with a lot of files and subdirectories";
DirectoryScanner.match(string, string);
String string = "A directory with a few files but many subdirectories";
String string = "A directory with a few files but many subdirectories";
DirectoryScanner.match(string, string);
String string = "An empty directory";
String string = "An empty directory";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*~", "~")
test data is: DirectoryScanner.match("*~", "~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("*~", "file1.txt");
        DirectoryScanner.match("*~", "file2.txt");
        DirectoryScanner.match("*~", "folder/file3.txt");
    }
}
statement is: DirectoryScanner.match("*~", "file1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*~", "file1.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("*~", "file2.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*~", "file2.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("*~", "folder/file3.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*~", "folder/file3.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*~";
String string = "file1.txt";
DirectoryScanner.match(string, string);
String string = "*~";
String string = "file2.txt";
DirectoryScanner.match(string, string);
String string = "*~";
String string = "folder/file3.txt";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*/CVS**", "**/CVS")
test data is: DirectoryScanner.match("*/CVS**", "**/CVS");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("*/CVS/**", "**/*.cvs");
    }
}
statement is: DirectoryScanner.match("*/CVS/**", "**/*.cvs"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*/CVS/**", "**/*.cvs") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*/CVS/**";
String string = "**/*.cvs";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*/C%VS**", "com.lts.lang.classloader.SimpleFileFilter")
test data is: DirectoryScanner.match("*/C%VS**", "com.lts.lang.classloader.SimpleFileFilter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/*.vs", "com.lts.lang.classloader.SimpleFileFilter");
    }
}
statement is: DirectoryScanner.match("**/*.vs", "com.lts.lang.classloader.SimpleFileFilter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/*.vs", "com.lts.lang.classloader.SimpleFileFilter") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*.vs";
String string = "com.lts.lang.classloader.SimpleFileFilter";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T")
test data is: DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for DirectoryScanner.matchPath() method
        DirectoryScanner.matchPath("a/b/c/d", "a/b/c/d");// Matching path with a single directory separator

        DirectoryScanner.matchPath("a\\b\\c\\d", "a/b/c/d");// Matching path with multiple directory separators (Windows-style)

        DirectoryScanner.matchPath("a/b//c/d", "a/b/c/d");// Matching path with consecutive directory separator characters

        DirectoryScanner.matchPath("a/b/c/.git", "a/b/c/.git");// Matching path with a dotfile (Git)

        DirectoryScanner.matchPath("a/b/c/d.txt", "a/b/c/d.txt");// Matching path with an extension (text file)

        DirectoryScanner.matchPath("a/b/c/d/e", "a/b/c/d/e");// Matching path with multiple subdirectories }}

    }
}
statement is: // Improved test data for DirectoryScanner.matchPath() method
DirectoryScanner.matchPath("a/b/c/d", "a/b/c/d")// Matching path with a single directory separator
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for DirectoryScanner.matchPath() method
DirectoryScanner.matchPath("a/b/c/d", "a/b/c/d")// Matching path with a single directory separator
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("a\\b\\c\\d", "a/b/c/d")// Matching path with multiple directory separators (Windows-style)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("a\\b\\c\\d", "a/b/c/d")// Matching path with multiple directory separators (Windows-style)
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("a/b//c/d", "a/b/c/d")// Matching path with consecutive directory separator characters
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("a/b//c/d", "a/b/c/d")// Matching path with consecutive directory separator characters
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("a/b/c/.git", "a/b/c/.git")// Matching path with a dotfile (Git)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("a/b/c/.git", "a/b/c/.git")// Matching path with a dotfile (Git)
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("a/b/c/d.txt", "a/b/c/d.txt")// Matching path with an extension (text file)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("a/b/c/d.txt", "a/b/c/d.txt")// Matching path with an extension (text file)
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("a/b/c/d/e", "a/b/c/d/e")// Matching path with multiple subdirectories }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("a/b/c/d/e", "a/b/c/d/e")// Matching path with multiple subdirectories }}
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "a/b/c/d";
String string = "a/b/c/d";
DirectoryScanner.matchPath(string, string);
String string = "a\\b\\c\\d";
String string = "a/b/c/d";
DirectoryScanner.matchPath(string, string);
String string = "a/b//c/d";
String string = "a/b/c/d";
DirectoryScanner.matchPath(string, string);
String string = "a/b/c/.git";
String string = "a/b/c/.git";
DirectoryScanner.matchPath(string, string);
String string = "a/b/c/d.txt";
String string = "a/b/c/d.txt";
DirectoryScanner.matchPath(string, string);
String string = "a/b/c/d/e";
String string = "a/b/c/d/e";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.pdf" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.pdf" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.pdf" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@51e65936 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3259a200 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "lNS{uC/"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "lNS{uC/";
directoryScanner.setIncludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "example_file.txt";// Improved test data: A more descriptive and representative file name is used to better reflect the situation being tested.

        directoryScanner.setIncludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "example_file.txt"// Improved test data: A more descriptive and representative file name is used to better reflect the situation being tested.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example_file.txt" Ct is: stringArray[0] = "example_file.txt"// Improved test data: A more descriptive and representative file name is used to better reflect the situation being tested.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "example_file.txt";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setExcludes(new String[]{ "**/*.txt", "**/*.md", "**/*.jpg", "**/*.png" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setExcludes(new String[]{ "**/*.txt", "**/*.md", "**/*.jpg", "**/*.png" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "**/*.txt", "**/*.md", "**/*.jpg", "**/*.png" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner(new File("C:\\Users\\user\\Desktop"), "*.pdf");
        directoryScanner.setRecursive(true);
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(new File("C:\\Users\\user\\Desktop"), "*.pdf"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setRecursive(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setRecursive(true) target is: directoryScanner method is: setRecursive(boolean)
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("V|R(")
statement is: createNewFile()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createNewFile = mockFile.createNewFile()
statement is: org.evosuite.testcase.statements.AssignmentStatement@c4fd7e52 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("test_file.txt");
        mockFile.createNewFile();
        directoryScanner.basedir = ((File) (mockFile));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("test_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockFile.createNewFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockFile.createNewFile() target is: mockFile method is: createNewFile()
source statement: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.evosuite.runtime.mock.java.io.MockFileindex is: 2
Matched Method is: createNewFile()Z
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "test_file.txt";
MockFile mockFile = new MockFile(string);
((MockFile) string).createNewFile();
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@a2f604ec type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9f22af50 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*/CVS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@5dcfd0b6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "*/CVS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@60148296 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "*/CVS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@bde9e68a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "*/CVS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@471e403f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "(StZQ"
statement is: org.evosuite.testcase.statements.AssignmentStatement@b79922eb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "*/CVS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@188546a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "*/CVS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a7c9c90e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[7] = "/**/*~"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ef420ea7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[8] = "*/CVS**"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/CVS**", "*/CVS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@1cf64f9c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/CVS**", "*/CVS**", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*/CVS**";
stringArray[1] = "*/CVS**";
stringArray[2] = "*/CVS**";
stringArray[3] = "*/CVS**";
stringArray[4] = "(StZQ";
stringArray[5] = "*/CVS**";
stringArray[6] = "*/CVS**";
stringArray[7] = "/**/*~";
stringArray[8] = "*/CVS**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[9];
        stringArray[0] = "**/*.java";
        stringArray[1] = "**/CVS/**";
        stringArray[2] = "**/.gitignore";
        stringArray[3] = "**/*~";
        stringArray[4] = "(StZQ";
        stringArray[5] = "**/*.txt";
        stringArray[6] = "/**/*.md";
        stringArray[7] = "**/temp/**";
        stringArray[8] = "**/.git/**";
        directoryScanner.setExcludes(stringArray);
        MockFile mockFile = new MockFile("**/*.java", "**/CVS/**");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("**/*.java", "**/CVS/**", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.java" Ct is: stringArray[0] = "**/*.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "**/CVS/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/CVS/**" Ct is: stringArray[1] = "**/CVS/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "**/.gitignore", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/.gitignore" Ct is: stringArray[2] = "**/.gitignore"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "**/*~", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*~" Ct is: stringArray[3] = "**/*~"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "(StZQ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"(StZQ" Ct is: stringArray[4] = "(StZQ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "**/*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.txt" Ct is: stringArray[5] = "**/*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "/**/*.md", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/**/*.md" Ct is: stringArray[6] = "/**/*.md"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "**/temp/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/temp/**" Ct is: stringArray[7] = "**/temp/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "**/.git/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/.git/**" Ct is: stringArray[8] = "**/.git/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("**/*.java", "**/CVS/**"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("**/*.java", "**/CVS/**", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("**/*.java", "**/CVS/**", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
String string = "**/*.java";
stringArray[0] = string;
String string = "**/CVS/**";
stringArray[1] = string;
String string = "**/.gitignore";
stringArray[2] = string;
String string = "**/*~";
stringArray[3] = string;
String string = "(StZQ";
stringArray[4] = string;
String string = "**/*.txt";
stringArray[5] = string;
String string = "/**/*.md";
stringArray[6] = string;
String string = "**/temp/**";
stringArray[7] = string;
String string = "**/.git/**";
stringArray[8] = string;
directoryScanner.setExcludes(stringArray);
String string = "**/*.java";
String string = "**/CVS/**";
MockFile mockFile = new MockFile(string, string);
String string = "**/*.java";
String string = "**/CVS/**";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@a0114c9d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir)
statement is: org.evosuite.testcase.statements.ArrayStatement@a53acfd2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@855fb21c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@736d1e5c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a0b6c1e8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "*/C%VS**"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\User", "C:\\Users\\User");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("C:\\Users\\User", "C:\\Users\\User", directoryScanner.basedir);
        String[] stringArray = new String[3];
        stringArray[0] = "C:\\Users\\User\\Documents";
        stringArray[1] = "C:\\Users\\User\\Downloads";
        stringArray[2] = "C:\\Users\\User\\Pictures";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.scan();
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\User", "C:\\Users\\User"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("C:\\Users\\User", "C:\\Users\\User", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:\\Users\\User", "C:\\Users\\User", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\Users\\User\\Documents", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\User\\Documents" Ct is: stringArray[0] = "C:\\Users\\User\\Documents"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@851d89e2
statement is: stringArray[1] = "C:\\Users\\User\\Downloads", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\User\\Downloads" Ct is: stringArray[1] = "C:\\Users\\User\\Downloads"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@cd8fbe80
statement is: stringArray[2] = "C:\\Users\\User\\Pictures", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\User\\Pictures" Ct is: stringArray[2] = "C:\\Users\\User\\Pictures"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@57c8ddc1
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
* this is vulnerable: String string = "C:\\Users\\User\\Documents"
* this is vulnerable: String string = "C:\\Users\\User\\Downloads"
* this is vulnerable: String string = "C:\\Users\\User\\Pictures"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\User";
String string = "C:\\Users\\User";
MockFile mockFile = new MockFile(string, string);
String string = "C:\\Users\\User";
String string = "C:\\Users\\User";
File file = null;
MockFile.createTempFile(string, string, file);
String[] stringArray = new String[3];
String string = "C:\\Users\\User\\Documents";
String string = "C:\\Users\\User\\Downloads";
String string = "C:\\Users\\User\\Pictures";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@bd594fd2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile baseDir = new MockFile("file1.txt");
        directoryScanner.basedir = baseDir;
        MockFile tempFile = new MockFile("temp.txt");
        baseDir.createTempFile("file1.txt", "temp.txt", tempFile);
        directoryScanner.scan();
        directoryScanner.getNotIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile baseDir = new MockFile("file1.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = baseDir, class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile tempFile = new MockFile("temp.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: baseDir.createTempFile("file1.txt", "temp.txt", tempFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: baseDir.createTempFile("file1.txt", "temp.txt", tempFile) target is: baseDir method is: createTempFile(java.lang.String,java.lang.String,MockFile)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "file1.txt";
String string = "temp.txt";
MockFile mockFile = null;
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("&N46\"", "&N46\"")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "&N46\"", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&N46\"", "&N46\"");
directoryScanner.scandir(mockFile, "&N46\"", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("my_file1.txt", "my_file2.txt");
        directoryScanner.scandir(mockFile, "c:\\temp\\", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("my_file1.txt", "my_file2.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scandir(mockFile, "c:\\temp\\", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "c:\\temp\\", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "my_file1.txt";
String string = "my_file2.txt";
MockFile mockFile = new MockFile(string, string);
String string = "c:\\temp\\";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>")
statement is: org.evosuite.testcase.statements.AssignmentStatement@760d915 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/CVS/**", false)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/CVS/**", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("my-directory");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("my-file", "**/CVS/**", directoryScanner.basedir);
        directoryScanner.scan();
        directoryScanner.scandir(mockFile, "**/CVS/**", false);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("my-directory"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("my-file", "**/CVS/**", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("my-file", "**/CVS/**", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scandir(mockFile, "**/CVS/**", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "**/CVS/**", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "my-directory";
MockFile mockFile = new MockFile(string);
String string = "my-file";
String string = "**/CVS/**";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.scan();
String string = "**/CVS/**";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg")
statement is: org.evosuite.testcase.statements.AssignmentStatement@3f97774a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir)
statement is: org.evosuite.testcase.statements.ArrayStatement@d00fad1a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@45c21162 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "4*TbUn.YhuE $$C9vg"
statement is: org.evosuite.testcase.statements.AssignmentStatement@7308af33 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("Documents", "Documents");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("documents", "documents", directoryScanner.basedir);
        String[] stringArray = new String[6];
        stringArray[0] = "Documents";
        directoryScanner.excludes = stringArray;
        directoryScanner.scan();
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("Documents", "Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("documents", "documents", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("documents", "documents", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Documents", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Documents" Ct is: stringArray[0] = "Documents"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@dc8e0c0c
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
* this is vulnerable: String string = "Documents"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "Documents";
String string = "Documents";
MockFile mockFile = new MockFile(string, string);
String string = "documents";
String string = "documents";
File file = null;
MockFile.createTempFile(string, string, file);
String[] stringArray = new String[6];
String string = "Documents";
directoryScanner.scan();
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@458f0f64 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.filesIncluded = vector
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<Object> vector = new Vector<Object>();
        directoryScanner.filesIncluded = vector;
        directoryScanner.getIncludedFiles(new File("path/to/a/directory"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.filesIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedFiles(new File("path/to/a/directory")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles(new File("path/to/a/directory")) target is: directoryScanner method is: getIncludedFiles(File)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = vector.add((Object) "!h>>5J-G")
statement is: org.evosuite.testcase.statements.AssignmentStatement@9f397473 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.filesIncluded = vector
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<Object> vector = new Vector<Object>();
        vector.add(((Object) ("file1")));
        vector.add(((Object) ("file2")));
        directoryScanner.filesIncluded = vector;
        directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vector.add(((Object) ("file1"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(((Object) ("file1"))) target is: vector method is: add(java.lang.Object)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.Object>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: vector.add(((Object) ("file2"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add(((Object) ("file2"))) target is: vector method is: add(java.lang.Object)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.Object>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: directoryScanner.filesIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
String string = "file1";
vector.add((Object) string);
String string = "file2";
vector.add((Object) string);
directoryScanner.getIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore")
statement is: org.evosuite.testcase.statements.AssignmentStatement@b74d1d57 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
        directoryScanner.scan();
        directoryScanner.getNotIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "Sr;&+m%<f6F6%5Z`AFA";
String string = "/**/.cvs8ignore";
MockFile mockFile = new MockFile(string, string);
String string = "/**/.cvs8ignore";
String string = "Sr;&+m%<f6F6%5Z`AFA";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore")
statement is: org.evosuite.testcase.statements.AssignmentStatement@c3f8e5b3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("sample_directory", "/**/.cvs8ignore");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("test_data_file_1.txt", "example_file_name", ((File) (mockFile)));
        MockFile.createTempFile("test_data_file_2.txt", "example_file_name", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getNotIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("sample_directory", "/**/.cvs8ignore"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("test_data_file_1.txt", "example_file_name", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("test_data_file_1.txt", "example_file_name", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: MockFile.createTempFile("test_data_file_2.txt", "example_file_name", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("test_data_file_2.txt", "example_file_name", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "sample_directory";
String string = "/**/.cvs8ignore";
MockFile mockFile = new MockFile(string, string);
String string = "test_data_file_1.txt";
String string = "example_file_name";
MockFile.createTempFile(string, string, (File) mockFile);
String string = "test_data_file_2.txt";
String string = "example_file_name";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/CVS**", "*/CVS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@c2b1bad0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/CVS**", "*/CVS**", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("*", "");// Changed the wildcard to a more descriptive value, such as "*TestData" to reflect the purpose of this test.

        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("*", "", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("*", "")// Changed the wildcard to a more descriptive value, such as "*TestData" to reflect the purpose of this test.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("*", "", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("*", "", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "*";
String string = "";
MockFile mockFile = new MockFile(string, string);
String string = "*";
String string = "";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes("*.java");
        directoryScanner.addDefaultExcludes("**/target/**", "**/*.class");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes("*.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes("*.java") target is: directoryScanner method is: addDefaultExcludes(java.lang.String)
statement is: directoryScanner.addDefaultExcludes("**/target/**", "**/*.class"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes("**/target/**", "**/*.class") target is: directoryScanner method is: addDefaultExcludes(java.lang.String,java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Set up a mock file system for testing
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(new File("/path/to/base/directory"));
        // Set up a mock file filter for filtering files based on their names
        NameFileFilter nameFileFilter = new NameFileFilter("file_");
        directoryScanner.addIncludeFilter(nameFileFilter);
        // Set up a mock file filter for filtering files based on their size
        SizeFileFilter sizeFileFilter = new SizeFileFilter(50, 100);
        directoryScanner.addExcludeFilter(sizeFileFilter);
        // Scan the directory and get the list of files that match the filters
        List<String> fileNames = directoryScanner.scan();
        assertEquals(2, fileNames.size());// Check the number of files returned by the scanner

        assertTrue(fileNames.contains("file_1"));// Check if a specific file is in the list

        assertFalse(fileNames.contains("file_3"));// Check if a specific file is not in the list }}

    }
}
statement is: // Set up a mock file system for testing
DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(new File("/path/to/base/directory")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(new File("/path/to/base/directory")) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Set up a mock file filter for filtering files based on their names
NameFileFilter nameFileFilter = new NameFileFilter("file_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addIncludeFilter(nameFileFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addIncludeFilter(nameFileFilter) target is: directoryScanner method is: addIncludeFilter(NameFileFilter)
statement is: // Set up a mock file filter for filtering files based on their size
SizeFileFilter sizeFileFilter = new SizeFileFilter(50, 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addExcludeFilter(sizeFileFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addExcludeFilter(sizeFileFilter) target is: directoryScanner method is: addExcludeFilter(SizeFileFilter)
statement is: // Scan the directory and get the list of files that match the filters
List<String> fileNames = directoryScanner.scan(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
statement is: assertEquals(2, fileNames.size())// Check the number of files returned by the scanner
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, fileNames.size())// Check the number of files returned by the scanner
 target is:  method is: assertEquals(int,<unknown>)
statement is: assertTrue(fileNames.contains("file_1"))// Check if a specific file is in the list
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(fileNames.contains("file_1"))// Check if a specific file is in the list
 target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(fileNames.contains("file_3"))// Check if a specific file is not in the list }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(fileNames.contains("file_3"))// Check if a specific file is not in the list }}
 target is:  method is: assertFalse(<unknown>)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
File file = null;
directoryScanner.setBasedir(file);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@ac47eecb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4cf32627 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "u]8Jf|VS/"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "u]8Jf|VS/";
directoryScanner.setExcludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[4];
        stringArray[0] = "directory1";
        stringArray[1] = "directory2";
        stringArray[2] = "directory3";
        stringArray[3] = "file.txt";
        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "directory1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"directory1" Ct is: stringArray[0] = "directory1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "directory2", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"directory2" Ct is: stringArray[1] = "directory2"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "directory3", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"directory3" Ct is: stringArray[2] = "directory3"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "file.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"file.txt" Ct is: stringArray[3] = "file.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
String string = "directory1";
stringArray[0] = string;
String string = "directory2";
stringArray[0] = string;
String string = "directory3";
stringArray[0] = string;
String string = "file.txt";
stringArray[0] = string;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/C%VS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@ab632ccf type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir)
statement is: org.evosuite.testcase.statements.ArrayStatement@fddbc6c1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8e3f3f54 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@951a61b1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@83bff15d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@88fc257e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@2b5e8085 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "*/C%VS**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@dc399df2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "*/C%VS**"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
stringArray[3] = "*/C%VS**";
stringArray[4] = "*/C%VS**";
stringArray[5] = "*/C%VS**";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:/Temp");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("testfile", "txt", directoryScanner.basedir);
        String[] stringArray = new String[6];
        stringArray[0] = "*.txt";
        stringArray[1] = "*.docx";
        stringArray[2] = "*.xlsx";
        stringArray[3] = "*.pptx";
        stringArray[4] = "*.pdf";
        stringArray[5] = "*.jpg";
        directoryScanner.setExcludes(stringArray);
        directoryScanner.setIncludes(stringArray);
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:/Temp"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("testfile", "txt", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("testfile", "txt", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: stringArray[0] = "*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a3fb4b93
statement is: stringArray[1] = "*.docx", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.docx" Ct is: stringArray[1] = "*.docx"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@249b90db
statement is: stringArray[2] = "*.xlsx", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.xlsx" Ct is: stringArray[2] = "*.xlsx"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3c416457
statement is: stringArray[3] = "*.pptx", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.pptx" Ct is: stringArray[3] = "*.pptx"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b75892f2
statement is: stringArray[4] = "*.pdf", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.pdf" Ct is: stringArray[4] = "*.pdf"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d7c562a9
statement is: stringArray[5] = "*.jpg", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.jpg" Ct is: stringArray[5] = "*.jpg"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1992e560
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
* this is vulnerable: String string = "*.txt"
* this is vulnerable: String string = "*.docx"
* this is vulnerable: String string = "*.xlsx"
* this is vulnerable: String string = "*.pptx"
* this is vulnerable: String string = "*.pdf"
* this is vulnerable: String string = "*.jpg"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:/Temp";
MockFile mockFile = new MockFile(string);
String string = "testfile";
String string = "txt";
File file = null;
MockFile.createTempFile(string, string, file);
String[] stringArray = new String[6];
String string = "*.txt";
String string = "*.docx";
String string = "*.xlsx";
String string = "*.pptx";
String string = "*.pdf";
String string = "*.jpg";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("MiF/l6", "MiF/l6")
statement is: org.evosuite.testcase.statements.AssignmentStatement@3cd432b3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6", directoryScanner.basedir);
        directoryScanner.scan();
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:/Users/username/Desktop/MiF/l6";
String string = "C:/Users/username/Desktop/MiF/l6";
MockFile mockFile = new MockFile(string, string);
String string = "C:/Users/username/Desktop/MiF/l6";
String string = "C:/Users/username/Desktop/MiF/l6";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**")
statement is: org.evosuite.testcase.statements.AssignmentStatement@93d9734b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("*/C%VS**")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*/C%VS**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("*", "*.java");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("*", "*.java", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.couldHoldIncluded("*");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("*", "*.java"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("*", "*.java", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("*", "*.java", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.couldHoldIncluded("*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("*") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "*";
String string = "*.java";
MockFile mockFile = new MockFile(string, string);
String string = "*";
String string = "*.java";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
String string = "*";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore")
statement is: org.evosuite.testcase.statements.AssignmentStatement@358e9e66 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir)
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("example_dir", "/path/to/dir");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("example_file", "/path/to/dir", directoryScanner.basedir);
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("example_dir", "/path/to/dir"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("example_file", "/path/to/dir", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("example_file", "/path/to/dir", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "example_dir";
String string = "/path/to/dir";
MockFile mockFile = new MockFile(string, string);
String string = "example_file";
String string = "/path/to/dir";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>")
statement is: org.evosuite.testcase.statements.AssignmentStatement@112b0c3d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\testuser");
        directoryScanner.basedir = ((File) (mockFile));
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\testuser"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\testuser";
MockFile mockFile = new MockFile(string);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore")
statement is: org.evosuite.testcase.statements.AssignmentStatement@bd7761b7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "/**/.cvs8ignore")
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("example-basedir", "/**/.cvs8ignore");
        directoryScanner.basedir = ((File) (mockFile));
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example-basedir/**/.cvs8ignore");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("example-basedir", "/**/.cvs8ignore"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example-basedir/**/.cvs8ignore"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "example-basedir";
String string = "/**/.cvs8ignore";
MockFile mockFile = new MockFile(string, string);
String string = "/**/.cvs8ignore";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("V|R(")
statement is: org.evosuite.testcase.statements.AssignmentStatement@78b8744a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Users\\User\\Documents");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Users\\User\\Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\User\\Documents";
MockFile mockFile = new MockFile(string);
String string = "V|R(";
String string = "V|R(";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@173dabac type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.dirsIncluded = vector
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<Object> vector = new Vector<>();
        directoryScanner.dirsIncluded = vector;
        // Add some example directories to the included directories list
        vector.add("C:/example/directory1");
        vector.add("C:/example/directory2");
        vector.add("C:/example/directory3");
        // Call the getIncludedDirectories() method and assert that it returns the expected values
        assertEquals(vector, directoryScanner.getIncludedDirectories());
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.dirsIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: // Add some example directories to the included directories list
vector.add("C:/example/directory1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add some example directories to the included directories list
vector.add("C:/example/directory1") target is: vector method is: add(java.lang.String)
statement is: vector.add("C:/example/directory2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add("C:/example/directory2") target is: vector method is: add(java.lang.String)
statement is: vector.add("C:/example/directory3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add("C:/example/directory3") target is: vector method is: add(java.lang.String)
statement is: // Call the getIncludedDirectories() method and assert that it returns the expected values
assertEquals(vector, directoryScanner.getIncludedDirectories()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Call the getIncludedDirectories() method and assert that it returns the expected values
assertEquals(vector, directoryScanner.getIncludedDirectories()) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("MlGK@ECN#")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("MlGK@ECN#");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.isExcluded("example-file.txt");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.isExcluded("example-file.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("example-file.txt") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "example-file.txt";
directoryScanner.isExcluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>")
statement is: org.evosuite.testcase.statements.AssignmentStatement@29259586 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Temp\\TestDir");
        directoryScanner.basedir = ((File) (mockFile));
        MockFile.createTempFile("testFile", "txt", directoryScanner.basedir);
        directoryScanner.scan();
        assertTrue(directoryScanner.isIncluded("C:\\Temp\\TestDir\\testFile.txt"));
        assertFalse(directoryScanner.isIncluded("C:\\Temp\\TestDir\\otherFile.docx"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Temp\\TestDir"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("testFile", "txt", directoryScanner.basedir), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("testFile", "txt", directoryScanner.basedir) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: assertTrue(directoryScanner.isIncluded("C:\\Temp\\TestDir\\testFile.txt")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(directoryScanner.isIncluded("C:\\Temp\\TestDir\\testFile.txt")) target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(directoryScanner.isIncluded("C:\\Temp\\TestDir\\otherFile.docx")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(directoryScanner.isIncluded("C:\\Temp\\TestDir\\otherFile.docx")) target is:  method is: assertFalse(<unknown>)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Temp\\TestDir";
MockFile mockFile = new MockFile(string);
String string = "testFile";
String string = "txt";
File file = null;
MockFile.createTempFile(string, string, file);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@a7816f38 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dc7608ca type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*V%N>~(>Y7[Ks"
statement is: org.evosuite.testcase.statements.AssignmentStatement@d759ee4f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("*V%N>~(>Y7[Ks")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("*V%N>~(>Y7[Ks");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[4];
        stringArray[0] = "example_directory";
        directoryScanner.includes = stringArray;
        directoryScanner.isIncluded("example_directory");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "example_directory", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example_directory" Ct is: stringArray[0] = "example_directory"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.isIncluded("example_directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("example_directory") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
String string = "example_directory";
stringArray[0] = string;
String string = "example_directory";
directoryScanner.isIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: slowScan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.slowScan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the DirectoryScanner class
        DirectoryScanner directoryScanner = new DirectoryScanner(new File("/home/user/Documents"), new FileFilter() {
            @Override
            public boolean accept(File pathname) {
                return pathname.isDirectory() && (pathname.length() > (1024 * 1024));// filter out files smaller than 1MB

            }
        });
        directoryScanner.slowScan();
    }
}
statement is: // Improved test data for the DirectoryScanner class
DirectoryScanner directoryScanner = new DirectoryScanner(new File("/home/user/Documents"), new FileFilter() {
    @Override
    public boolean accept(File pathname) {
        return pathname.isDirectory() && (pathname.length() > (1024 * 1024));// filter out files smaller than 1MB

    }
}), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.slowScan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.slowScan() target is: directoryScanner method is: slowScan()
* test suite isTestSuite: 104
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("t;IG*?+17*VhI%Jc_T");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*/C%VS**", true);
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir);
String[] stringArray = new String[4];
stringArray[0] = "7igdqy;LJ95u{2k%d>";
stringArray[1] = "7igdqy;LJ95u{2k%d>";
stringArray[2] = "/**/.cvs8ignore";
stringArray[3] = "**/CVS/**";
directoryScanner.includes = stringArray;
directoryScanner.scan();
Test 4: 
DirectoryScanner.matchPatternStart("/**Z/CVS", "/**/CVS");
Test 5: 
DirectoryScanner.matchPath("*CVR/**", "*");
Test 6: 
DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");
Test 7: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 8: 
DirectoryScanner.matchPath("**/%*%", "**/cvig'ore");
Test 9: 
DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();
Test 11: 
DirectoryScanner.matchPath("**/3*4}eS_./**", "**/3*4}eS_./**");
Test 12: 
DirectoryScanner.matchPath("**/VS/**", "**/VS/**");
Test 13: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");
Test 14: 
DirectoryScanner.match("/*V%N>~(>Y7[Ks", "");
Test 15: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");
Test 16: 
DirectoryScanner.match("**", "");
Test 17: 
DirectoryScanner.match("**/CVbt[o", "CVbt[o");
Test 18: 
DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");
Test 19: 
DirectoryScanner.match("*~", "~");
Test 20: 
DirectoryScanner.match("*/CVS**", "**/CVS");
Test 21: 
DirectoryScanner.match("*/C%VS**", "com.lts.lang.classloader.SimpleFileFilter");
Test 22: 
DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "lNS{uC/";
directoryScanner.setIncludes(stringArray);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*/CVS**";
stringArray[1] = "*/CVS**";
stringArray[2] = "*/CVS**";
stringArray[3] = "*/CVS**";
stringArray[4] = "(StZQ";
stringArray[5] = "*/CVS**";
stringArray[6] = "*/CVS**";
stringArray[7] = "/**/*~";
stringArray[8] = "*/CVS**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&N46\"", "&N46\"");
try { 
  directoryScanner.scandir(mockFile, "&N46\"", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/&N46\"/&N46\"
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/CVS/**", false);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "u]8Jf|VS/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
stringArray[3] = "*/C%VS**";
stringArray[4] = "*/C%VS**";
stringArray[5] = "*/C%VS**";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*/C%VS**");
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("MlGK@ECN#");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("*V%N>~(>Y7[Ks");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("srcmain\resources");
directoryScanner.scan();

Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("c:/temp", "c:/temp");
MockFile.createTempFile("testfile1", "testfile2", (File) null);
String[] stringArray = new String[3];
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
String string = "subdir";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my_base_dir", "/**/.cvs8ignore");
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", (File) null);
String[] stringArray = new String[4];
directoryScanner.scan();

Test 57: 
DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS");

Test 58: 
DirectoryScanner.matchPath("*C:TempCVR*/**", "*");

Test 59: 
DirectoryScanner.matchPath("/Users/John Doe/Documents/*", "/home/johndoe/Documents");

Test 60: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*.bak");

Test 61: 
DirectoryScanner.matchPath("**/lS/*", "/home/user/Documents/lS/file1.txt");

Test 62: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*", "*.pdf");
MockFile.createTempFile("*", "*.pdf", (File) null);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();

Test 63: 
DirectoryScanner.matchPath("**/*34*/*.txt", "**/*34*/*.txt");

Test 64: 
DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**");

Test 65: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");

Test 66: 
DirectoryScanner.match("example.txt", "");

Test 67: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "C:UsersJohn DoeDocuments");

Test 68: 
DirectoryScanner.match("test-*", "");

Test 69: 
DirectoryScanner.match("**/*.java", "CVbt[o");

Test 70: 
DirectoryScanner.match("A directory with a lot of files and subdirectories", "A directory with a lot of files and subdirectories");
DirectoryScanner.match("A directory with a few files but many subdirectories", "A directory with a few files but many subdirectories");
DirectoryScanner.match("An empty directory", "An empty directory");

Test 71: 
DirectoryScanner.match("*~", "file1.txt");
DirectoryScanner.match("*~", "file2.txt");
DirectoryScanner.match("*~", "folder/file3.txt");

Test 72: 
DirectoryScanner.match("*/CVS/**", "**/*.cvs");

Test 73: 
DirectoryScanner.match("**/*.vs", "com.lts.lang.classloader.SimpleFileFilter");

Test 74: 
DirectoryScanner.matchPath("a/b/c/d", "a/b/c/d");
DirectoryScanner.matchPath("a\bcd", "a/b/c/d");
DirectoryScanner.matchPath("a/b//c/d", "a/b/c/d");
DirectoryScanner.matchPath("a/b/c/.git", "a/b/c/.git");
DirectoryScanner.matchPath("a/b/c/d.txt", "a/b/c/d.txt");
DirectoryScanner.matchPath("a/b/c/d/e", "a/b/c/d/e");

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 76: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "example_file.txt";
directoryScanner.setIncludes(stringArray);

Test 77: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 78: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("test_file.txt");
((MockFile)"test_file.txt").createNewFile();
directoryScanner.scan();

Test 79: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "**/*.java";
stringArray[1] = "**/CVS/**";
stringArray[2] = "**/.gitignore";
stringArray[3] = "**/*~";
stringArray[4] = "(StZQ";
stringArray[5] = "**/*.txt";
stringArray[6] = "/**/*.md";
stringArray[7] = "**/temp/**";
stringArray[8] = "**/.git/**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("**/*.java", "**/CVS/**");
MockFile.createTempFile("**/*.java", "**/CVS/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 80: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersUser", "C:UsersUser");
MockFile.createTempFile("C:UsersUser", "C:UsersUser", (File) null);
String[] stringArray = new String[3];
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 81: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile.createTempFile("file1.txt", "temp.txt", (File) null);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 82: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my_file1.txt", "my_file2.txt");
directoryScanner.scandir(mockFile, "c:\temp", true);

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my-directory");
MockFile.createTempFile("my-file", "**/CVS/**", (File) null);
directoryScanner.scan();
String string = "**/CVS/**";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Documents", "Documents");
MockFile.createTempFile("documents", "documents", (File) null);
String[] stringArray = new String[6];
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();

Test 86: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "file1");
vector.add((Object) "file2");
directoryScanner.getIncludedFiles();

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", (File) null);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("sample_directory", "/**/.cvs8ignore");
MockFile.createTempFile("test_data_file_1.txt", "example_file_name", (File) mockFile);
MockFile.createTempFile("test_data_file_2.txt", "example_file_name", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*", "");
MockFile.createTempFile("*", "", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "directory1";
stringArray[0] = "directory2";
stringArray[0] = "directory3";
stringArray[0] = "file.txt";
directoryScanner.setExcludes(stringArray);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:/Temp");
MockFile.createTempFile("testfile", "txt", (File) null);
String[] stringArray = new String[6];
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6");
MockFile.createTempFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6", (File) null);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*", "*.java");
MockFile.createTempFile("*", "*.java", (File) mockFile);
directoryScanner.scan();
String string = "*";
directoryScanner.couldHoldIncluded(string);

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("example_dir", "/path/to/dir");
MockFile.createTempFile("example_file", "/path/to/dir", (File) null);
directoryScanner.getBasedir();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:Users\testuser");
directoryScanner.getBasedir();

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("example-basedir", "/**/.cvs8ignore");
FileSystemHandling.appendLineToFile((EvoSuiteFile) "/**/.cvs8ignore", (String) null);
directoryScanner.getBasedir();

Test 99: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersUserDocuments");
MockFile.createTempFile("V|R(", "V|R(", (File) null);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();

Test 101: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("example-file.txt");

Test 102: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:TempTestDir");
MockFile.createTempFile("testFile", "txt", (File) null);
directoryScanner.scan();

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "example_directory";
directoryScanner.isIncluded("example_directory");


* Generated after the refinement and before minimization 104 tests with total length 410
* test suite isTestSuite: 104
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("t;IG*?+17*VhI%Jc_T");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*/C%VS**", true);
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir);
String[] stringArray = new String[4];
stringArray[0] = "7igdqy;LJ95u{2k%d>";
stringArray[1] = "7igdqy;LJ95u{2k%d>";
stringArray[2] = "/**/.cvs8ignore";
stringArray[3] = "**/CVS/**";
directoryScanner.includes = stringArray;
directoryScanner.scan();
Test 4: 
DirectoryScanner.matchPatternStart("/**Z/CVS", "/**/CVS");
Test 5: 
DirectoryScanner.matchPath("*CVR/**", "*");
Test 6: 
DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");
Test 7: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 8: 
DirectoryScanner.matchPath("**/%*%", "**/cvig'ore");
Test 9: 
DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();
Test 11: 
DirectoryScanner.matchPath("**/3*4}eS_./**", "**/3*4}eS_./**");
Test 12: 
DirectoryScanner.matchPath("**/VS/**", "**/VS/**");
Test 13: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");
Test 14: 
DirectoryScanner.match("/*V%N>~(>Y7[Ks", "");
Test 15: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");
Test 16: 
DirectoryScanner.match("**", "");
Test 17: 
DirectoryScanner.match("**/CVbt[o", "CVbt[o");
Test 18: 
DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");
Test 19: 
DirectoryScanner.match("*~", "~");
Test 20: 
DirectoryScanner.match("*/CVS**", "**/CVS");
Test 21: 
DirectoryScanner.match("*/C%VS**", "com.lts.lang.classloader.SimpleFileFilter");
Test 22: 
DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "lNS{uC/";
directoryScanner.setIncludes(stringArray);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*/CVS**";
stringArray[1] = "*/CVS**";
stringArray[2] = "*/CVS**";
stringArray[3] = "*/CVS**";
stringArray[4] = "(StZQ";
stringArray[5] = "*/CVS**";
stringArray[6] = "*/CVS**";
stringArray[7] = "/**/*~";
stringArray[8] = "*/CVS**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&N46\"", "&N46\"");
try { 
  directoryScanner.scandir(mockFile, "&N46\"", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/&N46\"/&N46\"
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/CVS/**", false);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "u]8Jf|VS/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
stringArray[3] = "*/C%VS**";
stringArray[4] = "*/C%VS**";
stringArray[5] = "*/C%VS**";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*/C%VS**");
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("MlGK@ECN#");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("*V%N>~(>Y7[Ks");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("srcmain\resources");
directoryScanner.scan();

Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("c:/temp", "c:/temp");
MockFile.createTempFile("testfile1", "testfile2", (File) null);
String[] stringArray = new String[3];
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
String string = "subdir";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my_base_dir", "/**/.cvs8ignore");
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", (File) null);
String[] stringArray = new String[4];
directoryScanner.scan();

Test 57: 
DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS");

Test 58: 
DirectoryScanner.matchPath("*C:TempCVR*/**", "*");

Test 59: 
DirectoryScanner.matchPath("/Users/John Doe/Documents/*", "/home/johndoe/Documents");

Test 60: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*.bak");

Test 61: 
DirectoryScanner.matchPath("**/lS/*", "/home/user/Documents/lS/file1.txt");

Test 62: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*", "*.pdf");
MockFile.createTempFile("*", "*.pdf", (File) null);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();

Test 63: 
DirectoryScanner.matchPath("**/*34*/*.txt", "**/*34*/*.txt");

Test 64: 
DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**");

Test 65: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");

Test 66: 
DirectoryScanner.match("example.txt", "");

Test 67: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "C:UsersJohn DoeDocuments");

Test 68: 
DirectoryScanner.match("test-*", "");

Test 69: 
DirectoryScanner.match("**/*.java", "CVbt[o");

Test 70: 
DirectoryScanner.match("A directory with a lot of files and subdirectories", "A directory with a lot of files and subdirectories");
DirectoryScanner.match("A directory with a few files but many subdirectories", "A directory with a few files but many subdirectories");
DirectoryScanner.match("An empty directory", "An empty directory");

Test 71: 
DirectoryScanner.match("*~", "file1.txt");
DirectoryScanner.match("*~", "file2.txt");
DirectoryScanner.match("*~", "folder/file3.txt");

Test 72: 
DirectoryScanner.match("*/CVS/**", "**/*.cvs");

Test 73: 
DirectoryScanner.match("**/*.vs", "com.lts.lang.classloader.SimpleFileFilter");

Test 74: 
DirectoryScanner.matchPath("a/b/c/d", "a/b/c/d");
DirectoryScanner.matchPath("a\bcd", "a/b/c/d");
DirectoryScanner.matchPath("a/b//c/d", "a/b/c/d");
DirectoryScanner.matchPath("a/b/c/.git", "a/b/c/.git");
DirectoryScanner.matchPath("a/b/c/d.txt", "a/b/c/d.txt");
DirectoryScanner.matchPath("a/b/c/d/e", "a/b/c/d/e");

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 76: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "example_file.txt";
directoryScanner.setIncludes(stringArray);

Test 77: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 78: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("test_file.txt");
((MockFile)"test_file.txt").createNewFile();
directoryScanner.scan();

Test 79: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "**/*.java";
stringArray[1] = "**/CVS/**";
stringArray[2] = "**/.gitignore";
stringArray[3] = "**/*~";
stringArray[4] = "(StZQ";
stringArray[5] = "**/*.txt";
stringArray[6] = "/**/*.md";
stringArray[7] = "**/temp/**";
stringArray[8] = "**/.git/**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("**/*.java", "**/CVS/**");
MockFile.createTempFile("**/*.java", "**/CVS/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 80: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersUser", "C:UsersUser");
MockFile.createTempFile("C:UsersUser", "C:UsersUser", (File) null);
String[] stringArray = new String[3];
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 81: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile.createTempFile("file1.txt", "temp.txt", (File) null);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 82: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my_file1.txt", "my_file2.txt");
directoryScanner.scandir(mockFile, "c:\temp", true);

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my-directory");
MockFile.createTempFile("my-file", "**/CVS/**", (File) null);
directoryScanner.scan();
String string = "**/CVS/**";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Documents", "Documents");
MockFile.createTempFile("documents", "documents", (File) null);
String[] stringArray = new String[6];
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();

Test 86: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "file1");
vector.add((Object) "file2");
directoryScanner.getIncludedFiles();

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", (File) null);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("sample_directory", "/**/.cvs8ignore");
MockFile.createTempFile("test_data_file_1.txt", "example_file_name", (File) mockFile);
MockFile.createTempFile("test_data_file_2.txt", "example_file_name", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*", "");
MockFile.createTempFile("*", "", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "directory1";
stringArray[0] = "directory2";
stringArray[0] = "directory3";
stringArray[0] = "file.txt";
directoryScanner.setExcludes(stringArray);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:/Temp");
MockFile.createTempFile("testfile", "txt", (File) null);
String[] stringArray = new String[6];
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6");
MockFile.createTempFile("C:/Users/username/Desktop/MiF/l6", "C:/Users/username/Desktop/MiF/l6", (File) null);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*", "*.java");
MockFile.createTempFile("*", "*.java", (File) mockFile);
directoryScanner.scan();
String string = "*";
directoryScanner.couldHoldIncluded(string);

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("example_dir", "/path/to/dir");
MockFile.createTempFile("example_file", "/path/to/dir", (File) null);
directoryScanner.getBasedir();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:Users\testuser");
directoryScanner.getBasedir();

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("example-basedir", "/**/.cvs8ignore");
FileSystemHandling.appendLineToFile((EvoSuiteFile) "/**/.cvs8ignore", (String) null);
directoryScanner.getBasedir();

Test 99: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:UsersUserDocuments");
MockFile.createTempFile("V|R(", "V|R(", (File) null);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();

Test 101: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("example-file.txt");

Test 102: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:TempTestDir");
MockFile.createTempFile("testFile", "txt", (File) null);
directoryScanner.scan();

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "example_directory";
directoryScanner.isIncluded("example_directory");


* Minimizing test suite
* test suite isTestSuite: 51
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("srcmain\resources");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/CVS/**", false);
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*/C%VS**", true);
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*/C%VS**");
Test 6: 
DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS");
Test 7: 
DirectoryScanner.matchPath("*C:TempCVR*/**", "*");
Test 8: 
DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");
Test 9: 
DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*.bak");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 12: 
DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**");
Test 13: 
DirectoryScanner.matchPath("**/VS/**", "**/VS/**");
Test 14: 
DirectoryScanner.match("test-*", "");
Test 15: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");
Test 16: 
DirectoryScanner.match("**", "");
Test 17: 
DirectoryScanner.match("**/CVbt[o", "CVbt[o");
Test 18: 
DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");
Test 19: 
DirectoryScanner.match("*~", "~");
Test 20: 
DirectoryScanner.match("*/CVS**", "**/CVS");
Test 21: 
DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "lNS{uC/";
directoryScanner.setIncludes(stringArray);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "u]8Jf|VS/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*/CVS**";
stringArray[1] = "*/CVS**";
stringArray[2] = "*/CVS**";
stringArray[3] = "*/CVS**";
stringArray[4] = "(StZQ";
stringArray[5] = "*/CVS**";
stringArray[6] = "*/CVS**";
stringArray[7] = "/**/*~";
stringArray[8] = "*/CVS**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("my_file1.txt", "my_file2.txt");
try { 
  directoryScanner.scandir(mockFile, "c:\temp", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/my_file1.txt/my_file2.txt
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
stringArray[3] = "*/C%VS**";
stringArray[4] = "*/C%VS**";
stringArray[5] = "*/C%VS**";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
directoryScanner.getBasedir();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("*V%N>~(>Y7[Ks");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 224
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 307
* Number of covered goals: 303
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 62
* Number of covered goals: 47
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 224
* Generated 51 tests with total length 211
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("srcmain\resources");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSetBasedirAndScanThrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File basedir = directoryScanner.getBasedir();
assertNull(basedir);


** It was a parseable test case! 
refined test name is: testGetBasedirReturnsNullWhenDirectoryIsNotSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartValidInputReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) arg0;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(arg0, "**/CVS/**", false);
assertTrue(arg0.canWrite());


** It was a parseable test case! 
refined test name is: testDirectoryScannercanCreateTempFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) arg2;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) arg2);
directoryScanner.scan();
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("*/C%VS**");
assertTrue(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithPatternMatching
* Compiling Tests
refined test name is: testScanWithIncludePattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("/home/user/project/src/**Z/CVS", "/home/user/project/src/**/CVS");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartNoCommentAdded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("*C:TempCVR*/**", "*");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWhenGlobPatternIsInvalid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathwithInvalidPatternreturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithInvalidCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
boolean excluded = directoryScanner.isExcluded("*.bak");
assertFalse(excluded);


** It was a parseable test case! 
refined test name is: testIsExcludedWithExtension
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
boolean excluded = directoryScanner.isExcluded("*~");
assertFalse(excluded);


** It was a parseable test case! 
refined test name is: testDefaultExclusions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/Visual Studio/**", "**/Visual Studio/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithPattern
* Compiling Tests
refined test name is: testMatchPathWithSamePattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/VS/**", "**/VS/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithAsterisks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("test-*", "");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testNoMatchingFilesInEmptyDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithSameInputshouldReturnTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**", "");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchAnyPatternWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/CVbt[o", "CVbt[o");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchWithDifferentCase
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testDirectoryScannerMatchReturnsTrueForSameString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("*~", "~");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchesReturnsTrueForGlobPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("*/CVS**", "**/CVS");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchPatternWithWildcard
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathReturnsTrueForEqualPaths
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
refined test name is: testDirectoryScannerIncludeAllFilesAndDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "lNS{uC/";
directoryScanner.setIncludes(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithDefaultSettingsAndIncludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
refined test name is: testScanWithNullExcludePatterns
* Compiling Tests
refined test name is: testScanningWithNullExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[4];
arg0[0] = "u]8Jf|VS/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSetExcludesThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testIllegalStateExceptionThrownWhenBasedirNotSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanOnNonDirectoryBaseDirThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSlowScanWithoutInputParametersThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(0, notIncludedDirectories.length);

String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanWithExcludePatternsNoFilesAreExcluded
* Compiling Tests
refined test name is: testDirectoryScannerWithExcludePatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[9];
arg0[0] = "*/CVS**";
arg0[1] = "*/CVS**";
arg0[2] = "*/CVS**";
arg0[3] = "*/CVS**";
arg0[4] = "(StZQ";
arg0[5] = "*/CVS**";
arg0[6] = "*/CVS**";
arg0[7] = "/**/*~";
arg0[8] = "*/CVS**";
directoryScanner.setExcludes(arg0);
MockFile arg2 = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) arg2;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) arg2);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(1, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testDirectoryScanner
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) arg2;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) arg2);
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(2, notIncludedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanWithWildcards
* Compiling Tests
refined test name is: testScanWithWildcards
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] arg0 = new String[3];
arg0[0] = "*/C%VS**";
arg0[1] = "*/C%VS**";
arg0[2] = "*/C%VS**";
directoryScanner.setIncludes(arg0);
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertFalse(excludedFiles.equals((Object)arg0));


** It was a parseable test case! 
refined test name is: testExcludePatternWithSpecialCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("my_file1.txt", "my_file2.txt");
try { 
  directoryScanner.scandir(arg0, "c:\temp", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/my_file1.txt/my_file2.txt
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputFiles
* Compiling Tests
refined test name is: testScandirthrowsExceptionWhenInputFilesAreNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(1, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanWithExcludePatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(0, includedFiles.length);
assertNotNull(includedFiles);


** It was a parseable test case! 
refined test name is: testGetIncludedFilesWhenNoFilesAreIncluded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
String[] includedFiles = directoryScanner.getIncludedFiles();
assertNotNull(includedFiles);
assertEquals(1, includedFiles.length);


** It was a parseable test case! 
refined test name is: testGetIncludedFilesSingleFileReturnsFileNameArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) arg2;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) arg2);
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(1, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testNotIncludedFileCreatedByTest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(0, includedDirectories.length);
assertNotNull(includedDirectories);


** It was a parseable test case! 
refined test name is: testGetIncludedDirectoriesShouldReturnEmptyArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) arg2;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) arg2);
directoryScanner.scan();
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(2, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanReturnsTwoElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
refined test name is: testScanForFilesWithDefaultExclusions
* Compiling Tests
refined test name is: testScanForFilesMatchingPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);

** It was a parseable test case! 
refined test name is: testSetBasedirShouldSetCorrectly
* Compiling Tests
refined test name is: testSetBasedirshouldSetBasedirToProvidedDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] arg0 = new String[6];
arg0[0] = "*/C%VS**";
arg0[1] = "*/C%VS**";
arg0[2] = "*/C%VS**";
arg0[3] = "*/C%VS**";
arg0[4] = "*/C%VS**";
arg0[5] = "*/C%VS**";
directoryScanner.setExcludes(arg0);
directoryScanner.setIncludes(arg0);
directoryScanner.scan();

** It was a parseable test case! 
refined test name is: testDirectoryScannerWithExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanDoesNotExcludeAnyFiles
* Compiling Tests
refined test name is: testScanMethodShouldNotExcludeAnyFilesInBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
File basedir = directoryScanner.getBasedir();
assertFalse(basedir.isAbsolute());


** It was a parseable test case! 
refined test name is: testGetSetBasedirNonAbsolutePath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
File basedir = directoryScanner.getBasedir();
assertTrue(basedir.canExecute());


** It was a parseable test case! 
refined test name is: testValidDirectoryCanBeSetAndExecuted
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile arg0 = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(arg0, "/**/.cvs8ignore");
File basedir = directoryScanner.getBasedir();
assertEquals(0L, basedir.getTotalSpace());


** It was a parseable test case! 
refined test name is: testSetBasedirWithIgnoreFile
* Compiling Tests
refined test name is: testAddIgnoreFileToDirectoryScanner
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(0, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testEmptyExcludedDirectoriesAfterScan
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(0, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanreturnsEmptyListOfNotIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
boolean included = directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");
assertFalse(included);


** It was a parseable test case! 
refined test name is: testIsIncludedWhenTempFileCreatedInBasedir
* Compiling Tests
refined test name is: testIsNotIncludedWhenFileIsOutsideBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
boolean included = directoryScanner.isIncluded("*V%N>~(>Y7[Ks");
assertTrue(included);


** It was a parseable test case! 
refined test name is: testIsIncludedWithValidPattern
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.381 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.400 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.451 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.498 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.572 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 22:08:29.573 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:29.657 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.658 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.703 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.704 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.757 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.757 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.797 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.841 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.880 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:29.923 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:29.971 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:29.972 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.070 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.071 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.152 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.153 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.210 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 22:08:30.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
* Compiling Tests
[MASTER] 22:08:30.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.292 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.350 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.351 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.470 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.534 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.600 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.601 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 22:08:30.669 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
* Compiling Tests
[MASTER] 22:08:30.726 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:30.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.797 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.859 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.860 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.916 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:30.964 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:30.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.021 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.022 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:31.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.170 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.171 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:31.224 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.225 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.292 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:31.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.442 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.443 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.498 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 22:08:31.547 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.548 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
* Compiling Tests
[MASTER] 22:08:31.599 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.599 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.650 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:31.690 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.693 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:31.734 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.735 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.797 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.798 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:31.848 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.849 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.903 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.904 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:31.953 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:31.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:32.006 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:32.006 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:32.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:32.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
[MASTER] 22:08:32.111 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:32.111 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:08:32.166 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:32.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:08:32.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:32.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 23 called: 2 to improve: false
** Write a test suite: 28 called: 3 to improve: false
** Write a test suite: 30 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 39 called: 6 to improve: false
** Write a test suite: 40 called: 7 to improve: false
** Write a test suite: 42 called: 8 to improve: false
** Write a test suite: 45 called: 9 to improve: false
** Write a test suite: 48 called: 10 to improve: false
[MASTER] 22:08:33.684 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:33.685 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 7 called: 2 to improve: false
** Write a test suite: 9 called: 3 to improve: false
** Write a test suite: 10 called: 4 to improve: false
** Write a test suite: 17 called: 5 to improve: false
** Write a test suite: 19 called: 6 to improve: false
** Write a test suite: 21 called: 7 to improve: false
** Write a test suite: 26 called: 8 to improve: false
** Write a test suite: 38 called: 9 to improve: false
** Write a test suite: 45 called: 10 to improve: false
[MASTER] 22:08:35.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:08:35.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
[MASTER] 22:08:37.178 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 54
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("t;IG*?+17*VhI%Jc_T");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*/C%VS**", true);
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir);
String[] stringArray = new String[4];
stringArray[0] = "7igdqy;LJ95u{2k%d>";
stringArray[1] = "7igdqy;LJ95u{2k%d>";
stringArray[2] = "/**/.cvs8ignore";
stringArray[3] = "**/CVS/**";
directoryScanner.includes = stringArray;
directoryScanner.scan();
Test 4: 
DirectoryScanner.matchPatternStart("/**Z/CVS", "/**/CVS");
Test 5: 
DirectoryScanner.matchPath("*CVR/**", "*");
Test 6: 
DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");
Test 7: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 8: 
DirectoryScanner.matchPath("**/%*%", "**/cvig'ore");
Test 9: 
DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();
Test 11: 
DirectoryScanner.matchPath("**/3*4}eS_./**", "**/3*4}eS_./**");
Test 12: 
DirectoryScanner.matchPath("**/VS/**", "**/VS/**");
Test 13: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");
Test 14: 
DirectoryScanner.match("/*V%N>~(>Y7[Ks", "");
Test 15: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");
Test 16: 
DirectoryScanner.match("**", "");
Test 17: 
DirectoryScanner.match("**/CVbt[o", "CVbt[o");
Test 18: 
DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");
Test 19: 
DirectoryScanner.match("*~", "~");
Test 20: 
DirectoryScanner.match("*/CVS**", "**/CVS");
Test 21: 
DirectoryScanner.match("*/C%VS**", "com.lts.lang.classloader.SimpleFileFilter");
Test 22: 
DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "lNS{uC/";
directoryScanner.setIncludes(stringArray);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*/CVS**";
stringArray[1] = "*/CVS**";
stringArray[2] = "*/CVS**";
stringArray[3] = "*/CVS**";
stringArray[4] = "(StZQ";
stringArray[5] = "*/CVS**";
stringArray[6] = "*/CVS**";
stringArray[7] = "/**/*~";
stringArray[8] = "*/CVS**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&N46\"", "&N46\"");
try { 
  directoryScanner.scandir(mockFile, "&N46\"", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/&N46\"/&N46\"
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/CVS/**", false);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "u]8Jf|VS/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
stringArray[3] = "*/C%VS**";
stringArray[4] = "*/C%VS**";
stringArray[5] = "*/C%VS**";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*/C%VS**");
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("MlGK@ECN#");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("*V%N>~(>Y7[Ks");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
[MASTER] 22:08:46.007 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 54
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("t;IG*?+17*VhI%Jc_T");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart(" [wsM~aV?(VM", " [wsM~aV?(VM");
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7~-igBq;LJ95uK2ks%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7~-igBq;LJ95uK2ks%d>", "**/CVS/**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/CVS/**", false);
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.scandir(mockFile, "*/C%VS**", true);
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.couldHoldIncluded("*/C%VS**");
Test 6: 
DirectoryScanner.matchPatternStart("/**Z/CVS", "/**/CVS");
Test 7: 
DirectoryScanner.matchPath("*CVR/**", "*");
Test 8: 
DirectoryScanner.matchPath("/**/.cvs8ignore07igdqy;LJ95u{2k%d>", "/");
Test 9: 
DirectoryScanner.matchPath("**/lS/*", "4G#Bi6'gy5 v?E)`aM|");
Test 10: 
DirectoryScanner.matchPath("**/%*%", "**/cvig'ore");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("*~");
Test 12: 
DirectoryScanner.matchPath("**/3*4}eS_./**", "**/3*4}eS_./**");
Test 13: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "7igdqy;LJ95u{2k%d>", directoryScanner.basedir);
String[] stringArray = new String[4];
stringArray[0] = "7igdqy;LJ95u{2k%d>";
stringArray[1] = "7igdqy;LJ95u{2k%d>";
stringArray[2] = "/**/.cvs8ignore";
stringArray[3] = "**/CVS/**";
directoryScanner.includes = stringArray;
directoryScanner.scan();
Test 14: 
DirectoryScanner.matchPath("**/VS/**", "**/VS/**");
Test 15: 
DirectoryScanner.match("/*V%N>~(>Y7[Ks", "");
Test 16: 
DirectoryScanner.matchPath("5X\"6/? *Pf(xfbkP", "5X\"6/? *Pf(xfbkP");
Test 17: 
DirectoryScanner.match("**", "");
Test 18: 
DirectoryScanner.match("**/CVbt[o", "CVbt[o");
Test 19: 
DirectoryScanner.match("H;l-y[R$2C<W*'U1?", "H;l-y[R$2C<W*'U1?");
Test 20: 
DirectoryScanner.match("*~", "~");
Test 21: 
DirectoryScanner.match("*/CVS**", "**/CVS");
Test 22: 
DirectoryScanner.match("*/C%VS**", "com.lts.lang.classloader.SimpleFileFilter");
Test 23: 
DirectoryScanner.matchPath("t;IG*?+17*VhI%Jc_T", "t;IG*?+17*VhI%Jc_T");
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "lNS{uC/";
directoryScanner.setIncludes(stringArray);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "u]8Jf|VS/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
mockFile.createNewFile();
directoryScanner.basedir = (File) mockFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*/CVS**";
stringArray[1] = "*/CVS**";
stringArray[2] = "*/CVS**";
stringArray[3] = "*/CVS**";
stringArray[4] = "(StZQ";
stringArray[5] = "*/CVS**";
stringArray[6] = "*/CVS**";
stringArray[7] = "/**/*~";
stringArray[8] = "*/CVS**";
directoryScanner.setExcludes(stringArray);
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("8*/QVS**", "8*/QVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("8*/QVS**", "8*/QVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**", "*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[3];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&N46\"", "&N46\"");
try { 
  directoryScanner.scandir(mockFile, "&N46\"", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/&N46\"/&N46\"
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("4*TbUn.YhuE $$C9vg", "4*TbUn.YhuE $$C9vg", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "4*TbUn.YhuE $$C9vg";
directoryScanner.excludes = stringArray;
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
vector.add((Object) "!h>>5J-G");
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "H=$L]c ]?N3kN|_+n", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<Object> vector = new Vector<Object>();
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/CVS**", "*/CVS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/CVS**", "*/CVS**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) null);
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("*/C%VS**");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("*/C%VS**", "*/C%VS**", directoryScanner.basedir);
String[] stringArray = new String[6];
stringArray[0] = "*/C%VS**";
stringArray[1] = "*/C%VS**";
stringArray[2] = "*/C%VS**";
stringArray[3] = "*/C%VS**";
stringArray[4] = "*/C%VS**";
stringArray[5] = "*/C%VS**";
directoryScanner.setExcludes(stringArray);
directoryScanner.setIncludes(stringArray);
directoryScanner.scan();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("MiF/l6", "MiF/l6");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("MiF/l6", "MiF/l6", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile(">-rI9tF@gly..i^M^u!", "/**/.cvs8ignore", directoryScanner.basedir);
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Sr;&+m%<f6F6%5Z`AFA/**/.cvs8ignore");
FileSystemHandling.appendLineToFile(evoSuiteFile, "/**/.cvs8ignore");
directoryScanner.getBasedir();
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("V|R(");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("V|R(", "V|R(", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("Sr;&+m%<f6F6%5Z`AFA", "/**/.cvs8ignore");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("/**/.cvs8ignore", "Sr;&+m%<f6F6%5Z`AFA", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.isExcluded("MlGK@ECN#");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("7igdqy;LJ95u{2k%d>");
directoryScanner.basedir = (File) mockFile;
MockFile.createTempFile("7igdqy;LJ95u{2k%d>", "zBE8a$", directoryScanner.basedir);
directoryScanner.scan();
directoryScanner.isIncluded("7igdqy;LJ95u{2k%d>");
Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "*V%N>~(>Y7[Ks";
directoryScanner.includes = stringArray;
directoryScanner.isIncluded("*V%N>~(>Y7[Ks");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 224
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 307
* Number of covered goals: 303
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 62
* Number of covered goals: 47
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 224
* Generated 54 tests with total length 224
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 22:08:46.242 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 22:09:00.080 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:02.928 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:02.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.013 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.015 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.124 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.125 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.198 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.243 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.320 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.380 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.381 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.440 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.440 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.531 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.619 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.620 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.703 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.704 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.833 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.834 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:03.914 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:03.926 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.020 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.021 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.082 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.254 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.314 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.453 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.503 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.551 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.552 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.595 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.596 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.647 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.648 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.714 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.715 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.772 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.773 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.859 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.860 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.917 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:04.993 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:04.994 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.057 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.134 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.231 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.232 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.295 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.400 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.402 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.485 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.487 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.539 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.584 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.585 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.638 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.704 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.705 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.765 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.832 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.833 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.892 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.897 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:05.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:05.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:06.034 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.035 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:06.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:06.181 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:06.491 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:06.529 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.529 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 22:09:06.588 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.589 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:09:06.629 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:06.630 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
[MASTER] 22:09:07.038 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:07.039 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
[MASTER] 22:09:07.516 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar5931451621113252036.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:09:07.517 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5931451621113252036.jar
* Writing tests to file
[MASTER] 22:09:07.524 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'DirectoryScanner_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 7 called: 2 to improve: false
** Write a test suite: 9 called: 3 to improve: false
** Write a test suite: 10 called: 4 to improve: false
** Write a test suite: 17 called: 5 to improve: false
** Write a test suite: 19 called: 6 to improve: false
** Write a test suite: 21 called: 7 to improve: false
** Write a test suite: 26 called: 8 to improve: false
** Write a test suite: 38 called: 9 to improve: false
** Write a test suite: 45 called: 10 to improve: false
* Writing JUnit test case 'DirectoryScanner_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
* Done!

* Computation finished
