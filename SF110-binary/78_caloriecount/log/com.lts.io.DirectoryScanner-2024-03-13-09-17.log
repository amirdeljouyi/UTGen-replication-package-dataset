* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.io.DirectoryScanner
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 5690
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:17:05.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:17:05.708 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:17:05.709 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:17:05.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.lts.io.DirectoryScanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 855
* Using seed 1710321422789
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 170 / 855
[Progress:>                             0%] [Cov:===========>                       34%][Progress:>                             0%] [Cov:=============>                     38%][Progress:>                             1%] [Cov:=============>                     38%][Progress:>                             1%] [Cov:===============>                   43%][Progress:>                             1%] [Cov:=================>                 50%][Progress:>                             1%] [Cov:=================>                 50%][Progress:>                             1%] [Cov:=================>                 50%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             2%] [Cov:==================>                54%][Progress:>                             2%] [Cov:==================>                54%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:====================>              59%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            65%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=========================>         72%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        77%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      81%][Progress:=>                            4%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            6%] [Cov:============================>      81%][Progress:=>                            6%] [Cov:============================>      81%][Progress:=>                            6%] [Cov:============================>      81%][Progress:=>                            6%] [Cov:============================>      81%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         15%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:====>                         16%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        17%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        18%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:=====>                        19%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       20%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       21%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:======>                       23%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      25%] [Cov:===============================>   89%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   90%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:==========>                   36%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][MASTER] 09:18:31.824 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:============>                 43%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][MASTER] 09:19:31.293 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%]
* Search finished after 201s and 2088 generations, 605564 statements, best individual has fitness: 27.0
* Generated before the refinement 53 tests with total length 214
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("*u*~")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*u*~")
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*u*~", "*u*~", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile mockFile = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) mockFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\John Doe");
        MockFile mockFile = new MockFile("C:\\Users\\John Doe");
        directoryScanner.addDefaultExcludes();
        MockFile.createTempFile("temp_file", "txt", ((File) (mockFile)));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("C:\\Users\\John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: MockFile.createTempFile("temp_file", "txt", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("temp_file", "txt", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe";
directoryScanner.setBasedir(string);
String string = "C:\\Users\\John Doe";
MockFile mockFile = new MockFile(string);
directoryScanner.addDefaultExcludes();
String string = "temp_file";
String string = "txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner("C:\\Users\\John");
        directoryScanner.setIncludes(new String[]{ "*.java", "*.txt" });
        directoryScanner.setExcludes(new String[]{ "temp*", "backup*" });
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner("C:\\Users\\John"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setIncludes(new String[]{ "*.java", "*.txt" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "*.java", "*.txt" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
statement is: directoryScanner.setExcludes(new String[]{ "temp*", "backup*" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "temp*", "backup*" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("**#/CV<Y/**")
statement is: org.evosuite.testcase.statements.ArrayStatement@dc29bfb0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@82631d13 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "**#/CV<Y/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f41bbb5a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "**#/CV<Y/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@7f134428 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "**#/CV<Y/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@2881a61e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "**#/CV<Y/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ecf366ec type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "**#/CV<Y/**"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
stringArray[0] = "**#/CV<Y/**";
stringArray[1] = "**#/CV<Y/**";
stringArray[2] = "**#/CV<Y/**";
stringArray[3] = "**#/CV<Y/**";
stringArray[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("**#/CV<Y/**");
        String[] stringArray = new String[5];
        stringArray[0] = "**#/CV<Y/**";
        stringArray[1] = "**#/CV<Y/**";
        stringArray[2] = "**#/CV<Y/**";
        stringArray[3] = "**#/CV<Y/**";
        stringArray[4] = "**#/CV<Y/**";
        directoryScanner.setIncludes(stringArray);
        MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
        MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getNotIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("**#/CV<Y/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("**#/CV<Y/**") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**#/CV<Y/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**#/CV<Y/**" Ct is: stringArray[0] = "**#/CV<Y/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@16734625
statement is: stringArray[1] = "**#/CV<Y/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**#/CV<Y/**" Ct is: stringArray[1] = "**#/CV<Y/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@cc5a6a94
statement is: stringArray[2] = "**#/CV<Y/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**#/CV<Y/**" Ct is: stringArray[2] = "**#/CV<Y/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@80326ec3
statement is: stringArray[3] = "**#/CV<Y/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**#/CV<Y/**" Ct is: stringArray[3] = "**#/CV<Y/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a34b2dc3
statement is: stringArray[4] = "**#/CV<Y/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**#/CV<Y/**" Ct is: stringArray[4] = "**#/CV<Y/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b4cd45e1
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
* this is vulnerable: String string = "**#/CV<Y/**"
* this is vulnerable: String string = "**#/CV<Y/**"
* this is vulnerable: String string = "**#/CV<Y/**"
* this is vulnerable: String string = "**#/CV<Y/**"
* this is vulnerable: String string = "**#/CV<Y/**"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "**#/CV<Y/**";
directoryScanner.setBasedir(string);
String[] stringArray = new String[5];
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
MockFile mockFile = new MockFile(string, string);
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset");
        directoryScanner.scan();
        assertEquals(20, directoryScanner.getFiles().size());
        assertTrue(directoryScanner.getFiles().contains("SF110-new-res"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: assertEquals(20, directoryScanner.getFiles().size()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(20, directoryScanner.getFiles().size()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertTrue(directoryScanner.getFiles().contains("SF110-new-res")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(directoryScanner.getFiles().contains("SF110-new-res")) target is:  method is: assertTrue(<unknown>)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/roham/Results-Utestgen/dataset";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@4c04a3ce type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5a940606 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*t/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@6727bb40 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "*t/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@9964cc5a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "*t/CVS/*"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("*t/CVS/*")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "*t/CVS/*";
stringArray[1] = "*t/CVS/*";
stringArray[2] = "*t/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[3];
        stringArray[0] = "**/*.java";
        stringArray[1] = "**/*.class";
        stringArray[2] = "**/test-output/**";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.setBasedir(".");
        MockFile mockFile = new MockFile("src/main/java", "src/test/java");
        MockFile.createTempFile("src/main/java", "src/test/java", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.java" Ct is: stringArray[0] = "**/*.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "**/*.class", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.class" Ct is: stringArray[1] = "**/*.class"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "**/test-output/**", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/test-output/**" Ct is: stringArray[2] = "**/test-output/**"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.setBasedir("."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(".") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("src/main/java", "src/test/java"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("src/main/java", "src/test/java", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("src/main/java", "src/test/java", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
String string = "**/*.java";
stringArray[0] = string;
String string = "**/*.class";
stringArray[1] = string;
String string = "**/test-output/**";
stringArray[2] = string;
directoryScanner.setIncludes(stringArray);
String string = ".";
directoryScanner.setBasedir(string);
String string = "src/main/java";
String string = "src/test/java";
MockFile mockFile = new MockFile(string, string);
String string = "src/main/java";
String string = "src/test/java";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@31d95f8d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4123b076 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "**/*~"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("**/*~")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**/*~")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**/*~", "**/*~", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*~";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("**/*~");
MockFile mockFile = new MockFile("**/*~");
MockFile.createTempFile("**/*~", "**/*~", (File) mockFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "**/*.txt";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.setBasedir("C:/Users/username/Documents");
        MockFile mockFile = new MockFile("**/*.txt");
        MockFile.createTempFile("**/*.txt", "**/*.txt", ((File) (mockFile)));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.txt" Ct is: stringArray[0] = "**/*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.setBasedir("C:/Users/username/Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:/Users/username/Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("**/*.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("**/*.txt", "**/*.txt", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("**/*.txt", "**/*.txt", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "**/*.txt";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);
String string = "C:/Users/username/Documents";
directoryScanner.setBasedir(string);
String string = "**/*.txt";
MockFile mockFile = new MockFile(string);
String string = "**/*.txt";
String string = "**/*.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@44a43933 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dece4819 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "U`'Tzyv QUN7-jn~Pq#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@14da8493 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "13e3Md5q1MvJ("
statement is: org.evosuite.testcase.statements.AssignmentStatement@31f1f1c6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "3*\rU[z*}|,=(/2m"
statement is: org.evosuite.testcase.statements.AssignmentStatement@65d76e1b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "nr"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e5dda271 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "*$\"J[cr(t"
statement is: org.evosuite.testcase.statements.AssignmentStatement@bafa3073 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "_q*L/l"
statement is: org.evosuite.testcase.statements.AssignmentStatement@276d372a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@7d887ec7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[7] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@acbc2f47 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[8] = " *9I$@("
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("n")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[9];
        stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";// This is a non-standard character sequence that looks like a password

        stringArray[1] = "13e3Md5q1MvJ(";// This is a random string of characters

        stringArray[2] = "3*\rU[z*}|,=(/2m";// This is another random string of characters

        stringArray[3] = "nr";// This is a single character that looks like a letter "n"

        stringArray[4] = "*$\"J[cr(t";// This is another random string of characters

        stringArray[5] = "_q*L/l";// This is a single character that looks like an underscore followed by the letter "q"

        stringArray[6] = "";// This is an empty string

        stringArray[7] = "";// This is another empty string

        stringArray[8] = " *9I$@(";// This is a random string of characters

        directoryScanner.setIncludes(stringArray);
        directoryScanner.couldHoldIncluded("n");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "U`'Tzyv QUN7-jn~Pq#"// This is a non-standard character sequence that looks like a password
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"U`'Tzyv QUN7-jn~Pq#" Ct is: stringArray[0] = "U`'Tzyv QUN7-jn~Pq#"// This is a non-standard character sequence that looks like a password

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "13e3Md5q1MvJ("// This is a random string of characters
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"13e3Md5q1MvJ(" Ct is: stringArray[1] = "13e3Md5q1MvJ("// This is a random string of characters

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "3*\rU[z*}|,=(/2m"// This is another random string of characters
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"3*\rU[z*}|,=(/2m" Ct is: stringArray[2] = "3*\rU[z*}|,=(/2m"// This is another random string of characters

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "nr"// This is a single character that looks like a letter "n"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"nr" Ct is: stringArray[3] = "nr"// This is a single character that looks like a letter "n"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "*$\"J[cr(t"// This is another random string of characters
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*$\"J[cr(t" Ct is: stringArray[4] = "*$\"J[cr(t"// This is another random string of characters

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "_q*L/l"// This is a single character that looks like an underscore followed by the letter "q"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"_q*L/l" Ct is: stringArray[5] = "_q*L/l"// This is a single character that looks like an underscore followed by the letter "q"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = ""// This is an empty string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[6] = ""// This is an empty string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = ""// This is another empty string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[7] = ""// This is another empty string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = " *9I$@("// This is a random string of characters
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:" *9I$@(" Ct is: stringArray[8] = " *9I$@("// This is a random string of characters

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.couldHoldIncluded("n"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("n") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
String string = "U`'Tzyv QUN7-jn~Pq#";
stringArray[0] = string;
String string = "13e3Md5q1MvJ(";
stringArray[1] = string;
String string = "3*\rU[z*}|,=(/2m";
stringArray[2] = string;
String string = "nr";
stringArray[3] = string;
String string = "*$\"J[cr(t";
stringArray[4] = string;
String string = "_q*L/l";
stringArray[5] = string;
String string = "";
stringArray[6] = string;
String string = "";
stringArray[7] = string;
String string = " *9I$@(";
stringArray[8] = string;
directoryScanner.setIncludes(stringArray);
String string = "n";
directoryScanner.couldHoldIncluded(string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("*==", "**/.cvsignore")
test data is: DirectoryScanner.matchPath("*==", "**/.cvsignore");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("*.txt", "/home/user/Documents");
    }
}
statement is: DirectoryScanner.matchPath("*.txt", "/home/user/Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("*.txt", "/home/user/Documents") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*.txt";
String string = "/home/user/Documents";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/VS/*", "*")
test data is: DirectoryScanner.matchPath("**/VS/*", "*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/VS/*", "*.java");
    }
}
statement is: DirectoryScanner.matchPath("**/VS/*", "*.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/VS/*", "*.java") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/VS/*";
String string = "*.java";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**//**", "**//**")
test data is: DirectoryScanner.matchPath("**//**", "**//**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/");
    }
}
statement is: DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*.txt";
String string = "**/src/main/java/com/example/myapp/";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@2451e935 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@609f4716 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "hB?"
statement is: org.evosuite.testcase.statements.AssignmentStatement@1027b56b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "hB?"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("hB?")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "hB?";
stringArray[1] = "hB?";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("hB?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] includePatterns = new String[2];
        includePatterns[0] = "*.txt";
        includePatterns[1] = "**/*.java";
        directoryScanner.setIncludes(includePatterns);
        directoryScanner.isIncluded("testfile1.txt");
        directoryScanner.isIncluded("testfile2.java");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] includePatterns = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: includePatterns[0] = "*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : includePatterns[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: includePatterns[0] = "*.txt"
target : includePatterns class spoon.support.reflect.code.CtLiteralImpl
statement is: includePatterns[1] = "**/*.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : includePatterns[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.java" Ct is: includePatterns[1] = "**/*.java"
target : includePatterns class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(includePatterns), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(includePatterns) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.isIncluded("testfile1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("testfile1.txt") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.isIncluded("testfile2.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("testfile2.java") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
String string = "*.txt";
stringArray[0] = string;
String string = "**/*.java";
stringArray[1] = string;
directoryScanner.setIncludes(stringArray);
String string = "testfile1.txt";
directoryScanner.isIncluded(string);
String string = "testfile2.java";
directoryScanner.isIncluded(string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("6*", "")
test data is: DirectoryScanner.match("6*", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("61729", "");
    }
}
statement is: DirectoryScanner.match("61729", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("61729", "") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "61729";
String string = "";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("=?->CI*", "=?->CI*")
test data is: DirectoryScanner.match("=?->CI*", "=?->CI*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("equals->capitalLetter*", "hyphen->lowercaseLetter*");
    }
}
statement is: DirectoryScanner.match("equals->capitalLetter*", "hyphen->lowercaseLetter*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("equals->capitalLetter*", "hyphen->lowercaseLetter*") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "equals->capitalLetter*";
String string = "hyphen->lowercaseLetter*";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**", "")
test data is: DirectoryScanner.match("**", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/*.java", "src/main/java");
    }
}
statement is: DirectoryScanner.match("**/*.java", "src/main/java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/*.java", "src/main/java") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*.java";
String string = "src/main/java";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/*a~", "~")
test data is: DirectoryScanner.match("**/*a~", "~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/*a*", "*");
    }
}
statement is: DirectoryScanner.match("**/*a*", "*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/*a*", "*") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*a*";
String string = "*";
DirectoryScanner.match(string, string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*")
test data is: DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("*.txt", "*.xml");
        DirectoryScanner.matchPatternStart("CVS/*", "CVS/*");
    }
}
statement is: DirectoryScanner.matchPatternStart("*.txt", "*.xml"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("*.txt", "*.xml") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPatternStart("CVS/*", "CVS/*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("CVS/*", "CVS/*") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*.txt";
String string = "*.xml";
DirectoryScanner.matchPatternStart(string, string);
String string = "CVS/*";
String string = "CVS/*";
DirectoryScanner.matchPatternStart(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*~", "~")
test data is: DirectoryScanner.match("*~", "~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("*txt", "file1.txt");
    }
}
statement is: DirectoryScanner.match("*txt", "file1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*txt", "file1.txt") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*txt";
String string = "file1.txt";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/*bS/**", "/")
test data is: DirectoryScanner.match("**/*bS/**", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        DirectoryScanner.match("**/documents/test_data.txt/**", "src/test/resources");
    }
}
statement is: // Improved test data
DirectoryScanner.match("**/documents/test_data.txt/**", "src/test/resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
DirectoryScanner.match("**/documents/test_data.txt/**", "src/test/resources") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/documents/test_data.txt/**";
String string = "src/test/resources";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("*t/CVS/**", "U,.N[0#sQk")
test data is: DirectoryScanner.match("*t/CVS/**", "U,.N[0#sQk");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("*test/CVS/**", "[a-zA-Z0-9_]*");
    }
}
statement is: DirectoryScanner.match("*test/CVS/**", "[a-zA-Z0-9_]*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*test/CVS/**", "[a-zA-Z0-9_]*") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "*test/CVS/**";
String string = "[a-zA-Z0-9_]*";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*")
test data is: DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*");
    }
}
statement is: DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "dataSetB01?Gc*";
String string = "dataSetB02?Gc*";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.docx" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.docx" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "**/*.txt", "**/*.docx" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setExcludes(new String[]{ "*.txt", "*.pdf" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setExcludes(new String[]{ "*.txt", "*.pdf" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "*.txt", "*.pdf" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@45392508 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ae3bff2e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*/"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "*/";
directoryScanner.setExcludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "example/*";
        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "example/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example/*" Ct is: stringArray[0] = "example/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "example/*";
stringArray[0] = string;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.scan("/path/to/text_files");
        directoryScanner.scan("/path/to/image_files");
        directoryScanner.scan("/path/to/video_files");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scan("/path/to/text_files"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan("/path/to/text_files") target is: directoryScanner method is: scan(java.lang.String)
statement is: directoryScanner.scan("/path/to/image_files"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan("/path/to/image_files") target is: directoryScanner method is: scan(java.lang.String)
statement is: directoryScanner.scan("/path/to/video_files"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan("/path/to/video_files") target is: directoryScanner method is: scan(java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("\"")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("\"");
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner scanner = new DirectoryScanner();
        scanner.setBasedir("${basedir}");
        scanner.scan();
    }
}
statement is: DirectoryScanner scanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.setBasedir("${basedir}"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.setBasedir("${basedir}") target is: scanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: scanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.scan() target is: scanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "${basedir}";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("&JAd&9SPU2vOs(")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) arg2)
statement is: org.evosuite.testcase.statements.AssignmentStatement@30de78bd type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\Temp\\MyProject");
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("LTSException", "LTS_ErrorLog", ((File) (mockFile)))));
        directoryScanner.basedir = ((File) (createTempFile));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\Temp\\MyProject"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("LTSException", "LTS_ErrorLog", ((File) (mockFile))))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("LTSException", "LTS_ErrorLog", ((File) (mockFile))))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.basedir = ((File) (createTempFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Temp\\MyProject";
MockFile mockFile = new MockFile(string);
String string = "LTSException";
String string = "LTS_ErrorLog";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("**#/CV<Y/**")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("**#/CV2021/**");
        MockFile mockFile = new MockFile("**#/CV2021/**", "**#/CV2021/**");
        MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getNotIncludedDirectories();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("**#/CV2021/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("**#/CV2021/**") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("**#/CV2021/**", "**#/CV2021/**"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "**#/CV2021/**";
directoryScanner.setBasedir(string);
String string = "**#/CV2021/**";
String string = "**#/CV2021/**";
MockFile mockFile = new MockFile(string, string);
String string = "**#/CV2021/**";
String string = "**#/CV2021/**";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("*t/CVS/*")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*t/CVS/*", false)
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "*t/CVS/*", false);
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("src");
        MockFile mockFile = new MockFile("src", "CVS");
        MockFile.createTempFile("src", "CVS", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.addDefaultExcludes();
        directoryScanner.scandir(mockFile, "CVS", false);
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("src"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("src") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("src", "CVS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("src", "CVS", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("src", "CVS", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.scandir(mockFile, "CVS", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "CVS", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "src";
directoryScanner.setBasedir(string);
String string = "src";
String string = "CVS";
MockFile mockFile = new MockFile(string, string);
String string = "src";
String string = "CVS";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
String string = "CVS";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("*t/CVS/*")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*t/CVS/*")
statement is: org.evosuite.testcase.statements.ArrayStatement@83d4f393 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4e07d109 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*t/CVS/*"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*");
String[] stringArray = new String[1];
stringArray[0] = "*t/CVS/*";
directoryScanner.setExcludes(stringArray);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\temp\\CVS");// Changed to a specific directory

        MockFile mockFile = new MockFile("C:\\temp\\CVS");
        String[] stringArray = new String[1];
        stringArray[0] = "C:\\temp\\CVS";// Changed to a specific path

        directoryScanner.setExcludes(stringArray);
        MockFile.createTempFile("C:\\temp\\CVS", "file.txt", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\temp\\CVS")// Changed to a specific directory
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\temp\\CVS")// Changed to a specific directory
 target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("C:\\temp\\CVS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\temp\\CVS"// Changed to a specific path
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\temp\\CVS" Ct is: stringArray[0] = "C:\\temp\\CVS"// Changed to a specific path

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@872f0890
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
statement is: MockFile.createTempFile("C:\\temp\\CVS", "file.txt", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:\\temp\\CVS", "file.txt", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
* this is vulnerable: String string = "C:\\temp\\CVS"
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\temp\\CVS";
directoryScanner.setBasedir(string);
String string = "C:\\temp\\CVS";
MockFile mockFile = new MockFile(string);
String[] stringArray = new String[1];
String string = "C:\\temp\\CVS";
directoryScanner.setExcludes(stringArray);
String string = "C:\\temp\\CVS";
String string = "file.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\User123\\Documents");// replace this with a more appropriate path

        directoryScanner.scan();
        String[] includedFiles = directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\User123\\Documents")// replace this with a more appropriate path
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\User123\\Documents")// replace this with a more appropriate path
 target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: String[] includedFiles = directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\User123\\Documents";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("*t/b%[fS/*")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Test");
        MockFile mockFile = new MockFile("C:\\Test", "C:\\Test");
        MockFile.createTempFile("C:\\Test", "C:\\Test", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Test") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("C:\\Test", "C:\\Test"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("C:\\Test", "C:\\Test", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:\\Test", "C:\\Test", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Test";
directoryScanner.setBasedir(string);
String string = "C:\\Test";
String string = "C:\\Test";
MockFile mockFile = new MockFile(string, string);
String string = "C:\\Test";
String string = "C:\\Test";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/path/to/directory");
        directoryScanner.scan();
        directoryScanner.getNotIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/path/to/directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/path/to/directory") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/directory";
directoryScanner.setBasedir(string);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("~@OM0Fej")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("~@OM0Fej")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile mockFile = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/path/to/directory");
        MockFile mockFile = new MockFile("test_file.txt");
        MockFile.createTempFile("test_file.txt", "~@OM0Fej", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getNotIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/path/to/directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/path/to/directory") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("test_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("test_file.txt", "~@OM0Fej", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("test_file.txt", "~@OM0Fej", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/directory";
directoryScanner.setBasedir(string);
String string = "test_file.txt";
MockFile mockFile = new MockFile(string);
String string = "test_file.txt";
String string = "~@OM0Fej";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("**/%*%")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**/%*%")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**/%*%", "**/%*%", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\John Doe");// basedir is a string representing the path to the root directory of the scan

        MockFile mockFile = new MockFile("C:\\Users\\John Doe\\Documents");// mockFile is a string representing the path to a file within the root directory

        MockFile.createTempFile("C:\\Users\\John Doe\\Documents", "C:\\Users\\John Doe\\Documents\\test.txt", ((File) (mockFile)));// createTempFile() is a method that creates a temporary file with a given name and path

        directoryScanner.scan();// scan() is a method that performs the actual scanning of the root directory

        List<String> excludedFiles = directoryScanner.getExcludedFiles();// getExcludedFiles() is a method that returns a list of files that are excluded from the scan }}

    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe")// basedir is a string representing the path to the root directory of the scan
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe")// basedir is a string representing the path to the root directory of the scan
 target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("C:\\Users\\John Doe\\Documents")// mockFile is a string representing the path to a file within the root directory
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("C:\\Users\\John Doe\\Documents", "C:\\Users\\John Doe\\Documents\\test.txt", ((File) (mockFile)))// createTempFile() is a method that creates a temporary file with a given name and path
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:\\Users\\John Doe\\Documents", "C:\\Users\\John Doe\\Documents\\test.txt", ((File) (mockFile)))// createTempFile() is a method that creates a temporary file with a given name and path
 target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan()// scan() is a method that performs the actual scanning of the root directory
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan()// scan() is a method that performs the actual scanning of the root directory
 target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: List<String> excludedFiles = directoryScanner.getExcludedFiles()// getExcludedFiles() is a method that returns a list of files that are excluded from the scan }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe";
directoryScanner.setBasedir(string);
String string = "C:\\Users\\John Doe\\Documents";
MockFile mockFile = new MockFile(string);
String string = "C:\\Users\\John Doe\\Documents";
String string = "C:\\Users\\John Doe\\Documents\\test.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("**/%*%")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**/%*%")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**/%*%", "**/%*%", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.setBasedir("C:\\Users\\Public");
        MockFile mockFile = new MockFile("C:\\Users\\Public\\Documents");
        MockFile.createTempFile("C:\\Users\\Public\\Documents", "C:\\Users\\Public\\Documents\\example.txt", ((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.setBasedir("C:\\Users\\Public"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\Public") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("C:\\Users\\Public\\Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("C:\\Users\\Public\\Documents", "C:\\Users\\Public\\Documents\\example.txt", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("C:\\Users\\Public\\Documents", "C:\\Users\\Public\\Documents\\example.txt", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String string = "C:\\Users\\Public";
directoryScanner.setBasedir(string);
String string = "C:\\Users\\Public\\Documents";
MockFile mockFile = new MockFile(string);
String string = "C:\\Users\\Public\\Documents";
String string = "C:\\Users\\Public\\Documents\\example.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBaseDir(System.getProperty("user.dir") + "/path/to/directory");
        directoryScanner.scan();
        List<String> includedDirectories = directoryScanner.getIncludedDirectories();
        assertEquals(2, includedDirectories.size());
        assertTrue(includedDirectories.contains("src/main/java"));
        assertTrue(includedDirectories.contains("src/test/java"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBaseDir(System.getProperty("user.dir") + "/path/to/directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBaseDir(System.getProperty("user.dir") + "/path/to/directory") target is: directoryScanner method is: setBaseDir(java.lang.String)
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: List<String> includedDirectories = directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
statement is: assertEquals(2, includedDirectories.size()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, includedDirectories.size()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertTrue(includedDirectories.contains("src/main/java")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(includedDirectories.contains("src/main/java")) target is:  method is: assertTrue(<unknown>)
statement is: assertTrue(includedDirectories.contains("src/test/java")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(includedDirectories.contains("src/test/java")) target is:  method is: assertTrue(<unknown>)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/%*%", false)
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile mockFile = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/%*%", false);
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\");
        MockFile mockFile = new MockFile("test", "file");
        directoryScanner.scan();
        directoryScanner.scandir(mockFile, "**/*.*", false);
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: MockFile mockFile = new MockFile("test", "file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
statement is: directoryScanner.scandir(mockFile, "**/*.*", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "**/*.*", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\";
directoryScanner.setBasedir(string);
String string = "test";
String string = "file";
MockFile mockFile = new MockFile(string, string);
directoryScanner.scan();
String string = "**/*.*";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("hB?")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("hB?");
directoryScanner.setBasedir((File) mockFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("helloWorld");
        directoryScanner.setBasedir(((File) (mockFile)));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("helloWorld"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "helloWorld";
MockFile mockFile = new MockFile(string);
directoryScanner.setBasedir((File) mockFile);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/CVS/**", "/")
test data is: DirectoryScanner.matchPath("/**/CVS/**", "/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/Users/John/Documents/Work/Project1/**/CVS/**", "/");
    }
}
statement is: DirectoryScanner.matchPath("/Users/John/Documents/Work/Project1/**/CVS/**", "/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/Users/John/Documents/Work/Project1/**/CVS/**", "/") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/Users/John/Documents/Work/Project1/**/CVS/**";
String string = "/";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("**/CV/**", "**/CV/**")
test data is: DirectoryScanner.matchPath("**/CV/**", "**/CV/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("**/Resume/**", "**/Resume/**");
    }
}
statement is: DirectoryScanner.matchPath("**/Resume/**", "**/Resume/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("**/Resume/**", "**/Resume/**") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/Resume/**";
String string = "**/Resume/**";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*jt`/CVS*", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
directoryScanner.scandir(createTempFile, "*jt`/CVS*", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("tempFile", "*jt`/CVS*")));
        directoryScanner.scandir(createTempFile, "tempFolder", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("tempFile", "*jt`/CVS*"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("tempFile", "*jt`/CVS*"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: directoryScanner.scandir(createTempFile, "tempFolder", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(createTempFile, "tempFolder", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "tempFile";
String string = "*jt`/CVS*";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
String string = "tempFolder";
boolean _boolean = true;
directoryScanner.scandir(createTempFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@c37a4701 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d5da8c16 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "**/"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("**/")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "**/*.txt";// include all files with the .txt extension

        directoryScanner.setIncludes(stringArray);
        directoryScanner.couldHoldIncluded("**/*.txt");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.txt"// include all files with the .txt extension
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.txt" Ct is: stringArray[0] = "**/*.txt"// include all files with the .txt extension

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.couldHoldIncluded("**/*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("**/*.txt") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "**/*.txt";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);
String string = "**/*.txt";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("/**/.cvsignore")
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("src/test/resources");
        assertEquals(directoryScanner.getBasedir(), "src/test/resources");
        directoryScanner.setBasedir("src/main/resources");
        assertEquals(directoryScanner.getBasedir(), "src/main/resources");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("src/test/resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("src/test/resources") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: assertEquals(directoryScanner.getBasedir(), "src/test/resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(directoryScanner.getBasedir(), "src/test/resources") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: directoryScanner.setBasedir("src/main/resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("src/main/resources") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: assertEquals(directoryScanner.getBasedir(), "src/main/resources"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(directoryScanner.getBasedir(), "src/main/resources") target is:  method is: assertEquals(<unknown>,java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "src/test/resources";
directoryScanner.setBasedir(string);
String string = "src/main/resources";
directoryScanner.setBasedir(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("&JAd&9SPU2vOs(")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "//com.lts.LTSException", (File) arg2)
statement is: org.evosuite.testcase.statements.AssignmentStatement@fa85cb01 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "//com.lts.LTSException", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("/path/to/directory");
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("tempfile.txt", "tempfile.txt", ((File) (mockFile)))));
        directoryScanner.basedir = ((File) (createTempFile));
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("/path/to/directory"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("tempfile.txt", "tempfile.txt", ((File) (mockFile))))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("tempfile.txt", "tempfile.txt", ((File) (mockFile))))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.basedir = ((File) (createTempFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/path/to/directory";
MockFile mockFile = new MockFile(string);
String string = "tempfile.txt";
String string = "tempfile.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("}eC1Ik-(Tov((_57")
statement is: org.evosuite.testcase.statements.AssignmentStatement@65b8fa7b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.io.File
statement code is: directoryScanner.basedir = (File) mockFile
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("}eC1Ik-(Tov((_57");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("/home/user/Documents");
        directoryScanner.basedir = ((File) (mockFile));
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("/home/user/Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.basedir = ((File) (mockFile)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/user/Documents";
MockFile mockFile = new MockFile(string);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("")
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/home/user/projects/java-project");
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/home/user/projects/java-project"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/home/user/projects/java-project") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "/home/user/projects/java-project";
directoryScanner.setBasedir(string);
directoryScanner.getBasedir();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU")
statement is: org.evosuite.testcase.statements.ArrayStatement@c869d5f2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("lHU")
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example_file");
        byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4 };
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("example_dir");
        directoryScanner.getBasedir();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example_file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ 0, 1, 2, 3, 4 } Elements: [0, 1, 2, 3, 4]
lengths: [5] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("example_dir"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("example_dir") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 3
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 3
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "example_dir";
directoryScanner.setBasedir(string);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@b007bcb0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("czW5}[I%;D")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("czW5}[I%;D");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[]{ "czW5}[I%;D", "some other excluded string" };
        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "czW5}[I%;D", "some other excluded string" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[]{ "czW5}[I%;D", "some other excluded string" } Elements: ["czW5}[I%;D", "some other excluded string"]
lengths: [0] []
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@1471be9e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d666f359 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "**/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@4a72f200 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("**/")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("**/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "**/*.java";// changed to include only .java files

        directoryScanner.excludes = stringArray;
        directoryScanner.isExcluded("**/");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.java"// changed to include only .java files
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.java" Ct is: stringArray[0] = "**/*.java"// changed to include only .java files

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.isExcluded("**/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("**/") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "**/*.java";
stringArray[0] = string;
String string = "**/";
directoryScanner.isExcluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@df096765 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@906afaab type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@b3d6fcac type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@e4c37dcb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "hB?"
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[2];
        directoryScanner.includes = stringArray;
        stringArray[0] = "test";
        stringArray[1] = "hB?";
        directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: stringArray[0] = "test", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"test" Ct is: stringArray[0] = "test"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "hB?", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"hB?" Ct is: stringArray[1] = "hB?"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
String string = "test";
stringArray[0] = string;
String string = "hB?";
stringArray[1] = string;
String string = "a4jaH+Xt5=yuD 7%xr,";
directoryScanner.isIncluded(string);

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS")
test data is: DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("**/*.java", "**/.git");
    }
}
statement is: DirectoryScanner.matchPatternStart("**/*.java", "**/.git"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("**/*.java", "**/.git") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/*.java";
String string = "**/.git";
DirectoryScanner.matchPatternStart(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: slowScan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.slowScan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.slowScan();
        // Improved test data
        int numberOfFiles = 10;
        String[] fileNames = new String[]{ "file1.txt", "file2.pdf", "file3.docx", "file4.pptx", "file5.xlsx", "file6.jpg", "file7.png", "file8.gif", "file9.mp4", "file10.mov" };
        directoryScanner.setFileNames(fileNames);
        directoryScanner.slowScan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.slowScan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.slowScan() target is: directoryScanner method is: slowScan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: slowScan()V
statement is: // Improved test data
int numberOfFiles = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] fileNames = new String[]{ "file1.txt", "file2.pdf", "file3.docx", "file4.pptx", "file5.xlsx", "file6.jpg", "file7.png", "file8.gif", "file9.mp4", "file10.mov" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: directoryScanner.setFileNames(fileNames), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setFileNames(fileNames) target is: directoryScanner method is: setFileNames(java.lang.String[])
statement is: directoryScanner.slowScan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.slowScan() target is: directoryScanner method is: slowScan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: slowScan()V
* this is vulnerable: int _int = 10
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();
int _int = 10;
directoryScanner.slowScan();

* test suite isTestSuite: 104
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile mockFile = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) mockFile);
directoryScanner.scan();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
stringArray[0] = "**#/CV<Y/**";
stringArray[1] = "**#/CV<Y/**";
stringArray[2] = "**#/CV<Y/**";
stringArray[3] = "**#/CV<Y/**";
stringArray[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "*t/CVS/*";
stringArray[1] = "*t/CVS/*";
stringArray[2] = "*t/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*~";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("**/*~");
MockFile mockFile = new MockFile("**/*~");
MockFile.createTempFile("**/*~", "**/*~", (File) mockFile);
directoryScanner.scan();
Test 6: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");
Test 7: 
DirectoryScanner.matchPath("*==", "**/.cvsignore");
Test 8: 
DirectoryScanner.matchPath("**/VS/*", "*");
Test 9: 
DirectoryScanner.matchPath("**//**", "**//**");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "hB?";
stringArray[1] = "hB?";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("hB?");
Test 11: 
DirectoryScanner.match("6*", "");
Test 12: 
DirectoryScanner.match("=?->CI*", "=?->CI*");
Test 13: 
DirectoryScanner.match("**", "");
Test 14: 
DirectoryScanner.match("**/*a~", "~");
Test 15: 
DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");
Test 16: 
DirectoryScanner.match("*~", "~");
Test 17: 
DirectoryScanner.match("**/*bS/**", "/");
Test 18: 
DirectoryScanner.match("*t/CVS/**", "U,.N[0#sQk");
Test 19: 
DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");
Test 20: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "*/";
directoryScanner.setExcludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("\"");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "*t/CVS/*", false);
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/*t/CVS/*_/*t/CVS/**t
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*");
String[] stringArray = new String[1];
stringArray[0] = "*t/CVS/*";
directoryScanner.setExcludes(stringArray);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile mockFile = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile mockFile = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/%*%", false);
directoryScanner.getIncludedDirectories();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("hB?");
directoryScanner.setBasedir((File) mockFile);
Test 39: 
DirectoryScanner.matchPath("/**/CVS/**", "/");
Test 40: 
DirectoryScanner.matchPath("**/CV/**", "**/CV/**");
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
try { 
  directoryScanner.scandir(createTempFile, "*jt`/CVS*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /tmp/*jt`/CVS*0*jt`/CVS*
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "//com.lts.LTSException", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("}eC1Ik-(Tov((_57");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.getBasedir();
Test 47: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("czW5}[I%;D");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("**/");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");
Test 51: 
DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
MockFile mockFile = new MockFile("C:UsersJohn Doe");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("temp_file", "txt", (File) mockFile);
directoryScanner.scan();

Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
directoryScanner.setIncludes(stringArray);
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
MockFile mockFile = new MockFile(string, string);
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset");
directoryScanner.scan();

Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "**/*.java";
stringArray[1] = "**/*.class";
stringArray[2] = "**/test-output/**";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir(".");
MockFile mockFile = new MockFile("src/main/java", "src/test/java");
MockFile.createTempFile("src/main/java", "src/test/java", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 57: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("C:/Users/username/Documents");
MockFile mockFile = new MockFile("**/*.txt");
MockFile.createTempFile("**/*.txt", "**/*.txt", (File) mockFile);
directoryScanner.scan();

Test 58: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");

Test 59: 
DirectoryScanner.matchPath("*.txt", "/home/user/Documents");

Test 60: 
DirectoryScanner.matchPath("**/VS/*", "*.java");

Test 61: 
DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/");

Test 62: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "*.txt";
stringArray[1] = "**/*.java";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("testfile1.txt");
directoryScanner.isIncluded("testfile2.java");

Test 63: 
DirectoryScanner.match("61729", "");

Test 64: 
DirectoryScanner.match("equals->capitalLetter*", "hyphen->lowercaseLetter*");

Test 65: 
DirectoryScanner.match("**/*.java", "src/main/java");

Test 66: 
DirectoryScanner.match("**/*a*", "*");

Test 67: 
DirectoryScanner.matchPatternStart("*.txt", "*.xml");
DirectoryScanner.matchPatternStart("CVS/*", "CVS/*");

Test 68: 
DirectoryScanner.match("*txt", "file1.txt");

Test 69: 
DirectoryScanner.match("**/documents/test_data.txt/**", "src/test/resources");

Test 70: 
DirectoryScanner.match("*test/CVS/**", "[a-zA-Z0-9_]*");

Test 71: 
DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*");

Test 72: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 73: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 74: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "example/*";
directoryScanner.setExcludes(stringArray);

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 76: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("${basedir}");
directoryScanner.scan();

Test 77: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:TempMyProject");
MockFile.createTempFile("LTSException", "LTS_ErrorLog", (File) mockFile);
directoryScanner.scan();

Test 78: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV2021/**");
MockFile mockFile = new MockFile("**#/CV2021/**", "**#/CV2021/**");
MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();

Test 79: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src");
MockFile mockFile = new MockFile("src", "CVS");
MockFile.createTempFile("src", "CVS", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "CVS", false);
directoryScanner.getExcludedFiles();

Test 80: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:\tempCVS");
MockFile mockFile = new MockFile("C:\tempCVS");
String[] stringArray = new String[1];
directoryScanner.setExcludes(stringArray);
String string = "C:\\temp\\CVS";
String string = "file.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 81: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersUser123Documents");
directoryScanner.scan();
directoryScanner.getIncludedFiles();

Test 82: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:Test");
MockFile mockFile = new MockFile("C:Test", "C:Test");
MockFile.createTempFile("C:Test", "C:Test", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/path/to/directory");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/path/to/directory");
MockFile mockFile = new MockFile("test_file.txt");
MockFile.createTempFile("test_file.txt", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
MockFile mockFile = new MockFile("C:UsersJohn DoeDocuments");
MockFile.createTempFile("C:UsersJohn DoeDocuments", "C:UsersJohn DoeDocuments\test.txt", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 86: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("C:UsersPublic");
MockFile mockFile = new MockFile("C:UsersPublicDocuments");
MockFile.createTempFile("C:UsersPublicDocuments", "C:UsersPublicDocumentsexample.txt", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:");
MockFile mockFile = new MockFile("test", "file");
directoryScanner.scan();
String string = "**/*.*";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedDirectories();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("helloWorld");
directoryScanner.setBasedir((File) mockFile);

Test 90: 
DirectoryScanner.matchPath("/Users/John/Documents/Work/Project1/**/CVS/**", "/");

Test 91: 
DirectoryScanner.matchPath("**/Resume/**", "**/Resume/**");

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("tempFile", "*jt`/CVS*");
directoryScanner.scandir(createTempFile, "tempFolder", true);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/*.txt");

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src/test/resources");
directoryScanner.setBasedir("src/main/resources");

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/path/to/directory");
MockFile.createTempFile("tempfile.txt", "tempfile.txt", (File) mockFile);
directoryScanner.getBasedir();

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/home/user/Documents");
directoryScanner.getBasedir();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/user/projects/java-project");
directoryScanner.getBasedir();

Test 98: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("example_dir");
directoryScanner.getBasedir();

Test 99: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.java";
directoryScanner.isExcluded("**/");

Test 101: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "test";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");

Test 102: 
DirectoryScanner.matchPatternStart("**/*.java", "**/.git");

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();
directoryScanner.slowScan();


* Generated after the refinement and before minimization 104 tests with total length 417
* test suite isTestSuite: 104
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile mockFile = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) mockFile);
directoryScanner.scan();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
stringArray[0] = "**#/CV<Y/**";
stringArray[1] = "**#/CV<Y/**";
stringArray[2] = "**#/CV<Y/**";
stringArray[3] = "**#/CV<Y/**";
stringArray[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "*t/CVS/*";
stringArray[1] = "*t/CVS/*";
stringArray[2] = "*t/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*~";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("**/*~");
MockFile mockFile = new MockFile("**/*~");
MockFile.createTempFile("**/*~", "**/*~", (File) mockFile);
directoryScanner.scan();
Test 6: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");
Test 7: 
DirectoryScanner.matchPath("*==", "**/.cvsignore");
Test 8: 
DirectoryScanner.matchPath("**/VS/*", "*");
Test 9: 
DirectoryScanner.matchPath("**//**", "**//**");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "hB?";
stringArray[1] = "hB?";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("hB?");
Test 11: 
DirectoryScanner.match("6*", "");
Test 12: 
DirectoryScanner.match("=?->CI*", "=?->CI*");
Test 13: 
DirectoryScanner.match("**", "");
Test 14: 
DirectoryScanner.match("**/*a~", "~");
Test 15: 
DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");
Test 16: 
DirectoryScanner.match("*~", "~");
Test 17: 
DirectoryScanner.match("**/*bS/**", "/");
Test 18: 
DirectoryScanner.match("*t/CVS/**", "U,.N[0#sQk");
Test 19: 
DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");
Test 20: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "*/";
directoryScanner.setExcludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("\"");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "*t/CVS/*", false);
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/*t/CVS/*_/*t/CVS/**t
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*");
String[] stringArray = new String[1];
stringArray[0] = "*t/CVS/*";
directoryScanner.setExcludes(stringArray);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile mockFile = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile mockFile = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/%*%", false);
directoryScanner.getIncludedDirectories();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("hB?");
directoryScanner.setBasedir((File) mockFile);
Test 39: 
DirectoryScanner.matchPath("/**/CVS/**", "/");
Test 40: 
DirectoryScanner.matchPath("**/CV/**", "**/CV/**");
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
try { 
  directoryScanner.scandir(createTempFile, "*jt`/CVS*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /tmp/*jt`/CVS*0*jt`/CVS*
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "//com.lts.LTSException", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("}eC1Ik-(Tov((_57");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.getBasedir();
Test 47: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("czW5}[I%;D");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("**/");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");
Test 51: 
DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
MockFile mockFile = new MockFile("C:UsersJohn Doe");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("temp_file", "txt", (File) mockFile);
directoryScanner.scan();

Test 54: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
directoryScanner.setIncludes(stringArray);
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
MockFile mockFile = new MockFile(string, string);
String string = "**#/CV<Y/**";
String string = "**#/CV<Y/**";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();

Test 55: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset");
directoryScanner.scan();

Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "**/*.java";
stringArray[1] = "**/*.class";
stringArray[2] = "**/test-output/**";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir(".");
MockFile mockFile = new MockFile("src/main/java", "src/test/java");
MockFile.createTempFile("src/main/java", "src/test/java", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 57: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("C:/Users/username/Documents");
MockFile mockFile = new MockFile("**/*.txt");
MockFile.createTempFile("**/*.txt", "**/*.txt", (File) mockFile);
directoryScanner.scan();

Test 58: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");

Test 59: 
DirectoryScanner.matchPath("*.txt", "/home/user/Documents");

Test 60: 
DirectoryScanner.matchPath("**/VS/*", "*.java");

Test 61: 
DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/");

Test 62: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "*.txt";
stringArray[1] = "**/*.java";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("testfile1.txt");
directoryScanner.isIncluded("testfile2.java");

Test 63: 
DirectoryScanner.match("61729", "");

Test 64: 
DirectoryScanner.match("equals->capitalLetter*", "hyphen->lowercaseLetter*");

Test 65: 
DirectoryScanner.match("**/*.java", "src/main/java");

Test 66: 
DirectoryScanner.match("**/*a*", "*");

Test 67: 
DirectoryScanner.matchPatternStart("*.txt", "*.xml");
DirectoryScanner.matchPatternStart("CVS/*", "CVS/*");

Test 68: 
DirectoryScanner.match("*txt", "file1.txt");

Test 69: 
DirectoryScanner.match("**/documents/test_data.txt/**", "src/test/resources");

Test 70: 
DirectoryScanner.match("*test/CVS/**", "[a-zA-Z0-9_]*");

Test 71: 
DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*");

Test 72: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 73: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 74: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "example/*";
directoryScanner.setExcludes(stringArray);

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 76: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("${basedir}");
directoryScanner.scan();

Test 77: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:TempMyProject");
MockFile.createTempFile("LTSException", "LTS_ErrorLog", (File) mockFile);
directoryScanner.scan();

Test 78: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV2021/**");
MockFile mockFile = new MockFile("**#/CV2021/**", "**#/CV2021/**");
MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();

Test 79: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src");
MockFile mockFile = new MockFile("src", "CVS");
MockFile.createTempFile("src", "CVS", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "CVS", false);
directoryScanner.getExcludedFiles();

Test 80: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:\tempCVS");
MockFile mockFile = new MockFile("C:\tempCVS");
String[] stringArray = new String[1];
directoryScanner.setExcludes(stringArray);
String string = "C:\\temp\\CVS";
String string = "file.txt";
MockFile.createTempFile(string, string, (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

Test 81: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersUser123Documents");
directoryScanner.scan();
directoryScanner.getIncludedFiles();

Test 82: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:Test");
MockFile mockFile = new MockFile("C:Test", "C:Test");
MockFile.createTempFile("C:Test", "C:Test", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/path/to/directory");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/path/to/directory");
MockFile mockFile = new MockFile("test_file.txt");
MockFile.createTempFile("test_file.txt", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

Test 85: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
MockFile mockFile = new MockFile("C:UsersJohn DoeDocuments");
MockFile.createTempFile("C:UsersJohn DoeDocuments", "C:UsersJohn DoeDocuments\test.txt", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 86: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("C:UsersPublic");
MockFile mockFile = new MockFile("C:UsersPublicDocuments");
MockFile.createTempFile("C:UsersPublicDocuments", "C:UsersPublicDocumentsexample.txt", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();

Test 87: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();
directoryScanner.getIncludedDirectories();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:");
MockFile mockFile = new MockFile("test", "file");
directoryScanner.scan();
String string = "**/*.*";
boolean _boolean = false;
directoryScanner.scandir(mockFile, string, _boolean);
directoryScanner.getIncludedDirectories();

Test 89: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("helloWorld");
directoryScanner.setBasedir((File) mockFile);

Test 90: 
DirectoryScanner.matchPath("/Users/John/Documents/Work/Project1/**/CVS/**", "/");

Test 91: 
DirectoryScanner.matchPath("**/Resume/**", "**/Resume/**");

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("tempFile", "*jt`/CVS*");
directoryScanner.scandir(createTempFile, "tempFolder", true);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/*.txt");

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src/test/resources");
directoryScanner.setBasedir("src/main/resources");

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/path/to/directory");
MockFile.createTempFile("tempfile.txt", "tempfile.txt", (File) mockFile);
directoryScanner.getBasedir();

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("/home/user/Documents");
directoryScanner.getBasedir();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/user/projects/java-project");
directoryScanner.getBasedir();

Test 98: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("example_dir");
directoryScanner.getBasedir();

Test 99: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.java";
directoryScanner.isExcluded("**/");

Test 101: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "test";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");

Test 102: 
DirectoryScanner.matchPatternStart("**/*.java", "**/.git");

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();
directoryScanner.slowScan();


* Minimizing test suite
* test suite isTestSuite: 51
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*.txt";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/*.txt");
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:Test");
MockFile mockFile = new MockFile("C:Test", "C:Test");
MockFile.createTempFile("C:Test", "C:Test", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "*t/CVS/*";
stringArray[1] = "*t/CVS/*";
stringArray[2] = "*t/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV2021/**");
MockFile mockFile = new MockFile("**#/CV2021/**", "**#/CV2021/**");
MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();
Test 6: 
DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*");
Test 7: 
DirectoryScanner.matchPath("/**/CVS/**", "/");
Test 8: 
DirectoryScanner.matchPath("**/VS/*", "*.java");
Test 9: 
DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile mockFile = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) mockFile);
directoryScanner.scan();
Test 11: 
DirectoryScanner.matchPath("**//**", "**//**");
Test 12: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 13: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "hB?";
stringArray[1] = "hB?";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("hB?");
Test 14: 
DirectoryScanner.matchPath("**/CV/**", "**/CV/**");
Test 15: 
DirectoryScanner.match("6*", "");
Test 16: 
DirectoryScanner.match("=?->CI*", "=?->CI*");
Test 17: 
DirectoryScanner.match("**", "");
Test 18: 
DirectoryScanner.match("**/*a~", "~");
Test 19: 
DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");
Test 20: 
DirectoryScanner.match("*~", "~");
Test 21: 
DirectoryScanner.match("**/*a*", "*");
Test 22: 
DirectoryScanner.match("**/*bS/**", "/");
Test 23: 
DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.setIncludes(stringArray);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "*/";
directoryScanner.setExcludes(stringArray);
Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "*t/CVS/*", false);
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/*t/CVS/*_/*t/CVS/**t
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src");
MockFile mockFile = new MockFile("src", "CVS");
MockFile.createTempFile("src", "CVS", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile mockFile = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/%*%", false);
directoryScanner.getIncludedDirectories();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile mockFile = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
stringArray[0] = "**#/CV<Y/**";
stringArray[1] = "**#/CV<Y/**";
stringArray[2] = "**#/CV<Y/**";
stringArray[3] = "**#/CV<Y/**";
stringArray[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*");
String[] stringArray = new String[1];
stringArray[0] = "*t/CVS/*";
directoryScanner.setExcludes(stringArray);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("helloWorld");
directoryScanner.setBasedir((File) mockFile);
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
try { 
  directoryScanner.scandir(createTempFile, "*jt`/CVS*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /tmp/*jt`/CVS*0*jt`/CVS*
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.getBasedir();
Test 45: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("czW5}[I%;D");
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("**/");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");
Test 49: 
DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 226
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 307
* Number of covered goals: 306
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 77%
* Total number of goals: 62
* Number of covered goals: 48
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 226
* Generated 51 tests with total length 201
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File basedir = directoryScanner.getBasedir();
assertNull(basedir);


** It was a parseable test case! 
refined test name is: testGetBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "**/*.txt";
directoryScanner.setIncludes(arg0);
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("**/*.txt");
assertTrue(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncludedWithMatchingPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:Test");
MockFile arg2 = new MockFile("C:Test", "C:Test");
MockFile.createTempFile("C:Test", "C:Test", (File) arg2);
directoryScanner.scan();
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(0, includedFiles.length);


** It was a parseable test case! 
refined test name is: testScanDirectoryForNoMatchingFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[3];
arg0[0] = "*t/CVS/*";
arg0[1] = "*t/CVS/*";
arg0[2] = "*t/CVS/*";
directoryScanner.setIncludes(arg0);
directoryScanner.setBasedir("*t/CVS/*");
MockFile arg2 = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) arg2);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertNotSame(excludedDirectories, arg0);


** It was a parseable test case! 
refined test name is: testScanWithIncludesAndBaseDir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[9];
arg0[0] = "U`'Tzyv QUN7-jn~Pq#";
arg0[1] = "13e3Md5q1MvJ(";
arg0[2] = "3*\rU[z*}|,=(/2m";
arg0[3] = "nr";
arg0[4] = "*$\"J[cr(t";
arg0[5] = "_q*L/l";
arg0[6] = "";
arg0[7] = "";
arg0[8] = " *9I$@(";
directoryScanner.setIncludes(arg0);
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("n");
assertFalse(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncludedReturnsFalseForInvalidString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV2021/**");
MockFile arg2 = new MockFile("**#/CV2021/**", "**#/CV2021/**");
MockFile.createTempFile("**#/CV2021/**", "**#/CV2021/**", (File) arg2);
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(0, notIncludedDirectories.length);

String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(0, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanCV2021DirectoryWithExcludedFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("dataSetB01?Gc*", "dataSetB02?Gc*");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testNonMatchingPatternsDoNotMatch
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**/CVS/**", "/");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathReturnsFalseWhenPathEndsInSlash
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/VS/*", "*.java");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathReturnsFalseWhenPatternDoesNotMatch
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/*.txt", "**/src/main/java/com/example/myapp/");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathDoesNotMatchFileWithGivenFilename
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile arg2 = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) arg2);
directoryScanner.scan();

** It was a parseable test case! 
refined test name is: testScanWithDefaultExcludes
* Compiling Tests
refined test name is: testScanDirectoryWithDefaultExclusions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**//**", "**//**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathForTwoAsteriskPatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile arg2 = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) arg2);
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testDefaultExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[2];
arg0[0] = "hB?";
arg0[1] = "hB?";
directoryScanner.setIncludes(arg0);
boolean included = directoryScanner.isIncluded("hB?");
assertTrue(included);


** It was a parseable test case! 
refined test name is: testIsIncludedPatternMatchesReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("**/CV/**", "**/CV/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathmatchesPathsWithCV
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("6*", "");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchEmptyStringWithWildcardPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("=?->CI*", "=?->CI*");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchWithEqualQuestionMarkAndCIStarSyntax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**", "");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchWithEmptyPatternReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/*a~", "~");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchWithTildeCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartWildcardAtStartOfString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("*~", "~");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchingPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/*a*", "*");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testGlobPatternMatchesAllFilesWithAnAInTheirName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/*bS/**", "/");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchWithInvalidPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithWildcards
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
refined test name is: testScanDirectoryshouldReturnNonEmptyListOfFiles
* Compiling Tests
refined test name is: testDirectoryScannerCanScanForAllFilesInADirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "**/";
directoryScanner.setIncludes(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testSetIncludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
refined test name is: testDirectoryScannerSetExcludesWithNullArgument
* Compiling Tests
refined test name is: testSetExcludesNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[1];
arg0[0] = "*/";
directoryScanner.setExcludes(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testIncludesLengthIsOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testIllegalBaseDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanThrowsExceptionWhenBasedirDoesNotExist
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg2 = new MockFile("&JAd&9SPU2vOs(");
File createTempFile = MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) arg2);
directoryScanner.basedir = createTempFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanNonExistentDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile arg0 = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) arg0);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(arg0, "*t/CVS/*", false);
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
refined test name is: testDirectoryScannerWithBaseDir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("src");
MockFile arg2 = new MockFile("src", "CVS");
MockFile.createTempFile("src", "CVS", (File) arg2);
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testDirectoryScannerWithoutExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile arg0 = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(arg0, "**/%*%", false);
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(7, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanWithWildcardIncludedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile arg2 = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) arg2);
directoryScanner.scan();
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(1, includedFiles.length);


** It was a parseable test case! 
refined test name is: testScanMethodWithBasedirAndFilter
* Compiling Tests
refined test name is: testScanWithBasedirMatchingFilter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(0, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanDirectoryForAllFiles
* Compiling Tests
refined test name is: testScanDirectoryForNotIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile arg2 = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) arg2);
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(1, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanDirectoryForInclusionOfTempFile
* Compiling Tests
refined test name is: testScanWithMockFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertEquals(0, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testScanWithEmptyBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] arg0 = new String[5];
arg0[0] = "**#/CV<Y/**";
arg0[1] = "**#/CV<Y/**";
arg0[2] = "**#/CV<Y/**";
arg0[3] = "**#/CV<Y/**";
arg0[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(arg0);
MockFile arg2 = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) arg2);
directoryScanner.scan();
String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories();
assertEquals(1, notIncludedDirectories.length);


** It was a parseable test case! 
refined test name is: testNotIncludedDirectories
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile arg2 = new MockFile("*t/CVS/*");
String[] arg0 = new String[1];
arg0[0] = "*t/CVS/*";
directoryScanner.setExcludes(arg0);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) arg2);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(1, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testExcludedDirectoriesAreCorrectlyApplied
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
refined test name is: testScanWithExclusions
* Compiling Tests
refined test name is: testScanMethodReturnsCorrectFilesListWithExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("helloWorld");
directoryScanner.setBasedir((File) arg0);
assertEquals(0L, arg0.length());


** It was a parseable test case! 
refined test name is: testDirectoryScannerSetsBaseDir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File arg0 = MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
try { 
  directoryScanner.scandir(arg0, "*jt`/CVS*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /tmp/*jt`/CVS*0*jt`/CVS*
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScandirWithInvalidPatternThrowsIOException
* Compiling Tests
refined test name is: testScanDirThrowsExceptionWhenFileIsNotADirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
File basedir = directoryScanner.getBasedir();
assertEquals(".cvsignore", basedir.getName());


** It was a parseable test case! 
refined test name is: testBasedirNameShouldBeDotCvsIgnore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
File basedir = directoryScanner.getBasedir();
assertEquals(0L, basedir.length());


** It was a parseable test case! 
refined test name is: testGetBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("lHU");
byte[] arg1 = new byte[5];
FileSystemHandling.appendDataToFile(arg0, arg1);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
File basedir = directoryScanner.getBasedir();
assertEquals(0L, basedir.getFreeSpace());


** It was a parseable test case! 
refined test name is: testAppendDataToFileWithValidArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[0];
directoryScanner.setExcludes(arg0);
boolean excluded = directoryScanner.isExcluded("czW5}[I%;D");
assertFalse(excluded);


** It was a parseable test case! 
refined test name is: testIsExcludedReturnsFalseForNonExcludedFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
boolean excluded = directoryScanner.isExcluded("**/");
assertTrue(excluded);


** It was a parseable test case! 
refined test name is: testIsExcluded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
boolean included = directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");
assertFalse(included);


** It was a parseable test case! 
refined test name is: testIsIncludedWithNoMatchingPatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartReturnsFalseForInvalidPattern
* Compiling Tests
refined test name is: testMatchPatternStartForInvalidPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSlowScanthrowsNullPointerException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:39.723 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:39.745 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:39.794 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:39.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:39.851 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:39.852 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:39.926 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:39.927 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:39.979 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:39.981 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.029 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.030 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.085 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.086 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.123 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.124 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.161 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.163 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.214 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.215 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:40.267 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.268 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.366 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.476 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.540 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.541 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.608 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.665 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.728 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.729 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.857 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.858 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:40.936 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:40.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.013 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.014 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.078 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:41.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.133 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.195 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.196 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:41.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.291 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.336 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.337 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.381 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.382 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.438 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.439 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.511 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.511 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.570 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
[MASTER] 10:58:41.631 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:41.692 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.693 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:41.740 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:58:41.784 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.785 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
* Compiling Tests
[MASTER] 10:58:41.825 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:41.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:41.963 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:42.019 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.020 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:42.075 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:58:42.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:42.213 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.214 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:42.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:58:42.311 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
* Compiling Tests
[MASTER] 10:58:42.361 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:42.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:58:42.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:58:42.513 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.514 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
* Compiling Tests
[MASTER] 10:58:42.572 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:42.573 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 10 called: 0 to improve: false
** Write a test suite: 24 called: 1 to improve: false
** Write a test suite: 26 called: 2 to improve: false
** Write a test suite: 34 called: 3 to improve: false
** Write a test suite: 35 called: 4 to improve: false
** Write a test suite: 36 called: 5 to improve: false
** Write a test suite: 40 called: 6 to improve: false
** Write a test suite: 42 called: 7 to improve: false
** Write a test suite: 49 called: 8 to improve: false
[MASTER] 10:58:44.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:44.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
** Write a test suite: 10 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
** Write a test suite: 16 called: 5 to improve: false
** Write a test suite: 24 called: 6 to improve: false
** Write a test suite: 26 called: 7 to improve: false
** Write a test suite: 40 called: 8 to improve: false
[MASTER] 10:58:45.880 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:58:45.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
[MASTER] 10:58:47.621 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 53
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile mockFile = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) mockFile);
directoryScanner.scan();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
stringArray[0] = "**#/CV<Y/**";
stringArray[1] = "**#/CV<Y/**";
stringArray[2] = "**#/CV<Y/**";
stringArray[3] = "**#/CV<Y/**";
stringArray[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "*t/CVS/*";
stringArray[1] = "*t/CVS/*";
stringArray[2] = "*t/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/*~";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("**/*~");
MockFile mockFile = new MockFile("**/*~");
MockFile.createTempFile("**/*~", "**/*~", (File) mockFile);
directoryScanner.scan();
Test 6: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");
Test 7: 
DirectoryScanner.matchPath("*==", "**/.cvsignore");
Test 8: 
DirectoryScanner.matchPath("**/VS/*", "*");
Test 9: 
DirectoryScanner.matchPath("**//**", "**//**");
Test 10: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "hB?";
stringArray[1] = "hB?";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("hB?");
Test 11: 
DirectoryScanner.match("6*", "");
Test 12: 
DirectoryScanner.match("=?->CI*", "=?->CI*");
Test 13: 
DirectoryScanner.match("**", "");
Test 14: 
DirectoryScanner.match("**/*a~", "~");
Test 15: 
DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");
Test 16: 
DirectoryScanner.match("*~", "~");
Test 17: 
DirectoryScanner.match("**/*bS/**", "/");
Test 18: 
DirectoryScanner.match("*t/CVS/**", "U,.N[0#sQk");
Test 19: 
DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");
Test 20: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "*/";
directoryScanner.setExcludes(stringArray);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("\"");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "*t/CVS/*", false);
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/*t/CVS/*_/*t/CVS/**t
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*");
String[] stringArray = new String[1];
stringArray[0] = "*t/CVS/*";
directoryScanner.setExcludes(stringArray);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile mockFile = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile mockFile = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/%*%", false);
directoryScanner.getIncludedDirectories();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("hB?");
directoryScanner.setBasedir((File) mockFile);
Test 39: 
DirectoryScanner.matchPath("/**/CVS/**", "/");
Test 40: 
DirectoryScanner.matchPath("**/CV/**", "**/CV/**");
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
try { 
  directoryScanner.scandir(createTempFile, "*jt`/CVS*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /tmp/*jt`/CVS*0*jt`/CVS*
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "//com.lts.LTSException", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("}eC1Ik-(Tov((_57");
directoryScanner.basedir = (File) mockFile;
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.getBasedir();
Test 47: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("czW5}[I%;D");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("**/");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");
Test 51: 
DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");
Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
[MASTER] 10:58:56.222 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 50
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
MockFile mockFile = new MockFile("", "");
directoryScanner.scan();
directoryScanner.scandir(mockFile, "**/%*%", false);
directoryScanner.getIncludedDirectories();
Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("**A/#*#", "**/CVS");
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/home/roham/Results-Utestgen/dataset/SF110-new-res");
directoryScanner.scan();
Test 4: 
DirectoryScanner.matchPatternStart("*?/CVS/*", "*?/CVS/*");
Test 5: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "*t/CVS/*";
stringArray[1] = "*t/CVS/*";
stringArray[2] = "*t/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 6: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("**/");
Test 7: 
DirectoryScanner.matchPath("**//**", "**//**");
Test 8: 
DirectoryScanner.matchPath("*==", "**/.cvsignore");
Test 9: 
DirectoryScanner.matchPath("/**/CVS/**", "/");
Test 10: 
DirectoryScanner.matchPath("**/VS/*", "*");
Test 11: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 12: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*u*~");
MockFile mockFile = new MockFile("*u*~");
directoryScanner.addDefaultExcludes();
MockFile.createTempFile("*u*~", "*u*~", (File) mockFile);
directoryScanner.scan();
Test 13: 
DirectoryScanner.matchPath("**/CV/**", "**/CV/**");
Test 14: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "hB?";
stringArray[1] = "hB?";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("hB?");
Test 15: 
DirectoryScanner.match("6*", "");
Test 16: 
DirectoryScanner.match("=?->CI*", "=?->CI*");
Test 17: 
DirectoryScanner.match("**", "");
Test 18: 
DirectoryScanner.match("**/*a~", "~");
Test 19: 
DirectoryScanner.match("*~", "~");
Test 20: 
DirectoryScanner.match("**/*bS/**", "/");
Test 21: 
DirectoryScanner.match("*t/CVS/**", "U,.N[0#sQk");
Test 22: 
DirectoryScanner.matchPath("dataseB0*?Gc*", "dataseB0*?Gc*");
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[0];
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("czW5}[I%;D");
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "*/";
directoryScanner.setExcludes(stringArray);
Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("\"");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("&JAd&9SPU2vOs(");
MockFile createTempFile = (MockFile)MockFile.createTempFile("//com.lts.LTSException", "<A'n[", (File) mockFile);
directoryScanner.basedir = (File) createTempFile;
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 30: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
directoryScanner.getExcludedDirectories();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*", "*t/CVS/*");
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.addDefaultExcludes();
directoryScanner.scandir(mockFile, "*t/CVS/*", false);
try { 
  directoryScanner.getExcludedFiles();
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/*t/CVS/*_/*t/CVS/**t
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/b%[fS/*");
MockFile mockFile = new MockFile("*t/b%[fS/*", "*t/b%[fS/*");
MockFile.createTempFile("*t/b%[fS/*", "*t/b%[fS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("~@OM0Fej");
MockFile mockFile = new MockFile("~@OM0Fej");
MockFile.createTempFile("~@OM0Fej", "~@OM0Fej", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**/%*%");
MockFile mockFile = new MockFile("**/%*%");
MockFile.createTempFile("**/%*%", "**/%*%", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.scan();
directoryScanner.getIncludedDirectories();
Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("**#/CV<Y/**");
String[] stringArray = new String[5];
stringArray[0] = "**#/CV<Y/**";
stringArray[1] = "**#/CV<Y/**";
stringArray[2] = "**#/CV<Y/**";
stringArray[3] = "**#/CV<Y/**";
stringArray[4] = "**#/CV<Y/**";
directoryScanner.setIncludes(stringArray);
MockFile mockFile = new MockFile("**#/CV<Y/**", "**#/CV<Y/**");
MockFile.createTempFile("**#/CV<Y/**", "**#/CV<Y/**", (File) mockFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("*t/CVS/*");
MockFile mockFile = new MockFile("*t/CVS/*");
String[] stringArray = new String[1];
stringArray[0] = "*t/CVS/*";
directoryScanner.setExcludes(stringArray);
MockFile.createTempFile("*t/CVS/*", "*t/CVS/*", (File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.addDefaultExcludes();
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("hB?");
directoryScanner.setBasedir((File) mockFile);
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("*jt`/CVS*", "*jt`/CVS*");
try { 
  directoryScanner.scandir(createTempFile, "*jt`/CVS*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /tmp/*jt`/CVS*0*jt`/CVS*
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "U`'Tzyv QUN7-jn~Pq#";
stringArray[1] = "13e3Md5q1MvJ(";
stringArray[2] = "3*\rU[z*}|,=(/2m";
stringArray[3] = "nr";
stringArray[4] = "*$\"J[cr(t";
stringArray[5] = "_q*L/l";
stringArray[6] = "";
stringArray[7] = "";
stringArray[8] = " *9I$@(";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("n");
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("/**/.cvsignore");
directoryScanner.getBasedir();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("");
directoryScanner.getBasedir();
Test 47: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("lHU");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("lHU");
directoryScanner.getBasedir();
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "**/";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("**/");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
directoryScanner.includes = stringArray;
stringArray[0] = "";
stringArray[1] = "hB?";
directoryScanner.isIncluded("a4jaH+Xt5=yuD 7%xr,");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 226
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 307
* Number of covered goals: 306
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 77%
* Total number of goals: 62
* Number of covered goals: 48
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 226
* Generated 50 tests with total length 197
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:58:56.421 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 54%
[MASTER] 10:59:04.761 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:06.841 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:06.842 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:06.872 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:06.873 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:06.919 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:06.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:06.954 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:06.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:06.998 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:06.999 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.073 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.074 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.115 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.116 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.161 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.217 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.308 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.309 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.358 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.359 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:59:07.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
[MASTER] 10:59:07.445 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.477 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
[MASTER] 10:59:07.511 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.578 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.580 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.614 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.650 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.684 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.685 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.724 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.726 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.761 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.762 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.797 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.832 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.833 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.869 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.917 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:07.959 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:07.960 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.009 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.010 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.067 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.068 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.123 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.178 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.270 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.321 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.322 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.380 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.381 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.432 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.433 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.477 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.518 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.554 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.612 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.613 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.659 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.660 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.697 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.698 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.735 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.777 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.778 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.818 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.819 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.868 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.920 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:08.967 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:08.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:09.008 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:09.009 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:59:09.066 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:09.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
[MASTER] 10:59:10.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:10.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
[MASTER] 10:59:11.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1106314263122977.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:59:11.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1106314263122977.jar
* Writing tests to file
[MASTER] 10:59:11.744 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'DirectoryScanner_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
** Write a test suite: 10 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
** Write a test suite: 16 called: 5 to improve: false
** Write a test suite: 24 called: 6 to improve: false
** Write a test suite: 26 called: 7 to improve: false
** Write a test suite: 40 called: 8 to improve: false
* Writing JUnit test case 'DirectoryScanner_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
* Done!

* Computation finished
