* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.lts.io.DirectoryScanner
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 3249
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:15:15.046 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:15:15.064 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:15:15.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:15:15.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.lts.io.DirectoryScanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 855
* Using seed 1710321312247
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 170 / 855
[Progress:>                             0%] [Cov:===========>                       33%][Progress:>                             0%] [Cov:===========>                       34%][Progress:>                             0%] [Cov:============>                      36%][Progress:>                             1%] [Cov:============>                      36%][Progress:>                             1%] [Cov:=============>                     38%][Progress:>                             1%] [Cov:==============>                    40%][Progress:>                             1%] [Cov:==============>                    41%][Progress:>                             1%] [Cov:===============>                   44%][Progress:>                             1%] [Cov:===============>                   44%][Progress:>                             1%] [Cov:================>                  47%][Progress:>                             1%] [Cov:================>                  47%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:====================>              58%][Progress:>                             3%] [Cov:====================>              58%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:======================>            65%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           66%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:========================>          70%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         73%][Progress:=>                            5%] [Cov:=========================>         73%][Progress:=>                            5%] [Cov:=========================>         73%][Progress:=>                            5%] [Cov:=========================>         73%][Progress:=>                            6%] [Cov:=========================>         73%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][MASTER] 09:15:49.288 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:====>                         16%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      82%][Progress:======>                       22%] [Cov:============================>      82%][Progress:======>                       22%] [Cov:=============================>     84%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   89%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     28%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:========>                     29%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    30%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    31%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    32%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:=========>                    33%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   34%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   35%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:==========>                   36%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  37%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 40%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 41%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:============>                 43%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                44%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:==============>               49%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             54%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            57%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     80%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:=========================>    86%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%]
* Search finished after 201s and 2277 generations, 612644 statements, best individual has fitness: 31.0
* Generated before the refinement 52 tests with total length 265
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File basedir = directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("/path/to/base/directory");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("/path/to/base/directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("/path/to/base/directory") target is: directoryScanner method is: setBasedir(java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@d6ec236f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2d5d1077 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ";**?`k/CV;YS/1*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@6bb8cf2d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ";**?`k/CV;YS/1*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@6d4e0d6a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("example_input1", "example_input2");
        MockFile.createTempFile("example_input1", "example_input2", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[2];
        stringArray[0] = "example_input1";
        stringArray[1] = "example_input2";
        directoryScanner.includes = stringArray;
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
    }
}
statement is: MockFile mockFile = new MockFile("example_input1", "example_input2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("example_input1", "example_input2", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("example_input1", "example_input2", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "example_input1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example_input1" Ct is: stringArray[0] = "example_input1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9c10319c
statement is: stringArray[1] = "example_input2", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example_input2" Ct is: stringArray[1] = "example_input2"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@32e57897
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scan()V
* this is vulnerable: String string = "example_input1"
* this is vulnerable: String string = "example_input2"
TestCase is: String string = "example_input1";
String string = "example_input2";
MockFile mockFile = new MockFile(string, string);
String string = "example_input1";
String string = "example_input2";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
String string = "example_input1";
String string = "example_input2";
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@2b98abd1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@da9a3421 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "**/#*#"
statement is: org.evosuite.testcase.statements.AssignmentStatement@db2f1523 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@54dd2219 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@61529e2a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@47362669 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "**/#*#";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[4];
        stringArray[0] = "**/#*#";
        stringArray[1] = "/tmp/project1/CVS/Root/*/CVS/Entries";
        stringArray[2] = "/tmp/project2/CVS/Root/*/CVS/Entries";
        stringArray[3] = "/tmp/project3/CVS/Root/*/CVS/Entries";
        directoryScanner.includes = stringArray;
        directoryScanner.setBasedir(((File) (createTempFile)));
        MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile)));
        directoryScanner.scan();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("/*/CVS/*", "/*/CVS/*"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("/*/CVS/*", "/*/CVS/*"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/#*#", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/#*#" Ct is: stringArray[0] = "**/#*#"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6313b2fb
statement is: stringArray[1] = "/tmp/project1/CVS/Root/*/CVS/Entries", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/project1/CVS/Root/*/CVS/Entries" Ct is: stringArray[1] = "/tmp/project1/CVS/Root/*/CVS/Entries"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@2a23e108
statement is: stringArray[2] = "/tmp/project2/CVS/Root/*/CVS/Entries", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/project2/CVS/Root/*/CVS/Entries" Ct is: stringArray[2] = "/tmp/project2/CVS/Root/*/CVS/Entries"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f30a8edd
statement is: stringArray[3] = "/tmp/project3/CVS/Root/*/CVS/Entries", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/project3/CVS/Root/*/CVS/Entries" Ct is: stringArray[3] = "/tmp/project3/CVS/Root/*/CVS/Entries"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b675b07a
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
* this is vulnerable: String string = "**/#*#"
* this is vulnerable: String string = "/tmp/project1/CVS/Root/*/CVS/Entries"
* this is vulnerable: String string = "/tmp/project2/CVS/Root/*/CVS/Entries"
* this is vulnerable: String string = "/tmp/project3/CVS/Root/*/CVS/Entries"
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "/*/CVS/*";
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
String string = "**/#*#";
String string = "/tmp/project1/CVS/Root/*/CVS/Entries";
String string = "/tmp/project2/CVS/Root/*/CVS/Entries";
String string = "/tmp/project3/CVS/Root/*/CVS/Entries";
((DirectoryScanner) string).setBasedir((File) createTempFile);
String string = "/*/CVS/*";
String string = "uO {LN(Y8.iN5t~!%";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z")
test data is: DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
    }
}
statement is: DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "J/cx\\ppf ;h<*";
String string = "Jx*A[;y)vrd;|S5),s-Z";
DirectoryScanner.matchPatternStart(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@a3a121cf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@47923b4d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "uM.Pqx"
statement is: org.evosuite.testcase.statements.AssignmentStatement@2fea4aa4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("uM.Pqx")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("uM.Pqx", "uM.Pqx", (File) arg2)
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "uM.Pqx", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "uM.Pqx";
directoryScanner.includes = stringArray;
MockFile mockFile = new MockFile("uM.Pqx");
MockFile.createTempFile("uM.Pqx", "uM.Pqx", (File) mockFile);
directoryScanner.scandir(mockFile, "uM.Pqx", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[3];
        stringArray[0] = "sample_file1.txt";
        directoryScanner.includes = stringArray;
        MockFile mockFile = new MockFile("sample_file1.txt");
        MockFile.createTempFile("sample_file1.txt", "sample_file2.txt", ((File) (mockFile)));
        directoryScanner.scandir(mockFile, "sample_file1.txt", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "sample_file1.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"sample_file1.txt" Ct is: stringArray[0] = "sample_file1.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile mockFile = new MockFile("sample_file1.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("sample_file1.txt", "sample_file2.txt", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("sample_file1.txt", "sample_file2.txt", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scandir(mockFile, "sample_file1.txt", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "sample_file1.txt", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
String string = "sample_file1.txt";
stringArray[0] = string;
String string = "sample_file1.txt";
MockFile mockFile = new MockFile(string);
String string = "sample_file1.txt";
String string = "sample_file2.txt";
MockFile.createTempFile(string, string, (File) mockFile);
String string = "sample_file1.txt";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**CS/**", "/**CS")
test data is: DirectoryScanner.matchPath("/**CS/**", "/**CS");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath(cplusplusPattern, cplusplusPath);
    }
}
statement is: DirectoryScanner.matchPath(cplusplusPattern, cplusplusPath), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath(cplusplusPattern, cplusplusPath) target is: DirectoryScanner method is: matchPath()
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: String string = null;
String string = null;
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%")
test data is: DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/**/*", "/Users/John Doe/Documents/Test.txt");
    }
}
statement is: DirectoryScanner.matchPath("/**/*", "/Users/John Doe/Documents/Test.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/**/*", "/Users/John Doe/Documents/Test.txt") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**/*";
String string = "/Users/John Doe/Documents/Test.txt";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/**/CVS/*", "/, [")
test data is: DirectoryScanner.matchPath("/**/CVS/*", "/, [");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/**/CVS/*", "/, \\.");
    }
}
statement is: DirectoryScanner.matchPath("/**/CVS/*", "/, \\."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/**/CVS/*", "/, \\.") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**/CVS/*";
String string = "/, \\.";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS")
test data is: DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
    }
}
statement is: DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "//**/CVS/**/**/CVS";
String string = "//**/CVS/**/**/CVS";
DirectoryScanner.matchPath(string, string);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@ca35b4ae type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@91b5a177 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*A/CV?/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@c0b938e7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*A/CV?/**", false)
test data is: MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
directoryScanner.scandir(mockFile, "*A/CV?/**", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
        MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[9];
        stringArray[0] = "*.txt";// Changed to a more descriptive example.

        directoryScanner.includes = stringArray;
        directoryScanner.scandir(mockFile, "*A/CV?/**", false);
    }
}
statement is: MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "*.txt"// Changed to a more descriptive example.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: stringArray[0] = "*.txt"// Changed to a more descriptive example.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a7053876
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.scandir(mockFile, "*A/CV?/**", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "*A/CV?/**", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
* this is vulnerable: String string = "*.txt"
TestCase is: String string = "*A/CV?/**";
String string = "*A/CV?/**";
MockFile mockFile = new MockFile(string, string);
String string = "*A/CV?/**";
String string = "*A/CV?/**";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
String string = "*.txt";
String string = "*A/CV?/**";
boolean _boolean = false;
((DirectoryScanner) mockFile).scandir(mockFile, string, _boolean);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("p**", "")
test data is: DirectoryScanner.match("p**", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("p*", "path1");// Matches any path that starts with 'p' and has at least one character after it

        DirectoryScanner.match("p?", "path2");// Matches any path that starts with 'p' and has exactly two characters after it

        DirectoryScanner.match("*", "path3");// Matches any path that has at least one character }}

    }
}
statement is: DirectoryScanner.match("p*", "path1")// Matches any path that starts with 'p' and has at least one character after it
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("p*", "path1")// Matches any path that starts with 'p' and has at least one character after it
 target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("p?", "path2")// Matches any path that starts with 'p' and has exactly two characters after it
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("p?", "path2")// Matches any path that starts with 'p' and has exactly two characters after it
 target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.match("*", "path3")// Matches any path that has at least one character }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("*", "path3")// Matches any path that has at least one character }}
 target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "p*";
String string = "path1";
DirectoryScanner.match(string, string);
String string = "p?";
String string = "path2";
DirectoryScanner.match(string, string);
String string = "*";
String string = "path3";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("?CVe)*qp].A A,U", "?CVe)*qp].A A,U")
test data is: DirectoryScanner.matchPath("?CVe)*qp].A A,U", "?CVe)*qp].A A,U");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for DirectoryScanner.matchPath() method
        DirectoryScanner.matchPath("abcdefg1234567890", "abcdefg1234567890");// Valid path that should match

        DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;\':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;\':\"<>,./?CVe)*qp].A A,U");// Invalid path that should not match

        DirectoryScanner.matchPath("1234567890abcdefg", "1234567890abcdefg");// Valid path that should match

        DirectoryScanner.matchPath("abcdefg", "abcdefg");// Valid path that should match

        DirectoryScanner.matchPath("C:\\Windows\\System32", "C:\\Windows\\System32");// Valid absolute path that should match

        DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32\\");// Valid absolute path with trailing slash that should match

        DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32");// Invalid absolute path with trailing slash that should not match

        DirectoryScanner.matchPath("C:\\Windows\\System32", "C:\\Windows\\System32\\");// Valid absolute path without trailing slash that should match

        DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32");// Invalid absolute path without trailing slash that should not match

        DirectoryScanner.matchPath("C:/Windows/System32", "C:/Windows/System32");// Valid forward slashes path that should match

        DirectoryScanner.matchPath("C:\\Windows\\System32", "C:/Windows/System32");// Invalid forward slashes path that should not match }}

    }
}
statement is: // Improved test data for DirectoryScanner.matchPath() method
DirectoryScanner.matchPath("abcdefg1234567890", "abcdefg1234567890")// Valid path that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for DirectoryScanner.matchPath() method
DirectoryScanner.matchPath("abcdefg1234567890", "abcdefg1234567890")// Valid path that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;\':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;\':\"<>,./?CVe)*qp].A A,U")// Invalid path that should not match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;\':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;\':\"<>,./?CVe)*qp].A A,U")// Invalid path that should not match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("1234567890abcdefg", "1234567890abcdefg")// Valid path that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("1234567890abcdefg", "1234567890abcdefg")// Valid path that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("abcdefg", "abcdefg")// Valid path that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("abcdefg", "abcdefg")// Valid path that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:\\Windows\\System32", "C:\\Windows\\System32")// Valid absolute path that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:\\Windows\\System32", "C:\\Windows\\System32")// Valid absolute path that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32\\")// Valid absolute path with trailing slash that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32\\")// Valid absolute path with trailing slash that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32")// Invalid absolute path with trailing slash that should not match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32")// Invalid absolute path with trailing slash that should not match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:\\Windows\\System32", "C:\\Windows\\System32\\")// Valid absolute path without trailing slash that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:\\Windows\\System32", "C:\\Windows\\System32\\")// Valid absolute path without trailing slash that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32")// Invalid absolute path without trailing slash that should not match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:\\Windows\\System32\\", "C:\\Windows\\System32")// Invalid absolute path without trailing slash that should not match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:/Windows/System32", "C:/Windows/System32")// Valid forward slashes path that should match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:/Windows/System32", "C:/Windows/System32")// Valid forward slashes path that should match
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("C:\\Windows\\System32", "C:/Windows/System32")// Invalid forward slashes path that should not match }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("C:\\Windows\\System32", "C:/Windows/System32")// Invalid forward slashes path that should not match }}
 target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "abcdefg1234567890";
String string = "abcdefg1234567890";
DirectoryScanner.matchPath(string, string);
String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U";
String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U";
DirectoryScanner.matchPath(string, string);
String string = "1234567890abcdefg";
String string = "1234567890abcdefg";
DirectoryScanner.matchPath(string, string);
String string = "abcdefg";
String string = "abcdefg";
DirectoryScanner.matchPath(string, string);
String string = "C:\\Windows\\System32";
String string = "C:\\Windows\\System32";
DirectoryScanner.matchPath(string, string);
String string = "C:\\Windows\\System32\\";
String string = "C:\\Windows\\System32\\";
DirectoryScanner.matchPath(string, string);
String string = "C:\\Windows\\System32\\";
String string = "C:\\Windows\\System32";
DirectoryScanner.matchPath(string, string);
String string = "C:\\Windows\\System32";
String string = "C:\\Windows\\System32\\";
DirectoryScanner.matchPath(string, string);
String string = "C:\\Windows\\System32\\";
String string = "C:\\Windows\\System32";
DirectoryScanner.matchPath(string, string);
String string = "C:/Windows/System32";
String string = "C:/Windows/System32";
DirectoryScanner.matchPath(string, string);
String string = "C:\\Windows\\System32";
String string = "C:/Windows/System32";
DirectoryScanner.matchPath(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("p**", "p")
test data is: DirectoryScanner.matchPath("p**", "p");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("p*", "picture");
        DirectoryScanner.matchPath("p*", "presentation");
        DirectoryScanner.matchPath("p*", "project");
    }
}
statement is: DirectoryScanner.matchPath("p*", "picture"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("p*", "picture") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("p*", "presentation"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("p*", "presentation") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
statement is: DirectoryScanner.matchPath("p*", "project"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("p*", "project") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "p*";
String string = "picture";
DirectoryScanner.matchPath(string, string);
String string = "p*";
String string = "presentation";
DirectoryScanner.matchPath(string, string);
String string = "p*";
String string = "project";
DirectoryScanner.matchPath(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("**/CV?", "I")
test data is: DirectoryScanner.match("**/CV?", "I");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("**/CV?", "Invoice");
    }
}
statement is: DirectoryScanner.match("**/CV?", "Invoice"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("**/CV?", "Invoice") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/CV?";
String string = "Invoice";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("///**/C*CS_/**", "//**/CCS_/**")
test data is: DirectoryScanner.matchPath("///**/C*CS_/**", "//**/CCS_/**");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**");
    }
}
statement is: DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "//**/C*CS_/**";
String string = "//**/CCS_/**";
DirectoryScanner.matchPath(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("//**/CVS/**", "///CVS/")
test data is: DirectoryScanner.match("//**/CVS/**", "///CVS/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("//home/user/Projects/myproject/CVS/", "//home/user/Projects/myproject/CVS/CVSROOT");
    }
}
statement is: DirectoryScanner.match("//home/user/Projects/myproject/CVS/", "//home/user/Projects/myproject/CVS/CVSROOT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("//home/user/Projects/myproject/CVS/", "//home/user/Projects/myproject/CVS/CVSROOT") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "//home/user/Projects/myproject/CVS/";
String string = "//home/user/Projects/myproject/CVS/CVSROOT";
DirectoryScanner.match(string, string);

statement is: match(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = DirectoryScanner.match("/**/CVS/**", "/7C8]%=")
test data is: DirectoryScanner.match("/**/CVS/**", "/7C8]%=");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/");
    }
}
statement is: DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/") target is: DirectoryScanner method is: match(java.lang.String,java.lang.String)
Matched Method is: match(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/**/CVS/**";
String string = "/home/user/project/CVS/";
DirectoryScanner.match(string, string);

statement is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPath = DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?")
test data is: DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt");
    }
}
statement is: DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt") target is: DirectoryScanner method is: matchPath(java.lang.String,java.lang.String)
Matched Method is: matchPath(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "/path/to/file1.txt";
String string = "/path/to/file2.txt";
DirectoryScanner.matchPath(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setIncludes(new String[]{ "*.txt", "*.md" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setIncludes(new String[]{ "*.txt", "*.md" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(new String[]{ "*.txt", "*.md" }) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@30db0ff7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9eead053 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "//*/kYr/"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "//*/kYr/";
directoryScanner.setIncludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[1];
        stringArray[0] = "C:\\Users\\John Doe\\Documents\\";// change to a real path that exists on your machine

        directoryScanner.setIncludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\Users\\John Doe\\Documents\\"// change to a real path that exists on your machine
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\John Doe\\Documents\\" Ct is: stringArray[0] = "C:\\Users\\John Doe\\Documents\\"// change to a real path that exists on your machine

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "C:\\Users\\John Doe\\Documents\\";
stringArray[0] = string;
directoryScanner.setIncludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes((String[]) null)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setExcludes(new String[]{ "**/node_modules/**", "**/.git/**" });
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setExcludes(new String[]{ "**/node_modules/**", "**/.git/**" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(new String[]{ "**/node_modules/**", "**/.git/**" }) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = null;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.scan(new File("/path/to/test/data"));
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scan(new File("/path/to/test/data")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan(new File("/path/to/test/data")) target is: directoryScanner method is: scan(File)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir("&")
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&");
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\John Doe");
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\John Doe") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\John Doe";
directoryScanner.setBasedir(string);
directoryScanner.scan();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("D#W!e;x4j(&uqj5^*", "D#W!e;x4j(&uqj5^*")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("D#W!e;x4j(&uqj5^*", "D#W!e;x4j(&uqj5^*");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("temp_file", "txt")));
        directoryScanner.setBasedir(((File) (createTempFile)));
        directoryScanner.scan();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("temp_file", "txt"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("temp_file", "txt"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scan()V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "temp_file";
String string = "txt";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/myproject/CVS/0");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("cvs-myproject", "cvd")));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (createTempFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedFiles();
        directoryScanner.getNotIncludedDirectories();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/myproject/CVS/0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("cvs-myproject", "cvd"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("cvs-myproject", "cvd"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getExcludedFiles()[Ljava/lang/String;
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "cvs-myproject";
String string = "cvd";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getExcludedFiles();
((DirectoryScanner) string).getNotIncludedDirectories();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "/*/CVS/*", true)
statement is: org.evosuite.testcase.statements.ArrayStatement@6627f415 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2d278179 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@6a564923 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@822b2d45 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@d2c6b569 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@c1b17dff type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@7aee7282 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "/*/CVS/*"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/CVS/FileManager.java");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*")));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (createTempFile)));
        MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*", ((File) (createTempFile)));
        directoryScanner.scan();
        directoryScanner.scandir(createTempFile, "CVS/FileManagerTest.java", true);
        String[] stringArray = new String[6];
        stringArray[0] = "CVS/FileManager.java";
        stringArray[1] = "CVS/FileManagerTest.java";
        stringArray[2] = "/*/CVS/*";
        stringArray[3] = "/*/CVS/*";
        stringArray[4] = "/*/CVS/*";
        stringArray[5] = "/*/CVS/*";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.getExcludedFiles();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/CVS/FileManager.java"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*", ((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*", ((File) (createTempFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
statement is: directoryScanner.scandir(createTempFile, "CVS/FileManagerTest.java", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(createTempFile, "CVS/FileManagerTest.java", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "CVS/FileManager.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"CVS/FileManager.java" Ct is: stringArray[0] = "CVS/FileManager.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@ae22ca94
statement is: stringArray[1] = "CVS/FileManagerTest.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"CVS/FileManagerTest.java" Ct is: stringArray[1] = "CVS/FileManagerTest.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@38534bfb
statement is: stringArray[2] = "/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/*/CVS/*" Ct is: stringArray[2] = "/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@17e1710a
statement is: stringArray[3] = "/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/*/CVS/*" Ct is: stringArray[3] = "/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9f986dc0
statement is: stringArray[4] = "/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/*/CVS/*" Ct is: stringArray[4] = "/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@89bde63e
statement is: stringArray[5] = "/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/*/CVS/*" Ct is: stringArray[5] = "/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@df117afe
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getExcludedFiles()[Ljava/lang/String;
* this is vulnerable: String string = "CVS/FileManager.java"
* this is vulnerable: String string = "CVS/FileManagerTest.java"
* this is vulnerable: String string = "/*/CVS/*"
* this is vulnerable: String string = "/*/CVS/*"
* this is vulnerable: String string = "/*/CVS/*"
* this is vulnerable: String string = "/*/CVS/*"
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "CVS/FileManagerTest.java";
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
String string = "CVS/FileManagerTest.java";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "CVS/FileManagerTest.java";
boolean _boolean = true;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);
String[] stringArray = new String[6];
String string = "CVS/FileManager.java";
String string = "CVS/FileManagerTest.java";
String string = "/*/CVS/*";
String string = "/*/CVS/*";
String string = "/*/CVS/*";
String string = "/*/CVS/*";
((DirectoryScanner) string).setIncludes(stringArray);
((DirectoryScanner) string).getExcludedFiles();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@45491e64 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7901ffb3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@810839ee type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@1fd2c722 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@542944a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@20bb0efc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ac4f9fc0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@bb241874 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "/*/CVS/*", false)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
stringArray[5] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Users\\testuser\\Documents");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("exampleFile.txt", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile)))));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[6];
        stringArray[0] = "C:\\Users\\testuser\\Documents";
        stringArray[1] = "exampleFile.txt";
        stringArray[2] = "*.txt";
        stringArray[3] = "/home/testuser/project/src";
        stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
        stringArray[5] = "*.txt";
        directoryScanner.includes = stringArray;
        directoryScanner.setBasedir(((File) (createTempFile)));
        MockFile.createTempFile("exampleFile2.txt", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile)));
        directoryScanner.scan();
        directoryScanner.scandir(createTempFile, "*.txt", false);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Users\\testuser\\Documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("exampleFile.txt", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile))))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("exampleFile.txt", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile))))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\Users\\testuser\\Documents", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\testuser\\Documents" Ct is: stringArray[0] = "C:\\Users\\testuser\\Documents"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@46c7aca3
statement is: stringArray[1] = "exampleFile.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"exampleFile.txt" Ct is: stringArray[1] = "exampleFile.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f8a0b11e
statement is: stringArray[2] = "*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: stringArray[2] = "*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@2963a76d
statement is: stringArray[3] = "/home/testuser/project/src", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/home/testuser/project/src" Ct is: stringArray[3] = "/home/testuser/project/src"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f3f137ec
statement is: stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"\u0000BPwIJ7^OUB$k~AgVc" Ct is: stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b4a83518
statement is: stringArray[5] = "*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: stringArray[5] = "*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@806f6322
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: MockFile.createTempFile("exampleFile2.txt", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("exampleFile2.txt", "uO {LN(Y8.iN5t~!%", ((File) (createTempFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scan()V
statement is: directoryScanner.scandir(createTempFile, "*.txt", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(createTempFile, "*.txt", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
* this is vulnerable: String string = "C:\\Users\\testuser\\Documents"
* this is vulnerable: String string = "exampleFile.txt"
* this is vulnerable: String string = "*.txt"
* this is vulnerable: String string = "/home/testuser/project/src"
* this is vulnerable: String string = "\u0000BPwIJ7^OUB$k~AgVc"
* this is vulnerable: String string = "*.txt"
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "exampleFile.txt";
String string = "uO {LN(Y8.iN5t~!%";
MockFile mockFile = null;
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
String string = "C:\\Users\\testuser\\Documents";
String string = "exampleFile.txt";
String string = "*.txt";
String string = "/home/testuser/project/src";
String string = "\u0000BPwIJ7^OUB$k~AgVc";
String string = "*.txt";
((DirectoryScanner) string).setBasedir((File) createTempFile);
String string = "exampleFile2.txt";
String string = "uO {LN(Y8.iN5t~!%";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "*.txt";
boolean _boolean = false;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**/CVS")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("**/CVS", "**/CVS", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: MockFile mockFile = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("**/CVS");
        MockFile.createTempFile("**/CVS", "**/CVS", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        List<String> includedFiles = directoryScanner.getIncludedFiles();
    }
}
statement is: MockFile mockFile = new MockFile("**/CVS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("**/CVS", "**/CVS", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("**/CVS", "**/CVS", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
statement is: List<String> includedFiles = directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: String string = "**/CVS";
MockFile mockFile = new MockFile(string);
String string = "**/CVS";
String string = "**/CVS";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) mockFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getIncludedFiles();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/CVS");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("0", "CVS")));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (createTempFile)));
        directoryScanner.scan();
        directoryScanner.getNotIncludedFiles();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/CVS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("0", "CVS"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("0", "CVS"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
statement is: directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "0";
String string = "CVS";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getNotIncludedFiles();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (createTempFile)));
        MockFile.createTempFile("unique_file_name1", "/*/CVS/*", ((File) (createTempFile)));
        MockFile.createTempFile("unique_file_name2", "/*/CVS/*", ((File) (createTempFile)));
        directoryScanner.scan();
        List<File> notIncludedFiles = directoryScanner.getNotIncludedFiles();
        assertEquals(2, notIncludedFiles.size());
        assertTrue(notIncludedFiles.contains(new File("unique_file_name1")));
        assertTrue(notIncludedFiles.contains(new File("unique_file_name2")));
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("/*/CVS/*", "/*/CVS/*"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("/*/CVS/*", "/*/CVS/*"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: MockFile.createTempFile("unique_file_name1", "/*/CVS/*", ((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("unique_file_name1", "/*/CVS/*", ((File) (createTempFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: MockFile.createTempFile("unique_file_name2", "/*/CVS/*", ((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("unique_file_name2", "/*/CVS/*", ((File) (createTempFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
statement is: List<File> notIncludedFiles = directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
statement is: assertEquals(2, notIncludedFiles.size()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, notIncludedFiles.size()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertTrue(notIncludedFiles.contains(new File("unique_file_name1"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(notIncludedFiles.contains(new File("unique_file_name1"))) target is:  method is: assertTrue(<unknown>)
statement is: assertTrue(notIncludedFiles.contains(new File("unique_file_name2"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(notIncludedFiles.contains(new File("unique_file_name2"))) target is:  method is: assertTrue(<unknown>)
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "/*/CVS/*";
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
String string = "unique_file_name1";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
String string = "unique_file_name2";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getNotIncludedFiles();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedFiles = directoryScanner.getExcludedFiles()
test data is: MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
directoryScanner.getExcludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder");
        MockFile.createTempFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.addDefaultExcludes();
        directoryScanner.scan();
        directoryScanner.getExcludedFiles();
    }
}
statement is: MockFile mockFile = new MockFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scan()V
statement is: directoryScanner.getExcludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedFiles() target is: directoryScanner method is: getExcludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: getExcludedFiles()[Ljava/lang/String;
TestCase is: String string = "src/test/resources/files/CVS_folder";
String string = "src/test/resources/files/CVS_folder";
MockFile mockFile = new MockFile(string, string);
String string = "src/test/resources/files/CVS_folder";
String string = "src/test/resources/files/CVS_folder";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.LinkedList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedList<java.lang.Object>
statement code is: LinkedList<Object> linkedList = new LinkedList<Object>()
statement is: java.util.Vector(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.Object>
statement code is: Vector<Object> vector = new Vector<Object>(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@56198c5c type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.dirsIncluded = vector
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        LinkedList<Object> linkedList = new LinkedList<>();
        Vector<Object> vector = new Vector<>(linkedList);
        directoryScanner.dirsIncluded = vector;
        directoryScanner.getIncludedDirectories();
        // Improved test data:
        DirectoryScanner directoryScanner = new DirectoryScanner();
        LinkedList<String> linkedList = new LinkedList<>();
        Vector<String> vector = new Vector<>(linkedList);
        directoryScanner.dirsIncluded = vector;
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedList<Object> linkedList = new LinkedList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<Object> vector = new Vector<>(linkedList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.dirsIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
statement is: // Improved test data:
DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedList<String> linkedList = new LinkedList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<String> vector = new Vector<>(linkedList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.dirsIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 4
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.getIncludedDirectories();
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.getIncludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.String>
statement code is: Vector<String> vector = new Vector<String>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = vector.add("com.lts.io.DirectoryScanner")
statement is: org.evosuite.testcase.statements.AssignmentStatement@dfd6b0e4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.dirsIncluded = vector
statement is: getIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedDirectories = directoryScanner.getIncludedDirectories()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        Vector<String> vector = new Vector<String>();
        vector.add("com.lts.io.DirectoryScanner");
        directoryScanner.dirsIncluded = vector;
        directoryScanner.getIncludedDirectories();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector<String> vector = new Vector<String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vector.add("com.lts.io.DirectoryScanner"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vector.add("com.lts.io.DirectoryScanner") target is: vector method is: add(java.lang.String)
source statement: java.util.Vector()V callee: VariableReference: Statement 1, type java.util.Vector<java.lang.String>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: directoryScanner.dirsIncluded = vector, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedDirectories() target is: directoryScanner method is: getIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedDirectories()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
String string = "com.lts.io.DirectoryScanner";
vector.add(string);
directoryScanner.getIncludedDirectories();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*")
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) arg2)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "/*/CVS/*", true)
statement is: org.evosuite.testcase.statements.ArrayStatement@3db363d0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@67a45d48 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f428a7f0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@442e10c2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@20ee0495 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ada54e50 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "/*/CVS/*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@25b8e56d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "/*/CVS/*"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: getNotIncludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedDirectories = directoryScanner.getNotIncludedDirectories()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getNotIncludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/user1/CVS/project1");
        FileSystemHandling.createFolder(evoSuiteFile);
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("project1", "CVS")));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (createTempFile)));
        MockFile.createTempFile("project1", "CVS", ((File) (createTempFile)));
        directoryScanner.scan();
        directoryScanner.scandir(createTempFile, "/tmp/user1/CVS/project1/*/CVS/*", true);
        String[] stringArray = new String[6];
        stringArray[0] = "project1";
        stringArray[1] = "CVS";
        stringArray[2] = "/tmp/user1/CVS/project1/*/CVS/*";
        stringArray[3] = "/tmp/user1/CVS/project1/*/CVS/*";
        stringArray[4] = "/tmp/user1/CVS/project1/*/CVS/*";
        stringArray[5] = "/tmp/user1/CVS/project1/*/CVS/*";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.getNotIncludedDirectories();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/user1/CVS/project1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("project1", "CVS"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("project1", "CVS"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (createTempFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: MockFile.createTempFile("project1", "CVS", ((File) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("project1", "CVS", ((File) (createTempFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scan()V
statement is: directoryScanner.scandir(createTempFile, "/tmp/user1/CVS/project1/*/CVS/*", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(createTempFile, "/tmp/user1/CVS/project1/*/CVS/*", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "project1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"project1" Ct is: stringArray[0] = "project1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@76a1ae04
statement is: stringArray[1] = "CVS", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"CVS" Ct is: stringArray[1] = "CVS"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@81d6d1c9
statement is: stringArray[2] = "/tmp/user1/CVS/project1/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/user1/CVS/project1/*/CVS/*" Ct is: stringArray[2] = "/tmp/user1/CVS/project1/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3d09374c
statement is: stringArray[3] = "/tmp/user1/CVS/project1/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/user1/CVS/project1/*/CVS/*" Ct is: stringArray[3] = "/tmp/user1/CVS/project1/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1b0992f2
statement is: stringArray[4] = "/tmp/user1/CVS/project1/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/user1/CVS/project1/*/CVS/*" Ct is: stringArray[4] = "/tmp/user1/CVS/project1/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@4e985d18
statement is: stringArray[5] = "/tmp/user1/CVS/project1/*/CVS/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/tmp/user1/CVS/project1/*/CVS/*" Ct is: stringArray[5] = "/tmp/user1/CVS/project1/*/CVS/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@88c96f79
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.getNotIncludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedDirectories() target is: directoryScanner method is: getNotIncludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 3, type com.lts.io.DirectoryScannerindex is: 5
Matched Method is: getNotIncludedDirectories()[Ljava/lang/String;
* this is vulnerable: String string = "project1"
* this is vulnerable: String string = "CVS"
* this is vulnerable: String string = "/tmp/user1/CVS/project1/*/CVS/*"
* this is vulnerable: String string = "/tmp/user1/CVS/project1/*/CVS/*"
* this is vulnerable: String string = "/tmp/user1/CVS/project1/*/CVS/*"
* this is vulnerable: String string = "/tmp/user1/CVS/project1/*/CVS/*"
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "project1";
String string = "CVS";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
String string = "project1";
String string = "CVS";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "/tmp/user1/CVS/project1/*/CVS/*";
boolean _boolean = true;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);
String[] stringArray = new String[6];
String string = "project1";
String string = "CVS";
String string = "/tmp/user1/CVS/project1/*/CVS/*";
String string = "/tmp/user1/CVS/project1/*/CVS/*";
String string = "/tmp/user1/CVS/project1/*/CVS/*";
String string = "/tmp/user1/CVS/project1/*/CVS/*";
((DirectoryScanner) string).setIncludes(stringArray);
((DirectoryScanner) string).getNotIncludedDirectories();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
        MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        List<String> excludedDirectories = directoryScanner.getExcludedDirectories();
        System.out.println("Number of excluded directories: " + excludedDirectories.size());
        for (String directory : excludedDirectories) {
            System.out.println(directory);
        }
    }
}
statement is: MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scan()V
statement is: List<String> excludedDirectories = directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
statement is: System.out.println("Number of excluded directories: " + excludedDirectories.size()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println("Number of excluded directories: " + excludedDirectories.size()) target is: System.out method is: println(char[])
statement is: for (String directory : excludedDirectories) {
    System.out.println(directory);
}, class spoon.support.reflect.code.CtForEachImpl
TestCase is: String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile mockFile = new MockFile(string, string);
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: scan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scan()
statement is: getExcludedDirectories()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] excludedDirectories = directoryScanner.getExcludedDirectories()
test data is: MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
        MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
        // Improved test data:
        MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
        MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();
        // Examples:
        mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");// A directory with CVS files

        MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile)));// Creating a temporary file in the mock directory

        directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.scan();
        directoryScanner.getExcludedDirectories();// Scanning the mock directory and retrieving a list of excluded directories }}

    }
}
statement is: MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
statement is: // Improved test data:
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories() target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
statement is: // Examples:
mockFile = new MockFile("//**/CVS/*", "//**/CVS/*")// A directory with CVS files
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile)))// Creating a temporary file in the mock directory
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", ((File) (mockFile)))// Creating a temporary file in the mock directory
 target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: addDefaultExcludes()V
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.scan(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scan() target is: directoryScanner method is: scan()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: scan()V
statement is: directoryScanner.getExcludedDirectories()// Scanning the mock directory and retrieving a list of excluded directories }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getExcludedDirectories()// Scanning the mock directory and retrieving a list of excluded directories }}
 target is: directoryScanner method is: getExcludedDirectories()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 17
Matched Method is: getExcludedDirectories()[Ljava/lang/String;
TestCase is: String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile mockFile = new MockFile(string, string);
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile mockFile = new MockFile(string, string);
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@5ebd4184 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7f0949bd type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[9];
        directoryScanner.excludes = stringArray;
        directoryScanner.addDefaultExcludes();
        // Improved test data
        directoryScanner.excludes = new String[]{ "**/*.tmp", "**/temp*", "**/*~" };
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: addDefaultExcludes()V
statement is: // Improved test data
directoryScanner.excludes = new String[]{ "**/*.tmp", "**/temp*", "**/*~" }, class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.addDefaultExcludes();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**")
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) arg2)
statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: addDefaultExcludes()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.addDefaultExcludes()
statement is: org.evosuite.testcase.statements.ArrayStatement@ca6ecec2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c1674af0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "*A/CV?/**"
statement is: org.evosuite.testcase.statements.AssignmentStatement@cdb550cb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "*A/CV?/**", false)
test data is: MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
directoryScanner.scandir(mockFile, "*A/CV?/**", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("example-file1.txt", "example-file2.txt");
        MockFile.createTempFile("example-file1.txt", "example-file2.txt", ((File) (mockFile)));
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.addDefaultExcludes();
        String[] stringArray = new String[9];
        stringArray[0] = "*.txt";
        directoryScanner.includes = stringArray;
        directoryScanner.scandir(mockFile, "*.txt", false);
    }
}
statement is: MockFile mockFile = new MockFile("example-file1.txt", "example-file2.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile.createTempFile("example-file1.txt", "example-file2.txt", ((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockFile.createTempFile("example-file1.txt", "example-file2.txt", ((File) (mockFile))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String,File)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.addDefaultExcludes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.addDefaultExcludes() target is: directoryScanner method is: addDefaultExcludes()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: addDefaultExcludes()V
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.txt" Ct is: stringArray[0] = "*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6b046c3b
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.scandir(mockFile, "*.txt", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "*.txt", false) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 2, type com.lts.io.DirectoryScannerindex is: 6
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
* this is vulnerable: String string = "*.txt"
TestCase is: String string = "example-file1.txt";
String string = "example-file2.txt";
MockFile mockFile = new MockFile(string, string);
String string = "example-file1.txt";
String string = "example-file2.txt";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
String[] stringArray = new String[9];
String string = "*.txt";
String string = "*.txt";
boolean _boolean = false;
((DirectoryScanner) mockFile).scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@6e99f282 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5e2b5adc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "nXDN)XM*u tY"
statement is: org.evosuite.testcase.statements.AssignmentStatement@351108af type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "Fn\"Kw-/"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "Fn\"Kw-/";
directoryScanner.setExcludes(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[9];
        stringArray[0] = "example.txt";
        stringArray[1] = "subdirectory/example2.txt";
        directoryScanner.setExcludes(stringArray);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "example.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example.txt" Ct is: stringArray[0] = "example.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "subdirectory/example2.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"subdirectory/example2.txt" Ct is: stringArray[1] = "subdirectory/example2.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
String string = "example.txt";
stringArray[0] = string;
String string = "subdirectory/example2.txt";
stringArray[1] = string;
directoryScanner.setExcludes(stringArray);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.AssignmentStatement@64de7c20 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: directoryScanner.haveSlowResults = true
statement is: getNotIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] notIncludedFiles = directoryScanner.getNotIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
directoryScanner.getNotIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setMaxDepth(3);
        directoryScanner.setInclusionPattern("**/*.txt");
        directoryScanner.setExclusionPattern("**/node_modules/**");
        List<String> includedFiles = directoryScanner.getNotIncludedFiles();
        for (String file : includedFiles) {
            System.out.println(file);
        }
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setMaxDepth(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setMaxDepth(3) target is: directoryScanner method is: setMaxDepth(int)
statement is: directoryScanner.setInclusionPattern("**/*.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setInclusionPattern("**/*.txt") target is: directoryScanner method is: setInclusionPattern(java.lang.String)
statement is: directoryScanner.setExclusionPattern("**/node_modules/**"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExclusionPattern("**/node_modules/**") target is: directoryScanner method is: setExclusionPattern(java.lang.String)
statement is: List<String> includedFiles = directoryScanner.getNotIncludedFiles(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getNotIncludedFiles() target is: directoryScanner method is: getNotIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getNotIncludedFiles()[Ljava/lang/String;
statement is: for (String file : includedFiles) {
    System.out.println(file);
}, class spoon.support.reflect.code.CtForEachImpl
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getNotIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("**/*~", "**/*~")
statement is: scandir(Ljava/io/File;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.scandir(arg0, "**/*~", true)
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*~", "**/*~");
directoryScanner.scandir(mockFile, "**/*~", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("**/*.txt", "**/*.docx");
        directoryScanner.scandir(mockFile, "**/*.*", true);
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("**/*.txt", "**/*.docx"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.scandir(mockFile, "**/*.*", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.scandir(mockFile, "**/*.*", true) target is: directoryScanner method is: scandir(MockFile,java.lang.String,boolean)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: scandir(Ljava/io/File;Ljava/lang/String;Z)V
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "**/*.txt";
String string = "**/*.docx";
MockFile mockFile = new MockFile(string, string);
String string = "**/*.*";
boolean _boolean = true;
directoryScanner.scandir(mockFile, string, _boolean);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@ebde599e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e83d90fb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "nXDN)XM*u tY"
statement is: org.evosuite.testcase.statements.AssignmentStatement@4c5b78ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "nXDN)XM*u tY"
statement is: org.evosuite.testcase.statements.AssignmentStatement@b582515e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "nXDN)XM*u tY"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a733a7d7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "nXDN)XM*u tY"
statement is: org.evosuite.testcase.statements.AssignmentStatement@2cf72ffa type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "nXDN)XM*u tY"
statement is: org.evosuite.testcase.statements.AssignmentStatement@2361e53d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "nXDN)XM*u tY"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("]~u7")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "nXDN)XM*u tY";
stringArray[2] = "nXDN)XM*u tY";
stringArray[3] = "nXDN)XM*u tY";
stringArray[4] = "nXDN)XM*u tY";
stringArray[5] = "nXDN)XM*u tY";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("]~u7");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[6];
        stringArray[0] = "**/*";
        stringArray[1] = "*/*";
        stringArray[2] = "*";
        stringArray[3] = "/";
        stringArray[4] = ".gitignore";
        stringArray[5] = "*.java";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java");
        directoryScanner.couldHoldIncluded("src/test/java/com/example/MyTestClass.java");
        directoryScanner.couldHoldIncluded("src/main/resources/com/example/config.properties");
        directoryScanner.couldHoldIncluded("src/main/webapp/WEB-INF/index.jsp");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*" Ct is: stringArray[0] = "**/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "*/*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*/*" Ct is: stringArray[1] = "*/*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*" Ct is: stringArray[2] = "*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "/", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/" Ct is: stringArray[3] = "/"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = ".gitignore", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:".gitignore" Ct is: stringArray[4] = ".gitignore"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "*.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"*.java" Ct is: stringArray[5] = "*.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.couldHoldIncluded("src/test/java/com/example/MyTestClass.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("src/test/java/com/example/MyTestClass.java") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.couldHoldIncluded("src/main/resources/com/example/config.properties"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("src/main/resources/com/example/config.properties") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.couldHoldIncluded("src/main/webapp/WEB-INF/index.jsp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("src/main/webapp/WEB-INF/index.jsp") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
String string = "**/*";
stringArray[0] = string;
String string = "*/*";
stringArray[1] = string;
String string = "*";
stringArray[2] = string;
String string = "/";
stringArray[3] = string;
String string = ".gitignore";
stringArray[4] = string;
String string = "*.java";
stringArray[5] = string;
directoryScanner.setIncludes(stringArray);
String string = "src/main/java/com/example/MyClass.java";
directoryScanner.couldHoldIncluded(string);
String string = "src/test/java/com/example/MyTestClass.java";
directoryScanner.couldHoldIncluded(string);
String string = "src/main/resources/com/example/config.properties";
directoryScanner.couldHoldIncluded(string);
String string = "src/main/webapp/WEB-INF/index.jsp";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@8b0f149c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b83bddf type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "n~MnW ir"
statement is: org.evosuite.testcase.statements.AssignmentStatement@1bb0ac5f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.includes = stringArray
statement is: couldHoldIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("n~MnW ir")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
directoryScanner.couldHoldIncluded("n~MnW ir");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[2];
        stringArray[0] = "file1.txt";
        stringArray[1] = "directory/subdirectory";
        directoryScanner.includes = stringArray;
        directoryScanner.couldHoldIncluded("file1.txt");
        directoryScanner.couldHoldIncluded("directory/subdirectory");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[2] Elements: []
lengths: [1] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "file1.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"file1.txt" Ct is: stringArray[0] = "file1.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "directory/subdirectory", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"directory/subdirectory" Ct is: stringArray[1] = "directory/subdirectory"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.includes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.couldHoldIncluded("file1.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("file1.txt") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
statement is: directoryScanner.couldHoldIncluded("directory/subdirectory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.couldHoldIncluded("directory/subdirectory") target is: directoryScanner method is: couldHoldIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: couldHoldIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
String string = "file1.txt";
stringArray[0] = string;
String string = "directory/subdirectory";
stringArray[0] = string;
String string = "file1.txt";
directoryScanner.couldHoldIncluded(string);
String string = "directory/subdirectory";
directoryScanner.couldHoldIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: setBasedir(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir((File) arg0)
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        MockFile mockFile = new MockFile("C:\\temp", "my_directory");
        directoryScanner.setBasedir(((File) (mockFile)));
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFile mockFile = new MockFile("C:\\temp", "my_directory"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir(((File) (mockFile))) target is: directoryScanner method is: setBasedir(File)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/io/File;)V
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\temp";
String string = "my_directory";
MockFile mockFile = new MockFile(string, string);
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: setBasedir(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setBasedir(".cvsignore")
statement is: getBasedir()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile basedir = (MockFile)directoryScanner.getBasedir()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
directoryScanner.getBasedir();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir("C:\\Users\\username\\Documents");
        directoryScanner.getBasedir();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.setBasedir("C:\\Users\\username\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setBasedir("C:\\Users\\username\\Documents") target is: directoryScanner method is: setBasedir(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setBasedir(Ljava/lang/String;)V
statement is: directoryScanner.getBasedir(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getBasedir() target is: directoryScanner method is: getBasedir()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getBasedir()Ljava/io/File;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\username\\Documents";
directoryScanner.setBasedir(string);
directoryScanner.getBasedir();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: java.util.Vector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Vector<java.lang.String>
statement code is: Vector<String> vector = new Vector<String>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@a989a1e type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Vector<E>
statement code is: directoryScanner.filesIncluded = vector
statement is: getIncludedFiles()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] includedFiles = directoryScanner.getIncludedFiles()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] filesIncluded = new String[]{ "file1.txt", "file2.pdf" };
        directoryScanner.filesIncluded = filesIncluded;
        directoryScanner.getIncludedFiles();
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] filesIncluded = new String[]{ "file1.txt", "file2.pdf" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: directoryScanner.filesIncluded = filesIncluded, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.getIncludedFiles(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.getIncludedFiles() target is: directoryScanner method is: getIncludedFiles()
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: getIncludedFiles()[Ljava/lang/String;
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getIncludedFiles();

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@4fecb802 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4a0f978 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "T 7{|m(4u"
statement is: org.evosuite.testcase.statements.AssignmentStatement@c921d50e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "T 7{|m(4u"
statement is: setExcludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setExcludes(arg0)
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("?&LJDfK.h@rLrVQd")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "T 7{|m(4u";
stringArray[1] = "T 7{|m(4u";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("?&LJDfK.h@rLrVQd");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[2];
        stringArray[0] = "directory1";// this represents a directory that contains files to be scanned

        stringArray[1] = "directory2";// this represents a directory that contains subdirectories and files to be scanned recursively

        directoryScanner.setExcludes(stringArray);
        directoryScanner.isExcluded("subdirectory/file.txt");// this is a file that is contained within one of the directories specified in the excludes array }}

    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "directory1"// this represents a directory that contains files to be scanned
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"directory1" Ct is: stringArray[0] = "directory1"// this represents a directory that contains files to be scanned

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "directory2"// this represents a directory that contains subdirectories and files to be scanned recursively
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"directory2" Ct is: stringArray[1] = "directory2"// this represents a directory that contains subdirectories and files to be scanned recursively

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setExcludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setExcludes(stringArray) target is: directoryScanner method is: setExcludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setExcludes([Ljava/lang/String;)V
statement is: directoryScanner.isExcluded("subdirectory/file.txt")// this is a file that is contained within one of the directories specified in the excludes array }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("subdirectory/file.txt")// this is a file that is contained within one of the directories specified in the excludes array }}
 target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
String string = "directory1";
stringArray[0] = string;
String string = "directory2";
stringArray[1] = string;
directoryScanner.setExcludes(stringArray);
String string = "subdirectory/file.txt";
directoryScanner.isExcluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@91925b94 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e5bfe936 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "R|m"
statement is: org.evosuite.testcase.statements.AssignmentStatement@6d36a3b6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.String;
statement code is: directoryScanner.excludes = stringArray
statement is: isExcluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean excluded = directoryScanner.isExcluded("R|m")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("R|m");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[9];
        stringArray[0] = "**/*.txt";
        directoryScanner.excludes = stringArray;
        directoryScanner.isExcluded("R|m");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "**/*.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"**/*.txt" Ct is: stringArray[0] = "**/*.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.excludes = stringArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: directoryScanner.isExcluded("R|m"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isExcluded("R|m") target is: directoryScanner method is: isExcluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isExcluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
String string = "**/*.txt";
stringArray[0] = string;
String string = "R|m";
directoryScanner.isExcluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@d62e9915 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b196083f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@c91b9336 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@dde14c99 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "n9P:8=]`I9 ["
statement is: org.evosuite.testcase.statements.AssignmentStatement@7550cc17 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@919a4d92 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@4505e4a3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@260ea995 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@80a09e6a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[7] = "LY8#ob}/=^>Qy|%z]P"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("0u)Dlz")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "LY8#ob}/=^>Qy|%z]P";
stringArray[2] = "n9P:8=]`I9 [";
stringArray[3] = "LY8#ob}/=^>Qy|%z]P";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "LY8#ob}/=^>Qy|%z]P";
stringArray[6] = "LY8#ob}/=^>Qy|%z]P";
stringArray[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("0u)Dlz");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        String[] stringArray = new String[8];
        stringArray[0] = "images";
        stringArray[1] = "videos";
        stringArray[2] = "documents";
        stringArray[3] = "audio";
        stringArray[4] = "pdf";
        stringArray[5] = "txt";
        stringArray[6] = "png";
        stringArray[7] = "jpg";
        directoryScanner.setIncludes(stringArray);
        directoryScanner.isIncluded("my_image.png");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "images", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"images" Ct is: stringArray[0] = "images"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "videos", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"videos" Ct is: stringArray[1] = "videos"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "documents", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"documents" Ct is: stringArray[2] = "documents"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "audio", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"audio" Ct is: stringArray[3] = "audio"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "pdf", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"pdf" Ct is: stringArray[4] = "pdf"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"txt" Ct is: stringArray[5] = "txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "png", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"png" Ct is: stringArray[6] = "png"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "jpg", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"jpg" Ct is: stringArray[7] = "jpg"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: directoryScanner.setIncludes(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.setIncludes(stringArray) target is: directoryScanner method is: setIncludes(java.lang.String[])
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: setIncludes([Ljava/lang/String;)V
statement is: directoryScanner.isIncluded("my_image.png"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.isIncluded("my_image.png") target is: directoryScanner method is: isIncluded(java.lang.String)
source statement: com.lts.io.DirectoryScanner()V callee: VariableReference: Statement 0, type com.lts.io.DirectoryScannerindex is: 0
Matched Method is: isIncluded(Ljava/lang/String;)Z
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
String string = "images";
stringArray[0] = string;
String string = "videos";
stringArray[1] = string;
String string = "documents";
stringArray[2] = string;
String string = "audio";
stringArray[3] = string;
String string = "pdf";
stringArray[4] = string;
String string = "txt";
stringArray[5] = string;
String string = "png";
stringArray[6] = string;
String string = "jpg";
stringArray[7] = string;
directoryScanner.setIncludes(stringArray);
String string = "my_image.png";
directoryScanner.isIncluded(string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: org.evosuite.testcase.statements.ArrayStatement@dc9e261a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8169eda1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@3dbfda5e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "T 7{|m(4u"
statement is: org.evosuite.testcase.statements.AssignmentStatement@14d01bc2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "8plL!}"
statement is: org.evosuite.testcase.statements.AssignmentStatement@219f6975 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter"
statement is: org.evosuite.testcase.statements.AssignmentStatement@dd89c206 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "LY8#ob}/=^>Qy|%z]P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@744574bc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter"
statement is: org.evosuite.testcase.statements.AssignmentStatement@102253ff type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter"
statement is: org.evosuite.testcase.statements.AssignmentStatement@81dc6504 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[7] = "F-LNRkoWDI*"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e5d6b443 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[8] = "%L+FY(X2BH_s/KhI"
statement is: setIncludes([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.setIncludes(arg0)
statement is: isIncluded(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean included = directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter")
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "T 7{|m(4u";
stringArray[2] = "8plL!}";
stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[7] = "F-LNRkoWDI*";
stringArray[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[0] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilter.java";
        stringArray[1] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\test\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java";
        stringArray[2] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java";
        stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
        stringArray[4] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java";
        stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
        stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
        stringArray[7] = "F-LNRkoWDI*";
        stringArray[8] = "%L+FY(X2BH_s/KhI";
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilter.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilter.java" Ct is: stringArray[0] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilter.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@85912a91
statement is: stringArray[1] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\test\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\JohnDoe\\Documents\\myproject\\src\\test\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java" Ct is: stringArray[1] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\test\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7392efa2
statement is: stringArray[2] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java" Ct is: stringArray[2] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d73f2325
statement is: stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.SimpleFileFilter" Ct is: stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@5e3e6bec
statement is: stringArray[4] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java" Ct is: stringArray[4] = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1931b116
statement is: stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.SimpleFileFilter" Ct is: stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@de52df1f
statement is: stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.lts.lang.classloader.SimpleFileFilter" Ct is: stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@4914e863
statement is: stringArray[7] = "F-LNRkoWDI*", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"F-LNRkoWDI*" Ct is: stringArray[7] = "F-LNRkoWDI*"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@40077bb5
statement is: stringArray[8] = "%L+FY(X2BH_s/KhI", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"%L+FY(X2BH_s/KhI" Ct is: stringArray[8] = "%L+FY(X2BH_s/KhI"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a8f40b38
* this is vulnerable: String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilter.java"
* this is vulnerable: String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\test\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java"
* this is vulnerable: String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java"
* this is vulnerable: String string = "com.lts.lang.classloader.SimpleFileFilter"
* this is vulnerable: String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java"
* this is vulnerable: String string = "com.lts.lang.classloader.SimpleFileFilter"
* this is vulnerable: String string = "com.lts.lang.classloader.SimpleFileFilter"
* this is vulnerable: String string = "F-LNRkoWDI*"
* this is vulnerable: String string = "%L+FY(X2BH_s/KhI"
TestCase is: String[] stringArray = new String[9];
String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilter.java";
String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\test\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java";
String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java";
String string = "com.lts.lang.classloader.SimpleFileFilter";
String string = "C:\\Users\\JohnDoe\\Documents\\myproject\\src\\main\\java\\com\\lts\\lang\\classloader\\SimpleFileFilterTest.java";
String string = "com.lts.lang.classloader.SimpleFileFilter";
String string = "com.lts.lang.classloader.SimpleFileFilter";
String string = "F-LNRkoWDI*";
String string = "%L+FY(X2BH_s/KhI";

statement is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("**/*~", "**/*~")
test data is: DirectoryScanner.matchPatternStart("**/*~", "**/*~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt");
    }
}
statement is: DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt") target is: DirectoryScanner method is: matchPatternStart(java.lang.String,java.lang.String)
Matched Method is: matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
TestCase is: String string = "**/sample.txt";
String string = "**/sample.txt";
DirectoryScanner.matchPatternStart(string, string);

statement is: com.lts.io.DirectoryScanner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.lts.io.DirectoryScanner
statement code is: DirectoryScanner directoryScanner = new DirectoryScanner()
statement is: slowScan()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: directoryScanner.slowScan()
test data is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.slowScan();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.slowScan("C:\\Users\\Alice\\Documents", "*.docx");
    }
}
statement is: DirectoryScanner directoryScanner = new DirectoryScanner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: directoryScanner.slowScan("C:\\Users\\Alice\\Documents", "*.docx"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: directoryScanner.slowScan("C:\\Users\\Alice\\Documents", "*.docx") target is: directoryScanner method is: slowScan(java.lang.String,java.lang.String)
TestCase is: DirectoryScanner directoryScanner = new DirectoryScanner();

* test suite isTestSuite: 104
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 1: 
MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "**/#*#";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
Test 3: 
DirectoryScanner.matchPatternStart("J/cxppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "uM.Pqx";
directoryScanner.includes = stringArray;
MockFile mockFile = new MockFile("uM.Pqx");
MockFile.createTempFile("uM.Pqx", "uM.Pqx", (File) mockFile);
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "uM.Pqx", true);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
DirectoryScanner.matchPath("/**CS/**", "/**CS");
Test 6: 
DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");
Test 7: 
DirectoryScanner.matchPath("/**/CVS/*", "/, [");
Test 8: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
Test 9: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
DirectoryScanner.match("p**", "");
Test 11: 
DirectoryScanner.matchPath("?CVe)*qp].A A,U", "?CVe)*qp].A A,U");
Test 12: 
DirectoryScanner.matchPath("p**", "p");
Test 13: 
DirectoryScanner.match("**/CV?", "I");
Test 14: 
DirectoryScanner.matchPath("///**/C*CS_/**", "//**/CCS_/**");
Test 15: 
DirectoryScanner.match("//**/CVS/**", "///CVS/");
Test 16: 
DirectoryScanner.match("/**/CVS/**", "/7C8]%=");
Test 17: 
DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");
Test 18: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 19: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "//*/kYr/";
directoryScanner.setIncludes(stringArray);
Test 20: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("D#W!e;x4j(&uqj5^*", "D#W!e;x4j(&uqj5^*");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedDirectories();
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getExcludedFiles();
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
stringArray[5] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", false);
Test 27: 
MockFile mockFile = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 28: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 29: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 30: 
MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 33: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getNotIncludedDirectories();
Test 34: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 35: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 37: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "Fn\"Kw-/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getNotIncludedFiles();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*~", "**/*~");
try { 
  directoryScanner.scandir(mockFile, "**/*~", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/**_/*~/**_/*~
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "nXDN)XM*u tY";
stringArray[2] = "nXDN)XM*u tY";
stringArray[3] = "nXDN)XM*u tY";
stringArray[4] = "nXDN)XM*u tY";
stringArray[5] = "nXDN)XM*u tY";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("]~u7");
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
directoryScanner.couldHoldIncluded("n~MnW ir");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "T 7{|m(4u";
stringArray[1] = "T 7{|m(4u";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("?&LJDfK.h@rLrVQd");
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("R|m");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "LY8#ob}/=^>Qy|%z]P";
stringArray[2] = "n9P:8=]`I9 [";
stringArray[3] = "LY8#ob}/=^>Qy|%z]P";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "LY8#ob}/=^>Qy|%z]P";
stringArray[6] = "LY8#ob}/=^>Qy|%z]P";
stringArray[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("0u)Dlz");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "T 7{|m(4u";
stringArray[2] = "8plL!}";
stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[7] = "F-LNRkoWDI*";
stringArray[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");
Test 50: 
DirectoryScanner.matchPatternStart("**/*~", "**/*~");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 53: 
MockFile mockFile = new MockFile("example_input1", "example_input2");
MockFile.createTempFile("example_input1", "example_input2", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();

Test 54: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
((DirectoryScanner)"/*/CVS/*").setBasedir((File) createTempFile);
String string = "/*/CVS/*";
String string = "uO {LN(Y8.iN5t~!%";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();

Test 55: 
DirectoryScanner.matchPatternStart("J/cxppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");

Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "sample_file1.txt";
MockFile mockFile = new MockFile("sample_file1.txt");
MockFile.createTempFile("sample_file1.txt", "sample_file2.txt", (File) mockFile);
directoryScanner.scandir(mockFile, "sample_file1.txt", true);

Test 57: 
DirectoryScanner.matchPath((String) null, (String) null);

Test 58: 
DirectoryScanner.matchPath("/**/*", "/Users/John Doe/Documents/Test.txt");

Test 59: 
DirectoryScanner.matchPath("/**/CVS/*", "/, .");

Test 60: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");

Test 61: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
((DirectoryScanner) mockFile).scandir(mockFile, "*A/CV?/**", false);

Test 62: 
DirectoryScanner.match("p*", "path1");
DirectoryScanner.match("p?", "path2");
DirectoryScanner.match("*", "path3");

Test 63: 
DirectoryScanner.matchPath("abcdefg1234567890", "abcdefg1234567890");
DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U");
DirectoryScanner.matchPath("1234567890abcdefg", "1234567890abcdefg");
DirectoryScanner.matchPath("abcdefg", "abcdefg");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:/Windows/System32", "C:/Windows/System32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:/Windows/System32");

Test 64: 
DirectoryScanner.matchPath("p*", "picture");
DirectoryScanner.matchPath("p*", "presentation");
DirectoryScanner.matchPath("p*", "project");

Test 65: 
DirectoryScanner.match("**/CV?", "Invoice");

Test 66: 
DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**");

Test 67: 
DirectoryScanner.match("//home/user/Projects/myproject/CVS/", "//home/user/Projects/myproject/CVS/CVSROOT");

Test 68: 
DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/");

Test 69: 
DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt");

Test 70: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 71: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "C:UsersJohn DoeDocuments";
directoryScanner.setIncludes(stringArray);

Test 72: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 73: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 74: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
directoryScanner.scan();

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("temp_file", "txt");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

Test 76: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "cvd";
MockFile createTempFile = (MockFile)MockFile.createTempFile("cvs-myproject", "cvd");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"cvd").setBasedir((File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getExcludedFiles();
((DirectoryScanner) string).getNotIncludedDirectories();

Test 77: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"/*/CVS/*").setBasedir((File) createTempFile);
String string = "CVS/FileManagerTest.java";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "CVS/FileManagerTest.java";
boolean _boolean = true;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);
String[] stringArray = new String[6];
((DirectoryScanner) string).setIncludes(stringArray);
((DirectoryScanner) string).getExcludedFiles();

Test 78: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "uO {LN(Y8.iN5t~!%";
MockFile createTempFile = (MockFile)MockFile.createTempFile("exampleFile.txt", "uO {LN(Y8.iN5t~!%", (File) null);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
((DirectoryScanner)"uO {LN(Y8.iN5t~!%").setBasedir((File) createTempFile);
String string = "exampleFile2.txt";
String string = "uO {LN(Y8.iN5t~!%";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "*.txt";
boolean _boolean = false;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);

Test 79: 
MockFile mockFile = new MockFile("**/CVS");
String string = "**/CVS";
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"**/CVS").setBasedir((File) mockFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getIncludedFiles();

Test 80: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "CVS";
MockFile createTempFile = (MockFile)MockFile.createTempFile("0", "CVS");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getNotIncludedFiles();

Test 81: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"/*/CVS/*").setBasedir((File) createTempFile);
String string = "unique_file_name1";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
String string = "unique_file_name2";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getNotIncludedFiles();

Test 82: 
MockFile mockFile = new MockFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder");
MockFile.createTempFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedFiles();

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.getIncludedDirectories();
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.getIncludedDirectories();

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.getIncludedDirectories();

Test 85: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "CVS";
MockFile createTempFile = (MockFile)MockFile.createTempFile("project1", "CVS");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"CVS").setBasedir((File) createTempFile);
String string = "project1";
String string = "CVS";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "/tmp/user1/CVS/project1/*/CVS/*";
boolean _boolean = true;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);
String[] stringArray = new String[6];
((DirectoryScanner) string).setIncludes(stringArray);
((DirectoryScanner) string).getNotIncludedDirectories();

Test 86: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();

Test 87: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile mockFile = new MockFile(string, string);
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.addDefaultExcludes();

Test 89: 
MockFile mockFile = new MockFile("example-file1.txt", "example-file2.txt");
MockFile.createTempFile("example-file1.txt", "example-file2.txt", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
String[] stringArray = new String[9];
String string = "*.txt";
boolean _boolean = false;
((DirectoryScanner) mockFile).scandir(mockFile, string, _boolean);

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "example.txt";
stringArray[1] = "subdirectory/example2.txt";
directoryScanner.setExcludes(stringArray);

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getNotIncludedFiles();

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*.txt", "**/*.docx");
directoryScanner.scandir(mockFile, "**/*.*", true);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "**/*";
stringArray[1] = "*/*";
stringArray[2] = "*";
stringArray[3] = "/";
stringArray[4] = ".gitignore";
stringArray[5] = "*.java";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java");
directoryScanner.couldHoldIncluded("src/test/java/com/example/MyTestClass.java");
directoryScanner.couldHoldIncluded("src/main/resources/com/example/config.properties");
directoryScanner.couldHoldIncluded("src/main/webapp/WEB-INF/index.jsp");

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "file1.txt";
stringArray[0] = "directory/subdirectory";
directoryScanner.couldHoldIncluded("file1.txt");
String string = "directory/subdirectory";
directoryScanner.couldHoldIncluded(string);

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:\temp", "my_directory");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\username\\Documents";
directoryScanner.setBasedir(string);
directoryScanner.getBasedir();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getIncludedFiles();

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "directory1";
stringArray[1] = "directory2";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("subdirectory/file.txt");

Test 99: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "**/*.txt";
directoryScanner.isExcluded("R|m");

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "images";
stringArray[1] = "videos";
stringArray[2] = "documents";
stringArray[3] = "audio";
stringArray[4] = "pdf";
stringArray[5] = "txt";
stringArray[6] = "png";
stringArray[7] = "jpg";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("my_image.png");

Test 101: 
String[] stringArray = new String[9];

Test 102: 
DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt");

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();


* Generated after the refinement and before minimization 104 tests with total length 540
* test suite isTestSuite: 104
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 1: 
MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "**/#*#";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
Test 3: 
DirectoryScanner.matchPatternStart("J/cxppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "uM.Pqx";
directoryScanner.includes = stringArray;
MockFile mockFile = new MockFile("uM.Pqx");
MockFile.createTempFile("uM.Pqx", "uM.Pqx", (File) mockFile);
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "uM.Pqx", true);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
DirectoryScanner.matchPath("/**CS/**", "/**CS");
Test 6: 
DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");
Test 7: 
DirectoryScanner.matchPath("/**/CVS/*", "/, [");
Test 8: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
Test 9: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
DirectoryScanner.match("p**", "");
Test 11: 
DirectoryScanner.matchPath("?CVe)*qp].A A,U", "?CVe)*qp].A A,U");
Test 12: 
DirectoryScanner.matchPath("p**", "p");
Test 13: 
DirectoryScanner.match("**/CV?", "I");
Test 14: 
DirectoryScanner.matchPath("///**/C*CS_/**", "//**/CCS_/**");
Test 15: 
DirectoryScanner.match("//**/CVS/**", "///CVS/");
Test 16: 
DirectoryScanner.match("/**/CVS/**", "/7C8]%=");
Test 17: 
DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");
Test 18: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 19: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "//*/kYr/";
directoryScanner.setIncludes(stringArray);
Test 20: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("D#W!e;x4j(&uqj5^*", "D#W!e;x4j(&uqj5^*");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedDirectories();
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getExcludedFiles();
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
stringArray[5] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", false);
Test 27: 
MockFile mockFile = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 28: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 29: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 30: 
MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 33: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getNotIncludedDirectories();
Test 34: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 35: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 37: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "Fn\"Kw-/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getNotIncludedFiles();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*~", "**/*~");
try { 
  directoryScanner.scandir(mockFile, "**/*~", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/**_/*~/**_/*~
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "nXDN)XM*u tY";
stringArray[2] = "nXDN)XM*u tY";
stringArray[3] = "nXDN)XM*u tY";
stringArray[4] = "nXDN)XM*u tY";
stringArray[5] = "nXDN)XM*u tY";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("]~u7");
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
directoryScanner.couldHoldIncluded("n~MnW ir");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "T 7{|m(4u";
stringArray[1] = "T 7{|m(4u";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("?&LJDfK.h@rLrVQd");
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("R|m");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "LY8#ob}/=^>Qy|%z]P";
stringArray[2] = "n9P:8=]`I9 [";
stringArray[3] = "LY8#ob}/=^>Qy|%z]P";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "LY8#ob}/=^>Qy|%z]P";
stringArray[6] = "LY8#ob}/=^>Qy|%z]P";
stringArray[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("0u)Dlz");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "T 7{|m(4u";
stringArray[2] = "8plL!}";
stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[7] = "F-LNRkoWDI*";
stringArray[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");
Test 50: 
DirectoryScanner.matchPatternStart("**/*~", "**/*~");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 53: 
MockFile mockFile = new MockFile("example_input1", "example_input2");
MockFile.createTempFile("example_input1", "example_input2", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();

Test 54: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
((DirectoryScanner)"/*/CVS/*").setBasedir((File) createTempFile);
String string = "/*/CVS/*";
String string = "uO {LN(Y8.iN5t~!%";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();

Test 55: 
DirectoryScanner.matchPatternStart("J/cxppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");

Test 56: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "sample_file1.txt";
MockFile mockFile = new MockFile("sample_file1.txt");
MockFile.createTempFile("sample_file1.txt", "sample_file2.txt", (File) mockFile);
directoryScanner.scandir(mockFile, "sample_file1.txt", true);

Test 57: 
DirectoryScanner.matchPath((String) null, (String) null);

Test 58: 
DirectoryScanner.matchPath("/**/*", "/Users/John Doe/Documents/Test.txt");

Test 59: 
DirectoryScanner.matchPath("/**/CVS/*", "/, .");

Test 60: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");

Test 61: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
((DirectoryScanner) mockFile).scandir(mockFile, "*A/CV?/**", false);

Test 62: 
DirectoryScanner.match("p*", "path1");
DirectoryScanner.match("p?", "path2");
DirectoryScanner.match("*", "path3");

Test 63: 
DirectoryScanner.matchPath("abcdefg1234567890", "abcdefg1234567890");
DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U");
DirectoryScanner.matchPath("1234567890abcdefg", "1234567890abcdefg");
DirectoryScanner.matchPath("abcdefg", "abcdefg");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:WindowsSystem32");
DirectoryScanner.matchPath("C:/Windows/System32", "C:/Windows/System32");
DirectoryScanner.matchPath("C:WindowsSystem32", "C:/Windows/System32");

Test 64: 
DirectoryScanner.matchPath("p*", "picture");
DirectoryScanner.matchPath("p*", "presentation");
DirectoryScanner.matchPath("p*", "project");

Test 65: 
DirectoryScanner.match("**/CV?", "Invoice");

Test 66: 
DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**");

Test 67: 
DirectoryScanner.match("//home/user/Projects/myproject/CVS/", "//home/user/Projects/myproject/CVS/CVSROOT");

Test 68: 
DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/");

Test 69: 
DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt");

Test 70: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

Test 71: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "C:UsersJohn DoeDocuments";
directoryScanner.setIncludes(stringArray);

Test 72: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

Test 73: 
DirectoryScanner directoryScanner = new DirectoryScanner();

Test 74: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
directoryScanner.scan();

Test 75: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("temp_file", "txt");
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();

Test 76: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "cvd";
MockFile createTempFile = (MockFile)MockFile.createTempFile("cvs-myproject", "cvd");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"cvd").setBasedir((File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getExcludedFiles();
((DirectoryScanner) string).getNotIncludedDirectories();

Test 77: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile("CVS/FileManagerTest.java", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"/*/CVS/*").setBasedir((File) createTempFile);
String string = "CVS/FileManagerTest.java";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "CVS/FileManagerTest.java";
boolean _boolean = true;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);
String[] stringArray = new String[6];
((DirectoryScanner) string).setIncludes(stringArray);
((DirectoryScanner) string).getExcludedFiles();

Test 78: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "uO {LN(Y8.iN5t~!%";
MockFile createTempFile = (MockFile)MockFile.createTempFile("exampleFile.txt", "uO {LN(Y8.iN5t~!%", (File) null);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
((DirectoryScanner)"uO {LN(Y8.iN5t~!%").setBasedir((File) createTempFile);
String string = "exampleFile2.txt";
String string = "uO {LN(Y8.iN5t~!%";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "*.txt";
boolean _boolean = false;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);

Test 79: 
MockFile mockFile = new MockFile("**/CVS");
String string = "**/CVS";
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"**/CVS").setBasedir((File) mockFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getIncludedFiles();

Test 80: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "CVS";
MockFile createTempFile = (MockFile)MockFile.createTempFile("0", "CVS");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) string).setBasedir((File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getNotIncludedFiles();

Test 81: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "/*/CVS/*";
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"/*/CVS/*").setBasedir((File) createTempFile);
String string = "unique_file_name1";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
String string = "unique_file_name2";
String string = "/*/CVS/*";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
((DirectoryScanner) string).getNotIncludedFiles();

Test 82: 
MockFile mockFile = new MockFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder");
MockFile.createTempFile("src/test/resources/files/CVS_folder", "src/test/resources/files/CVS_folder", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedFiles();

Test 83: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.getIncludedDirectories();
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.getIncludedDirectories();

Test 84: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.getIncludedDirectories();

Test 85: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
String string = "CVS";
MockFile createTempFile = (MockFile)MockFile.createTempFile("project1", "CVS");
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner)"CVS").setBasedir((File) createTempFile);
String string = "project1";
String string = "CVS";
MockFile.createTempFile(string, string, (File) createTempFile);
((DirectoryScanner) string).scan();
String string = "/tmp/user1/CVS/project1/*/CVS/*";
boolean _boolean = true;
((DirectoryScanner) string).scandir(createTempFile, string, _boolean);
String[] stringArray = new String[6];
((DirectoryScanner) string).setIncludes(stringArray);
((DirectoryScanner) string).getNotIncludedDirectories();

Test 86: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();

Test 87: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile mockFile = new MockFile(string, string);
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();
String string = "//**/CVS/*";
String string = "//**/CVS/*";
MockFile.createTempFile(string, string, (File) mockFile);
((DirectoryScanner) mockFile).addDefaultExcludes();
((DirectoryScanner) mockFile).setBasedir((File) mockFile);
((DirectoryScanner) mockFile).scan();
((DirectoryScanner) mockFile).getExcludedDirectories();

Test 88: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.addDefaultExcludes();

Test 89: 
MockFile mockFile = new MockFile("example-file1.txt", "example-file2.txt");
MockFile.createTempFile("example-file1.txt", "example-file2.txt", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
((DirectoryScanner) mockFile).addDefaultExcludes();
String[] stringArray = new String[9];
String string = "*.txt";
boolean _boolean = false;
((DirectoryScanner) mockFile).scandir(mockFile, string, _boolean);

Test 90: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "example.txt";
stringArray[1] = "subdirectory/example2.txt";
directoryScanner.setExcludes(stringArray);

Test 91: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getNotIncludedFiles();

Test 92: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*.txt", "**/*.docx");
directoryScanner.scandir(mockFile, "**/*.*", true);

Test 93: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "**/*";
stringArray[1] = "*/*";
stringArray[2] = "*";
stringArray[3] = "/";
stringArray[4] = ".gitignore";
stringArray[5] = "*.java";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java");
directoryScanner.couldHoldIncluded("src/test/java/com/example/MyTestClass.java");
directoryScanner.couldHoldIncluded("src/main/resources/com/example/config.properties");
directoryScanner.couldHoldIncluded("src/main/webapp/WEB-INF/index.jsp");

Test 94: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "file1.txt";
stringArray[0] = "directory/subdirectory";
directoryScanner.couldHoldIncluded("file1.txt");
String string = "directory/subdirectory";
directoryScanner.couldHoldIncluded(string);

Test 95: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("C:\temp", "my_directory");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();

Test 96: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String string = "C:\\Users\\username\\Documents";
directoryScanner.setBasedir(string);
directoryScanner.getBasedir();

Test 97: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getIncludedFiles();

Test 98: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "directory1";
stringArray[1] = "directory2";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("subdirectory/file.txt");

Test 99: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "**/*.txt";
directoryScanner.isExcluded("R|m");

Test 100: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "images";
stringArray[1] = "videos";
stringArray[2] = "documents";
stringArray[3] = "audio";
stringArray[4] = "pdf";
stringArray[5] = "txt";
stringArray[6] = "png";
stringArray[7] = "jpg";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("my_image.png");

Test 101: 
String[] stringArray = new String[9];

Test 102: 
DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt");

Test 103: 
DirectoryScanner directoryScanner = new DirectoryScanner();


* Minimizing test suite
* test suite isTestSuite: 49
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt");
Test 3: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "**/*";
stringArray[1] = "*/*";
stringArray[2] = "*";
stringArray[3] = "/";
stringArray[4] = ".gitignore";
stringArray[5] = "*.java";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java");
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
directoryScanner.couldHoldIncluded("n~MnW ir");
Test 5: 
MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
Test 6: 
DirectoryScanner.matchPatternStart("J/cxppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
Test 7: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "directory1";
stringArray[1] = "directory2";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("subdirectory/file.txt");
Test 8: 
DirectoryScanner.matchPath("/**CS/**", "/**CS");
Test 9: 
DirectoryScanner.matchPath("/**/CVS/*", "/, .");
Test 10: 
MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 11: 
DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");
Test 12: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
Test 13: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt");
Test 15: 
DirectoryScanner.match("p**", "");
Test 16: 
DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U");
Test 17: 
DirectoryScanner.matchPath("p**", "p");
Test 18: 
DirectoryScanner.match("**/CV?", "I");
Test 19: 
DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**");
Test 20: 
DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/");
Test 21: 
DirectoryScanner.match("/**/CVS/**", "/7C8]%=");
Test 22: 
DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "Fn\"Kw-/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("temp_file", "txt");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getNotIncludedFiles();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 30: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 31: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getExcludedFiles();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*.txt", "**/*.docx");
try { 
  directoryScanner.scandir(mockFile, "**/*.*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/**_/*.txt/**_/*.docx
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 33: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
stringArray[5] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", false);
Test 34: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 35: 
MockFile mockFile = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 37: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 38: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 39: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getNotIncludedDirectories();
Test 40: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
directoryScanner.getBasedir();
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 44: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("R|m");
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "LY8#ob}/=^>Qy|%z]P";
stringArray[2] = "n9P:8=]`I9 [";
stringArray[3] = "LY8#ob}/=^>Qy|%z]P";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "LY8#ob}/=^>Qy|%z]P";
stringArray[6] = "LY8#ob}/=^>Qy|%z]P";
stringArray[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("0u)Dlz");
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "T 7{|m(4u";
stringArray[2] = "8plL!}";
stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[7] = "F-LNRkoWDI*";
stringArray[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 225
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 307
* Number of covered goals: 305
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 62
* Number of covered goals: 47
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 225
* Generated 49 tests with total length 233
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 61%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("C:UsersJohn Doe");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testNonExistentBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File basedir = directoryScanner.getBasedir();
assertNull(basedir);


** It was a parseable test case! 
refined test name is: testGetBasedirReturnsNullInitially
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("**/sample.txt", "**/sample.txt");
assertTrue(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartWithDoubleAsterisks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[6];
arg0[0] = "**/*";
arg0[1] = "*/*";
arg0[2] = "*";
arg0[3] = "/";
arg0[4] = ".gitignore";
arg0[5] = "*.java";
directoryScanner.setIncludes(arg0);
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("src/main/java/com/example/MyClass.java");
assertFalse(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncludedPathCannotHoldIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
boolean couldHoldIncluded = directoryScanner.couldHoldIncluded("n~MnW ir");
assertTrue(couldHoldIncluded);


** It was a parseable test case! 
refined test name is: testCouldHoldIncludedPatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) arg0);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();

** It was a parseable test case! 
refined test name is: testDirectoryScannerWithMockFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPatternStart = DirectoryScanner.matchPatternStart("J/cxppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
assertFalse(matchPatternStart);


** It was a parseable test case! 
refined test name is: testMatchPatternStartInvalidInputReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[2];
arg0[0] = "directory1";
arg0[1] = "directory2";
directoryScanner.setExcludes(arg0);
boolean excluded = directoryScanner.isExcluded("subdirectory/file.txt");
assertFalse(excluded);


** It was a parseable test case! 
refined test name is: testIsExcludedWithExcludesDirectoryScanner
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**CS/**", "/**CS");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithWildcard
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**/CVS/*", "/, .");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testNonMatchingPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) arg0);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) arg0);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
String[] excludedFiles = directoryScanner.getExcludedFiles();
assertEquals(0, excludedFiles.length);


** It was a parseable test case! 
refined test name is: testScanForNonCvsFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchSpecialCharactersInPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithConsecutiveAsterisks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) arg0);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(arg0, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanDirectoryWithInvalidIncludePattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/path/to/file1.txt", "/path/to/file2.txt");
assertFalse(matchPath);


** It was a parseable test case! 
refined test name is: testFilesWithDifferentAbsolutePathsDoNotMatch
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("p**", "");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchPatternWithEmptyString
* Compiling Tests
refined test name is: testMatchingPatternWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U", "!@#$%^&*()_+-=[]{}|;':\"<>,./?CVe)*qp].A A,U");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithInvalidCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("p**", "p");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithPatternPStarAndPathP
* Compiling Tests
refined test name is: testMatchPathWithPatternAndPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("**/CV?", "I");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchWithWildcardCharactersNoMatch
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("//**/C*CS_/**", "//**/CCS_/**");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathWithWildcards
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("/**/CVS/**", "/home/user/project/CVS/");
assertTrue(match);


** It was a parseable test case! 
refined test name is: testMatchDirectoryWithCVSFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean match = DirectoryScanner.match("/**/CVS/**", "/7C8]%=");
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatch
* Compiling Tests
refined test name is: testMatchreturnsFalseWhenStringDoesNotMatchPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean matchPath = DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");
assertTrue(matchPath);


** It was a parseable test case! 
refined test name is: testMatchPathReturnsTrueForValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);

** It was a parseable test case! 
refined test name is: testScanAllFilesInDirectoryWithoutIncludePatterns
* Compiling Tests
refined test name is: testScanWithNoIncludePatterns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);

** It was a parseable test case! 
refined test name is: testDirectoryScannerWithNullExcludes
* Compiling Tests
refined test name is: testDirectoryScannerWithNullExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[9];
arg0[0] = "nXDN)XM*u tY";
arg0[1] = "Fn\"Kw-/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSetExcludesNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanWithoutBaseDir
* Compiling Tests
refined test name is: testScanWithoutBaseDirThrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
File arg0 = MockFile.createTempFile("temp_file", "txt");
directoryScanner.setBasedir(arg0);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScanWithInvalidBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getNotIncludedFiles();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testDirectoryScannerWhenHaveSlowResults
* Compiling Tests
refined test name is: testGetNotIncludedFilesWhenHaveSlowResultsIsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) arg0);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(0, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testNoDirectoriesAreExcludedFromScanning
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(arg0);
File arg2 = MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(arg2);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", arg2);
directoryScanner.scan();
String[] notIncludedFiles = directoryScanner.getNotIncludedFiles();
assertEquals(1, notIncludedFiles.length);


** It was a parseable test case! 
refined test name is: testNotIncludedFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("**/*.txt", "**/*.docx");
try { 
  directoryScanner.scandir(arg0, "**/*.*", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/**_/*.txt/**_/*.docx
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testScandirWithInvalidWildcards
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(0, includedFiles.length);
assertNotNull(includedFiles);


** It was a parseable test case! 
refined test name is: testGetIncludedFilesEmptyVectorReturnsEmptyArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) arg0);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
String[] includedFiles = directoryScanner.getIncludedFiles();
assertEquals(1, includedFiles.length);


** It was a parseable test case! 
refined test name is: testFindCVSFolder
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> arg0 = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(arg0);
directoryScanner.dirsIncluded = vector;
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertNotNull(includedDirectories);
assertEquals(0, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testGetIncludedDirectoriesEmptyDirsIncludedList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
String[] includedDirectories = directoryScanner.getIncludedDirectories();
assertNotNull(includedDirectories);
assertEquals(1, includedDirectories.length);


** It was a parseable test case! 
refined test name is: testGetIncludedDirectoriesreturnsNonNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) arg0);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) arg0);
directoryScanner.scan();
String[] excludedDirectories = directoryScanner.getExcludedDirectories();
assertEquals(1, excludedDirectories.length);


** It was a parseable test case! 
refined test name is: testDefaultExcludesAreApplied
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();

** It was a parseable test case! 
refined test name is: testAddDefaultExcludes
* Compiling Tests
refined test name is: testAddDefaultExcludes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
File basedir = directoryScanner.getBasedir();
assertEquals(".cvsignore", basedir.getName());


** It was a parseable test case! 
refined test name is: testSetBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile arg0 = new MockFile("", "");
directoryScanner.setBasedir((File) arg0);
File basedir = directoryScanner.getBasedir();
assertSame(basedir, arg0);


** It was a parseable test case! 
refined test name is: testSetBasedir
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
boolean excluded = directoryScanner.isExcluded("R|m");
assertTrue(excluded);


** It was a parseable test case! 
refined test name is: testIsExcludedWithExcludePatternMatchingPath
* Compiling Tests
refined test name is: testIsExcludedWithMatchingExcludePattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[8];
arg0[0] = "LY8#ob}/=^>Qy|%z]P";
arg0[1] = "LY8#ob}/=^>Qy|%z]P";
arg0[2] = "n9P:8=]`I9 [";
arg0[3] = "LY8#ob}/=^>Qy|%z]P";
arg0[4] = "LY8#ob}/=^>Qy|%z]P";
arg0[5] = "LY8#ob}/=^>Qy|%z]P";
arg0[6] = "LY8#ob}/=^>Qy|%z]P";
arg0[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(arg0);
boolean included = directoryScanner.isIncluded("0u)Dlz");
assertFalse(included);


** It was a parseable test case! 
refined test name is: testIsIncludedGivenFileNameNotIncludedReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
String[] arg0 = new String[9];
arg0[0] = "LY8#ob}/=^>Qy|%z]P";
arg0[1] = "T 7{|m(4u";
arg0[2] = "8plL!}";
arg0[3] = "com.lts.lang.classloader.SimpleFileFilter";
arg0[4] = "LY8#ob}/=^>Qy|%z]P";
arg0[5] = "com.lts.lang.classloader.SimpleFileFilter";
arg0[6] = "com.lts.lang.classloader.SimpleFileFilter";
arg0[7] = "F-LNRkoWDI*";
arg0[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(arg0);
boolean included = directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");
assertTrue(included);


** It was a parseable test case! 
refined test name is: testScanMethodWithFilterClassesIncluded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}


** It was a parseable test case! 
refined test name is: testSlowScanThrowsNullPointerException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.178 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.196 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.233 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.267 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.267 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:46:44.313 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.353 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
[MASTER] 10:46:44.412 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.460 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.460 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.504 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.505 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.544 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.582 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.583 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.630 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.631 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.671 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.718 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.719 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.771 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.812 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.812 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:44.861 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.896 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.897 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:44.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:44.964 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:44.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.003 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.004 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.034 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.035 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.075 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.121 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.122 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.164 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.207 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.207 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.254 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.304 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.353 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.399 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.400 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.459 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.460 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.511 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.553 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.554 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.595 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.596 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
[MASTER] 10:46:45.646 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.647 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.695 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.743 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.843 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.844 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.892 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.893 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:45.932 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.935 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:46:45.968 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:45.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:46:46.004 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:46.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:46:46.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:46.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
[MASTER] 10:46:46.102 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:46.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 15 called: 0 to improve: false
** Write a test suite: 17 called: 1 to improve: false
** Write a test suite: 21 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
** Write a test suite: 24 called: 4 to improve: false
** Write a test suite: 26 called: 5 to improve: false
** Write a test suite: 28 called: 6 to improve: false
** Write a test suite: 37 called: 7 to improve: false
** Write a test suite: 40 called: 8 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:46:46.652 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:46.653 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 15 called: 2 to improve: false
** Write a test suite: 17 called: 3 to improve: false
** Write a test suite: 19 called: 4 to improve: false
** Write a test suite: 20 called: 5 to improve: false
** Write a test suite: 22 called: 6 to improve: false
** Write a test suite: 26 called: 7 to improve: false
** Write a test suite: 28 called: 8 to improve: false
[MASTER] 10:46:47.143 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:46:47.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
[MASTER] 10:46:48.017 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 52
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 1: 
MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[4];
stringArray[0] = "**/#*#";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
Test 3: 
DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "uM.Pqx";
directoryScanner.includes = stringArray;
MockFile mockFile = new MockFile("uM.Pqx");
MockFile.createTempFile("uM.Pqx", "uM.Pqx", (File) mockFile);
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "uM.Pqx", true);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
DirectoryScanner.matchPath("/**CS/**", "/**CS");
Test 6: 
DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");
Test 7: 
DirectoryScanner.matchPath("/**/CVS/*", "/, [");
Test 8: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
Test 9: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
DirectoryScanner.match("p**", "");
Test 11: 
DirectoryScanner.matchPath("?CVe)*qp].A A,U", "?CVe)*qp].A A,U");
Test 12: 
DirectoryScanner.matchPath("p**", "p");
Test 13: 
DirectoryScanner.match("**/CV?", "I");
Test 14: 
DirectoryScanner.matchPath("///**/C*CS_/**", "//**/CCS_/**");
Test 15: 
DirectoryScanner.match("//**/CVS/**", "///CVS/");
Test 16: 
DirectoryScanner.match("/**/CVS/**", "/7C8]%=");
Test 17: 
DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");
Test 18: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 19: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "//*/kYr/";
directoryScanner.setIncludes(stringArray);
Test 20: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 21: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("D#W!e;x4j(&uqj5^*", "D#W!e;x4j(&uqj5^*");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getExcludedFiles();
directoryScanner.getNotIncludedDirectories();
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getExcludedFiles();
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
stringArray[5] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", false);
Test 27: 
MockFile mockFile = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 28: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 29: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 30: 
MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 32: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 33: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getNotIncludedDirectories();
Test 34: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 35: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 37: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 38: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "Fn\"Kw-/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 39: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getNotIncludedFiles();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*~", "**/*~");
try { 
  directoryScanner.scandir(mockFile, "**/*~", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/**_/*~/**_/*~
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "nXDN)XM*u tY";
stringArray[2] = "nXDN)XM*u tY";
stringArray[3] = "nXDN)XM*u tY";
stringArray[4] = "nXDN)XM*u tY";
stringArray[5] = "nXDN)XM*u tY";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("]~u7");
Test 42: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
directoryScanner.couldHoldIncluded("n~MnW ir");
Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 46: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "T 7{|m(4u";
stringArray[1] = "T 7{|m(4u";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("?&LJDfK.h@rLrVQd");
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("R|m");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "LY8#ob}/=^>Qy|%z]P";
stringArray[2] = "n9P:8=]`I9 [";
stringArray[3] = "LY8#ob}/=^>Qy|%z]P";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "LY8#ob}/=^>Qy|%z]P";
stringArray[6] = "LY8#ob}/=^>Qy|%z]P";
stringArray[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("0u)Dlz");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "T 7{|m(4u";
stringArray[2] = "8plL!}";
stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[7] = "F-LNRkoWDI*";
stringArray[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");
Test 50: 
DirectoryScanner.matchPatternStart("**/*~", "**/*~");
Test 51: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
[MASTER] 10:46:56.847 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 51
Test 0: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir("&");
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir does not exist
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 1: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.getBasedir();
Test 2: 
DirectoryScanner.matchPatternStart("**/*~", "**/*~");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("uO {LN(Y8.iN5t~!%", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 4: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "n~MnW ir";
directoryScanner.includes = stringArray;
directoryScanner.couldHoldIncluded("n~MnW ir");
Test 5: 
MockFile mockFile = new MockFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*");
MockFile.createTempFile(";**?`k/CV;YS/1*", ";**?`k/CV;YS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = ";**?`k/CV;YS/1*";
stringArray[1] = ";**?`k/CV;YS/1*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
Test 6: 
DirectoryScanner.matchPatternStart("J/cx\\ppf ;h<*", "Jx*A[;y)vrd;|S5),s-Z");
Test 7: 
DirectoryScanner.matchPath("/**/*", "/uO {LN(Y8.iN5t~!%");
Test 8: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[3];
stringArray[0] = "uM.Pqx";
directoryScanner.includes = stringArray;
MockFile mockFile = new MockFile("uM.Pqx");
MockFile.createTempFile("uM.Pqx", "uM.Pqx", (File) mockFile);
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "uM.Pqx", true);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
DirectoryScanner.matchPath("/**CS/**", "/**CS");
Test 10: 
DirectoryScanner.matchPath("//**/CVS/**/**/CVS", "//**/CVS/**/**/CVS");
Test 11: 
MockFile mockFile = new MockFile("/**?`k/CVS/1*", "/**?`k/CVS/1*");
MockFile.createTempFile("/**?`k/CVS/1*", "/**?`k/CVS/1*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.addDefaultExcludes();
directoryScanner.scan();
directoryScanner.getExcludedFiles();
Test 12: 
DirectoryScanner.matchPath("/**/CVS/*", "/, [");
Test 13: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
DirectoryScanner.match("p**", "");
Test 15: 
DirectoryScanner.matchPath("?CVe)*qp].A A,U", "?CVe)*qp].A A,U");
Test 16: 
DirectoryScanner.matchPath("p**", "p");
Test 17: 
DirectoryScanner.match("**/CV?", "I");
Test 18: 
DirectoryScanner.matchPath("///**/C*CS_/**", "//**/CCS_/**");
Test 19: 
DirectoryScanner.match("//**/CVS/**", "///CVS/");
Test 20: 
DirectoryScanner.match("/**/CVS/**", "/7C8]%=");
Test 21: 
DirectoryScanner.matchPath("/*CV?PCV?0*C>?", "/*CV?PCV?0*C>?");
Test 22: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setIncludes((String[]) null);
Test 23: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[1];
stringArray[0] = "//*/kYr/";
directoryScanner.setIncludes(stringArray);
Test 24: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setExcludes((String[]) null);
Test 25: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[2];
stringArray[0] = "T 7{|m(4u";
stringArray[1] = "T 7{|m(4u";
directoryScanner.setExcludes(stringArray);
directoryScanner.isExcluded("?&LJDfK.h@rLrVQd");
Test 26: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "Fn\"Kw-/";
// Undeclared exception!
try { 
  directoryScanner.setExcludes(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 27: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // No basedir set
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 28: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile createTempFile = (MockFile)MockFile.createTempFile("D#W!e;x4j(&uqj5^*", "D#W!e;x4j(&uqj5^*");
directoryScanner.setBasedir((File) createTempFile);
// Undeclared exception!
try { 
  directoryScanner.scan();
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // basedir is not a directory
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 29: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.haveSlowResults = true;
// Undeclared exception!
try { 
  directoryScanner.getNotIncludedFiles();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getExcludedFiles();
Test 31: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("**/*~", "**/*~");
try { 
  directoryScanner.scandir(mockFile, "**/*~", true);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // IO error scanning directory /home/roham/Results-Utestgen/dataset/SF110-new-res/78_caloriecount/**_/*~/**_/*~
   //
   verifyException("com.lts.io.DirectoryScanner", e);
}

Test 32: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "\u0000BPwIJ7^OUB$k~AgVc";
stringArray[5] = "/*/CVS/*";
directoryScanner.includes = stringArray;
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "uO {LN(Y8.iN5t~!%", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", false);
Test 33: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
directoryScanner.filesIncluded = vector;
directoryScanner.getIncludedFiles();
Test 34: 
MockFile mockFile = new MockFile("**/CVS");
MockFile.createTempFile("**/CVS", "**/CVS", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getIncludedFiles();
Test 35: 
DirectoryScanner directoryScanner = new DirectoryScanner();
LinkedList<Object> linkedList = new LinkedList<Object>();
Vector<Object> vector = new Vector<Object>(linkedList);
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 36: 
DirectoryScanner directoryScanner = new DirectoryScanner();
Vector<String> vector = new Vector<String>();
vector.add("com.lts.io.DirectoryScanner");
directoryScanner.dirsIncluded = vector;
directoryScanner.getIncludedDirectories();
Test 37: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedDirectories();
Test 38: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
MockFile.createTempFile("/*/CVS/*", "/*/CVS/*", (File) createTempFile);
directoryScanner.scan();
directoryScanner.scandir(createTempFile, "/*/CVS/*", true);
String[] stringArray = new String[6];
stringArray[0] = "/*/CVS/*";
stringArray[1] = "/*/CVS/*";
stringArray[2] = "/*/CVS/*";
stringArray[3] = "/*/CVS/*";
stringArray[4] = "/*/CVS/*";
stringArray[5] = "/*/CVS/*";
directoryScanner.setIncludes(stringArray);
directoryScanner.getNotIncludedDirectories();
Test 39: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 40: 
MockFile mockFile = new MockFile("//**/CVS/*", "//**/CVS/*");
MockFile.createTempFile("//**/CVS/*", "//**/CVS/*", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
directoryScanner.setBasedir((File) mockFile);
directoryScanner.scan();
directoryScanner.getExcludedDirectories();
Test 41: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
directoryScanner.excludes = stringArray;
directoryScanner.addDefaultExcludes();
Test 42: 
MockFile mockFile = new MockFile("*A/CV?/**", "*A/CV?/**");
MockFile.createTempFile("*A/CV?/**", "*A/CV?/**", (File) mockFile);
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.addDefaultExcludes();
String[] stringArray = new String[9];
stringArray[0] = "*A/CV?/**";
directoryScanner.includes = stringArray;
// Undeclared exception!
try { 
  directoryScanner.scandir(mockFile, "*A/CV?/**", false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[6];
stringArray[0] = "nXDN)XM*u tY";
stringArray[1] = "nXDN)XM*u tY";
stringArray[2] = "nXDN)XM*u tY";
stringArray[3] = "nXDN)XM*u tY";
stringArray[4] = "nXDN)XM*u tY";
stringArray[5] = "nXDN)XM*u tY";
directoryScanner.setIncludes(stringArray);
directoryScanner.couldHoldIncluded("]~u7");
Test 44: 
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir(".cvsignore");
directoryScanner.getBasedir();
Test 45: 
DirectoryScanner directoryScanner = new DirectoryScanner();
MockFile mockFile = new MockFile("", "");
directoryScanner.setBasedir((File) mockFile);
directoryScanner.getBasedir();
Test 46: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/tmp/*/CVS/*0/*/CVS/*");
FileSystemHandling.createFolder(evoSuiteFile);
MockFile createTempFile = (MockFile)MockFile.createTempFile("/*/CVS/*", "/*/CVS/*");
DirectoryScanner directoryScanner = new DirectoryScanner();
directoryScanner.setBasedir((File) createTempFile);
directoryScanner.scan();
directoryScanner.getNotIncludedFiles();
Test 47: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "R|m";
directoryScanner.excludes = stringArray;
directoryScanner.isExcluded("R|m");
Test 48: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[8];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "LY8#ob}/=^>Qy|%z]P";
stringArray[2] = "n9P:8=]`I9 [";
stringArray[3] = "LY8#ob}/=^>Qy|%z]P";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "LY8#ob}/=^>Qy|%z]P";
stringArray[6] = "LY8#ob}/=^>Qy|%z]P";
stringArray[7] = "LY8#ob}/=^>Qy|%z]P";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("0u)Dlz");
Test 49: 
DirectoryScanner directoryScanner = new DirectoryScanner();
String[] stringArray = new String[9];
stringArray[0] = "LY8#ob}/=^>Qy|%z]P";
stringArray[1] = "T 7{|m(4u";
stringArray[2] = "8plL!}";
stringArray[3] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[4] = "LY8#ob}/=^>Qy|%z]P";
stringArray[5] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[6] = "com.lts.lang.classloader.SimpleFileFilter";
stringArray[7] = "F-LNRkoWDI*";
stringArray[8] = "%L+FY(X2BH_s/KhI";
directoryScanner.setIncludes(stringArray);
directoryScanner.isIncluded("com.lts.lang.classloader.SimpleFileFilter");
Test 50: 
DirectoryScanner directoryScanner = new DirectoryScanner();
// Undeclared exception!
try { 
  directoryScanner.slowScan();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 225
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 307
* Number of covered goals: 305
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 62
* Number of covered goals: 47
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 232
* Number of covered goals: 225
* Generated 51 tests with total length 251
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:46:56.996 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 10:47:06.694 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:47:08.757 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:08.758 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:08.794 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:08.794 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:47:08.828 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:08.829 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:08.873 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:47:08.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:08.917 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:08.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:08.964 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:08.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.014 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.014 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.087 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.088 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.142 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.198 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.239 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.240 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.282 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.322 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.377 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.378 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.414 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.452 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.492 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:47:09.532 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.570 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.570 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.650 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.701 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.704 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.745 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.746 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.834 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.877 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.922 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:09.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:09.966 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:47:09.967 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.011 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.056 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.102 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.146 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.147 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.192 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.238 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.282 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.334 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.383 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.385 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.428 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.429 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.482 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:47:10.528 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.529 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.571 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.618 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:47:10.664 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.665 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.710 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.759 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:47:10.801 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:10.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
[MASTER] 10:47:11.702 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:11.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
[MASTER] 10:47:13.211 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7688505530902737500.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:47:13.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7688505530902737500.jar
* Writing tests to file
[MASTER] 10:47:13.215 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'DirectoryScanner_ESTest' to evosuite-tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 15 called: 2 to improve: false
** Write a test suite: 17 called: 3 to improve: false
** Write a test suite: 19 called: 4 to improve: false
** Write a test suite: 20 called: 5 to improve: false
** Write a test suite: 22 called: 6 to improve: false
** Write a test suite: 26 called: 7 to improve: false
** Write a test suite: 28 called: 8 to improve: false
* Writing JUnit test case 'DirectoryScanner_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
* Done!

* Computation finished
