* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: Newzgrabber.BatchDriver
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/99_newzgrabber/evosuite-files/evosuite.properties
* Connecting to master process on port 20533
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class Newzgrabber.BatchDriver
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 171
* Using seed 1709823662771
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 47 / 171
[Progress:>                             0%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:=========>                    32%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  37%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:=============>                44%] [Cov:=========>                         28%][Progress:=============>                44%] [Cov:=========>                         28%][Progress:=============>                44%] [Cov:=========>                         28%][Progress:=============>                44%] [Cov:=========>                         28%][Progress:=============>                44%] [Cov:=========>                         28%][Progress:=============>                44%] [Cov:=========>                         28%][Progress:==============>               49%] [Cov:=========>                         28%][Progress:================>             54%] [Cov:=========>                         28%][Progress:================>             54%] [Cov:=========>                         28%][Progress:================>             54%] [Cov:=========>                         28%][Progress:=================>            59%] [Cov:=========>                         28%][Progress:=================>            59%] [Cov:=========>                         28%][Progress:=================>            59%] [Cov:=========>                         28%][Progress:=================>            59%] [Cov:=========>                         28%][Progress:===================>          64%] [Cov:=========>                         28%][Progress:====================>         69%] [Cov:=========>                         28%][Progress:======================>       74%] [Cov:=========>                         28%][Progress:======================>       74%] [Cov:=========>                         28%][Progress:======================>       74%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:===========================>  90%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:============================> 96%] [Cov:=========>                         28%][Progress:==============================100%] [Cov:=========>                         28%]
* Search finished after 101s and 102 generations, 26766 statements, best individual has fitness: 135.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 9%
* Total number of goals: 32
* Number of covered goals: 3
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 90
* Number of covered goals: 24
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 13
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 9%
* Total number of goals: 32
* Number of covered goals: 3
* Generated 3 tests with total length 12
* Resulting test suite's coverage: 29% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'BatchDriver_ESTest' to evosuite-tests
* Done!

* Computation finished
