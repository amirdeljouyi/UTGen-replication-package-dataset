* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: Newzgrabber.Downloader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/99_newzgrabber/evosuite-files/evosuite.properties
* Connecting to master process on port 20986
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:03:05.032 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:03:05.041 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:03:05.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:03:05.254 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:03:05.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:03:05.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:03:08.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:03:08.735 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:03:08.736 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:03:08.737 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:03:08.738 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:03:08.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:03:08.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:03:08.742 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:03:08.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 05:03:08.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 05:03:08.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class Newzgrabber.Downloader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 905
* Using seed 1710478978475
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 91 / 905
[Progress:>                             0%] [Cov:============>                      37%][Progress:=>                            5%] [Cov:=============>                     39%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:======>                       21%] [Cov:===============>                   44%][Progress:======>                       23%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=========>                    31%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:===========>                  39%] [Cov:================>                  46%][Progress:==============>               47%] [Cov:================>                  46%][Progress:==============>               49%] [Cov:================>                  46%][Progress:=================>            59%] [Cov:================>                  46%][Progress:==================>           63%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        73%] [Cov:================>                  46%][Progress:=====================>        73%] [Cov:================>                  46%][Progress:=====================>        73%] [Cov:================>                  46%][Progress:======================>       74%] [Cov:================>                  46%][Progress:======================>       76%] [Cov:================>                  46%][Progress:=======================>      79%] [Cov:================>                  46%][Progress:========================>     81%] [Cov:================>                  46%][Progress:========================>     81%] [Cov:================>                  46%][Progress:=========================>    84%] [Cov:================>                  46%][Progress:=========================>    84%] [Cov:================>                  46%][Progress:=========================>    84%] [Cov:================>                  46%][Progress:=========================>    84%] [Cov:================>                  46%][Progress:==========================>   89%] [Cov:================>                  46%][Progress:==========================>   89%] [Cov:================>                  46%][Progress:==========================>   89%] [Cov:================>                  46%][Progress:==========================>   89%] [Cov:================>                  46%][Progress:==========================>   89%] [Cov:================>                  46%][Progress:==========================>   89%] [Cov:================>                  46%][Progress:===========================>  90%] [Cov:================>                  46%][Progress:===========================>  90%] [Cov:================>                  46%][Progress:===========================>  92%] [Cov:================>                  46%][Progress:============================> 95%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%]
* Search finished after 207s and 51 generations, 22082 statements, best individual has fitness: 754.0
* Generated before the refinement 23 tests with total length 65
statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: org.evosuite.testcase.statements.ArrayStatement@1fd7f16a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[1]
statement is: setDownloadData([Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setDownloadData(arg0)
test data is: Downloader downloader = new Downloader();
Object[] objectArray = new Object[1];
downloader.setDownloadData(objectArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        Object[] objectArray = new Object[1];
        objectArray[0] = "https://www.example.com";// URL for downloading data

        downloader.setDownloadData(objectArray);
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object[] objectArray = new Object[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: Object[] objectArray = new Object[1] isAssignment: false Array: new Object[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = "https://www.example.com"// URL for downloading data
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"https://www.example.com" Ct is: objectArray[0] = "https://www.example.com"// URL for downloading data

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: downloader.setDownloadData(objectArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setDownloadData(objectArray) target is: downloader method is: setDownloadData(java.lang.Object[])
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setDownloadData([Ljava/lang/Object;)V
TestCase is: Downloader downloader = new Downloader();
Object[] objectArray = new Object[1];
downloader.setDownloadData(objectArray);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setTableIndex(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setTableIndex(300)
test data is: Downloader downloader = new Downloader();
downloader.setTableIndex(300);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setTableIndex(123456789);// Improved test data: using a more descriptive value for the table index }}

    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setTableIndex(123456789)// Improved test data: using a more descriptive value for the table index }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setTableIndex(123456789)// Improved test data: using a more descriptive value for the table index }}
 target is: downloader method is: setTableIndex(int)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setTableIndex(I)V
TestCase is: Downloader downloader = new Downloader();
int _int = 123456789;
downloader.setTableIndex(_int);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setServer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setServer((String) null)
test data is: Downloader downloader = new Downloader();
downloader.setServer((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        // Set server URL to a valid value
        downloader.setServer("https://www.example.com");
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set server URL to a valid value
downloader.setServer("https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set server URL to a valid value
downloader.setServer("https://www.example.com") target is: downloader method is: setServer(java.lang.String)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setServer(Ljava/lang/String;)V
TestCase is: Downloader downloader = new Downloader();
String string = "https://www.example.com";
downloader.setServer(string);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setTitle(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setTitle("=ZM")
test data is: Downloader downloader = new Downloader();
downloader.setTitle("=ZM");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setTitle("The Last of Us Remastered");
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setTitle("The Last of Us Remastered"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setTitle("The Last of Us Remastered") target is: downloader method is: setTitle(java.lang.String)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setTitle(Ljava/lang/String;)V
TestCase is: Downloader downloader = new Downloader();
String string = "The Last of Us Remastered";
downloader.setTitle(string);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setUsername(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setUsername((String) null)
test data is: Downloader downloader = new Downloader();
downloader.setUsername((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setUsername("John Doe");
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setUsername("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setUsername("John Doe") target is: downloader method is: setUsername(java.lang.String)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setUsername(Ljava/lang/String;)V
TestCase is: Downloader downloader = new Downloader();
String string = "John Doe";
downloader.setUsername(string);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: getGroup()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String group = downloader.getGroup()
test data is: Downloader downloader = new Downloader();
downloader.getGroup();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        int groupSize = 10;// A more descriptive and representative value for the group size.

        String groupName = "Team 1";// A more descriptive and representative name for the group.

        downloader.getGroup(groupSize, groupName);
    }
}
statement is: // Improved test data:
int groupSize = 10// A more descriptive and representative value for the group size.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String groupName = "Team 1"// A more descriptive and representative name for the group.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: downloader.getGroup(groupSize, groupName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.getGroup(groupSize, groupName) target is: downloader method is: getGroup(int,java.lang.String)
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "Team 1"
TestCase is: int _int = 10;
String string = "Team 1";

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: getTotalLines()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long totalLines = downloader.getTotalLines()
test data is: Downloader downloader = new Downloader();
downloader.getTotalLines();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setFile("example_file.txt");
        downloader.setUrl("https://www.example.com/file.txt");
        downloader.setUserAgent("Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.1) Gecko/20071127 Firefox/2.0.0.1");
        int totalLines = downloader.getTotalLines();
        assertEquals(totalLines, 10);// number of lines in the file }}

    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setFile("example_file.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setFile("example_file.txt") target is: downloader method is: setFile(java.lang.String)
statement is: downloader.setUrl("https://www.example.com/file.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setUrl("https://www.example.com/file.txt") target is: downloader method is: setUrl(java.lang.String)
statement is: downloader.setUserAgent("Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.1) Gecko/20071127 Firefox/2.0.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setUserAgent("Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.1) Gecko/20071127 Firefox/2.0.0.1") target is: downloader method is: setUserAgent(java.lang.String)
statement is: int totalLines = downloader.getTotalLines(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.getTotalLines() target is: downloader method is: getTotalLines()
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: getTotalLines()J
statement is: assertEquals(totalLines, 10)// number of lines in the file }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(totalLines, 10)// number of lines in the file }}
 target is:  method is: assertEquals(int,int)
TestCase is: Downloader downloader = new Downloader();
downloader.getTotalLines();

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setTimeout(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setTimeout(0)
statement is: getTimeout()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int timeout = downloader.getTimeout()
test data is: Downloader downloader = new Downloader();
downloader.setTimeout(0);
downloader.getTimeout();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setTimeout(10000);
        downloader.getTimeout();
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setTimeout(10000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setTimeout(10000) target is: downloader method is: setTimeout(int)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setTimeout(I)V
statement is: downloader.getTimeout(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.getTimeout() target is: downloader method is: getTimeout()
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: getTimeout()I
TestCase is: Downloader downloader = new Downloader();
int _int = 10000;
downloader.setTimeout(_int);
downloader.getTimeout();

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setPassword(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setPassword("Authenticating username and password")
test data is: Downloader downloader = new Downloader();
downloader.setPassword("Authenticating username and password");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setPassword("Authenticating1234!");
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setPassword("Authenticating1234!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setPassword("Authenticating1234!") target is: downloader method is: setPassword(java.lang.String)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setPassword(Ljava/lang/String;)V
TestCase is: Downloader downloader = new Downloader();
String string = "Authenticating1234!";
downloader.setPassword(string);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: setDownloadDirectory(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: downloader.setDownloadDirectory((File) null)
test data is: Downloader downloader = new Downloader();
downloader.setDownloadDirectory((File) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.setDownloadDirectory(new File("path/to/download/directory"));
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.setDownloadDirectory(new File("path/to/download/directory")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.setDownloadDirectory(new File("path/to/download/directory")) target is: downloader method is: setDownloadDirectory(File)
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: setDownloadDirectory(Ljava/io/File;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Downloader downloader = new Downloader();
File file = null;
downloader.setDownloadDirectory(file);

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: getTimeout()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int timeout = downloader.getTimeout()
test data is: Downloader downloader = new Downloader();
downloader.getTimeout();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Downloader downloader = new Downloader();
        downloader.getTimeout();
        // Improved test data
        int timeout = 10;// milliseconds

        String url = "https://www.example.com";
        // Call the method with the improved test data
        downloader.getTimeout(timeout, url);
    }
}
statement is: Downloader downloader = new Downloader(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: downloader.getTimeout(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: downloader.getTimeout() target is: downloader method is: getTimeout()
source statement: Newzgrabber.Downloader()V callee: VariableReference: Statement 0, type Newzgrabber.Downloaderindex is: 0
Matched Method is: getTimeout()I
statement is: // Improved test data
int timeout = 10// milliseconds
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String url = "https://www.example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Call the method with the improved test data
downloader.getTimeout(timeout, url), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Call the method with the improved test data
downloader.getTimeout(timeout, url) target is: downloader method is: getTimeout(int,java.lang.String)
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "https://www.example.com"
TestCase is: Downloader downloader = new Downloader();
downloader.getTimeout();
int _int = 10;
String string = "https://www.example.com";

statement is: Newzgrabber.Downloader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Newzgrabber.Downloader
statement code is: Downloader downloader = new Downloader()
statement is: getBaseMessageId()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long baseMessageId = downloader.getBaseMessageId()
test data is: Downloader downloader = new Downloader();
downloader.getBaseMessageId();

