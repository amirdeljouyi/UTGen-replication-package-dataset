* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: dsachat.server.Handler
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/12_dsachat/evosuite-files/evosuite.properties
* Connecting to master process on port 20501
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:15:55.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:15:55.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:15:55.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:15:55.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:15:55.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:15:55.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class dsachat.server.Handler
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 386
* Using seed 1710173753058
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 79 / 386
[Progress:>                             0%] [Cov:=================>                 49%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                54%][Progress:>                             3%] [Cov:===================>               56%][Progress:>                             3%] [Cov:===================>               56%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:==>                           7%] [Cov:===================>               57%][Progress:==>                           7%] [Cov:===================>               57%][Progress:==>                           8%] [Cov:===================>               57%][Progress:==>                           8%] [Cov:===================>               57%][Progress:==>                           9%] [Cov:===================>               57%][Progress:===>                          10%] [Cov:===================>               57%][Progress:===>                          10%] [Cov:===================>               57%][Progress:===>                          11%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:====>                         14%] [Cov:===================>               57%][Progress:====>                         14%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:=====>                        17%] [Cov:===================>               57%][Progress:=====>                        17%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:========>                     27%] [Cov:===================>               57%][Progress:========>                     27%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    31%] [Cov:===================>               57%][Progress:=========>                    31%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:==========>                   34%] [Cov:===================>               57%][Progress:==========>                   34%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:===========>                  37%] [Cov:===================>               57%][Progress:===========>                  37%] [Cov:===================>               57%][Progress:===========>                  37%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  39%] [Cov:===================>               57%][Progress:===========>                  39%] [Cov:===================>               57%][Progress:============>                 40%] [Cov:===================>               57%][Progress:============>                 40%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 42%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:===================>               57%][Progress:=============>                44%] [Cov:===================>               57%][Progress:=============>                44%] [Cov:===================>               57%][Progress:=============>                45%] [Cov:===================>               57%][Progress:=============>                45%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%]
* Search finished after 201s and 222 generations, 84719 statements, best individual has fitness: 269.0
* Generated before the refinement 7 tests with total length 35
statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: dsachat.server.net.SecServer(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.net.SecServer
statement code is: SecServer secServer = new SecServer(arg0)
statement is: addConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.addConnection(arg0)
statement is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.removeConnection(arg0)
test data is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
handler.removeConnection(secServer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Handler handler = new Handler();
        MockSocket mockSocket = new MockSocket("127.0.0.1", 80);
        SecServer secServer = new SecServer(mockSocket, "username", "password");
        handler.addConnection(secServer);
        handler.removeConnection(secServer);
    }
}
statement is: Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket("127.0.0.1", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecServer secServer = new SecServer(mockSocket, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.addConnection(secServer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(secServer) target is: handler method is: addConnection(SecServer)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: addConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: handler.removeConnection(secServer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.removeConnection(secServer) target is: handler method is: removeConnection(SecServer)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Handler handler = new Handler();
SecServer secServer = null;
handler.addConnection(secServer);
SecServer secServer = null;
handler.removeConnection(secServer);

statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.removeConnection((ConnectionEndpoint) null)
test data is: Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Handler handler = new Handler();
        ConnectionEndpoint endpoint1 = new ConnectionEndpoint("127.0.0.1", 80);
        ConnectionEndpoint endpoint2 = new ConnectionEndpoint("localhost", 8080);
        ConnectionEndpoint endpoint3 = new ConnectionEndpoint("example.com", 443);
        handler.addConnection(endpoint1);
        handler.addConnection(endpoint2);
        handler.removeConnection(endpoint3);
    }
}
statement is: Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionEndpoint endpoint1 = new ConnectionEndpoint("127.0.0.1", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionEndpoint endpoint2 = new ConnectionEndpoint("localhost", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionEndpoint endpoint3 = new ConnectionEndpoint("example.com", 443), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.addConnection(endpoint1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(endpoint1) target is: handler method is: addConnection(ConnectionEndpoint)
statement is: handler.addConnection(endpoint2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(endpoint2) target is: handler method is: addConnection(ConnectionEndpoint)
statement is: handler.removeConnection(endpoint3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.removeConnection(endpoint3) target is: handler method is: removeConnection(ConnectionEndpoint)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Handler handler = new Handler();
ConnectionEndpoint connectionEndpoint = null;
handler.removeConnection(connectionEndpoint);

statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: dsachat.client.net.SecClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.client.net.SecClient
statement code is: SecClient secClient = new SecClient()
statement is: addConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.addConnection(arg0)
statement is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.removeConnection(arg0)
test data is: Handler handler = new Handler();
SecClient secClient = new SecClient();
handler.addConnection(secClient);
handler.removeConnection(secClient);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Handler handler = new Handler();
        SecClient secClient1 = new SecClient("John", 25, "USA");
        SecClient secClient2 = new SecClient("Jane", 30, "Canada");
        handler.addConnection(secClient1);
        handler.removeConnection(secClient1);
        handler.addConnection(secClient2);
        handler.removeConnection(secClient2);
    }
}
statement is: // Improved test data
Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecClient secClient1 = new SecClient("John", 25, "USA"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecClient secClient2 = new SecClient("Jane", 30, "Canada"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.addConnection(secClient1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(secClient1) target is: handler method is: addConnection(SecClient)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: addConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: handler.removeConnection(secClient1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.removeConnection(secClient1) target is: handler method is: removeConnection(SecClient)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: handler.addConnection(secClient2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(secClient2) target is: handler method is: addConnection(SecClient)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: addConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: handler.removeConnection(secClient2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.removeConnection(secClient2) target is: handler method is: removeConnection(SecClient)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: removeConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Handler handler = new Handler();
SecClient secClient = null;
handler.addConnection(secClient);
SecClient secClient = null;
handler.removeConnection(secClient);
SecClient secClient = null;
handler.addConnection(secClient);
SecClient secClient = null;
handler.removeConnection(secClient);

statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: dsachat.server.net.SecServer(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.net.SecServer
statement code is: SecServer secServer = new SecServer(arg0)
statement is: dsachat.share.UserEvent(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.share.UserEvent
statement code is: UserEvent userEvent = new UserEvent(true, "0/-2")
statement is: dsachat.share.InputEvent(Ldsachat/share/ConnectionEndpoint;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.share.InputEvent
statement code is: InputEvent inputEvent = new InputEvent(arg0, arg1)
statement is: handleInput(Ldsachat/share/InputEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.handleInput(arg0)
test data is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Handler handler = new Handler();
        MockSocket mockSocket = new MockSocket();
        SecServer secServer = new SecServer(mockSocket);
        UserEvent userEvent = new UserEvent(true, "0/-2");// Modified to include a more descriptive value for the 'success' parameter

        InputEvent inputEvent = new InputEvent(secServer, userEvent);
        handler.handleInput(inputEvent);
    }
}
statement is: Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecServer secServer = new SecServer(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserEvent userEvent = new UserEvent(true, "0/-2")// Modified to include a more descriptive value for the 'success' parameter
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InputEvent inputEvent = new InputEvent(secServer, userEvent), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.handleInput(inputEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.handleInput(inputEvent) target is: handler method is: handleInput(InputEvent)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: handleInput(Ldsachat/share/InputEvent;)V
TestCase is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
boolean _boolean = true;
String string = "0/-2";
UserEvent userEvent = new UserEvent(_boolean, string);
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: dsachat.server.net.SecServer(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.net.SecServer
statement code is: SecServer secServer = new SecServer(arg0)
statement is: dsachat.share.InputEvent(Ldsachat/share/ConnectionEndpoint;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.share.InputEvent
statement code is: InputEvent inputEvent = new InputEvent(arg0, "/getheros")
statement is: handleInput(Ldsachat/share/InputEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.handleInput(arg0)
test data is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Handler handler = new Handler();
        MockSocket mockSocket = new MockSocket("192.168.0.1", 5000);
        SecServer secServer = new SecServer(mockSocket);
        InputEvent inputEvent = new InputEvent(secServer, "/getheros");
        inputEvent.setData("{\"name\":\"John\", \"age\":30}");
        handler.handleInput(inputEvent);
    }
}
statement is: Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket("192.168.0.1", 5000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecServer secServer = new SecServer(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: dsachat.server.net.SecServer(Ljava/net/Socket;)V
statement is: InputEvent inputEvent = new InputEvent(secServer, "/getheros"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: inputEvent.setData("{\"name\":\"John\", \"age\":30}"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: inputEvent.setData("{\"name\":\"John\", \"age\":30}") target is: inputEvent method is: setData(java.lang.String)
statement is: handler.handleInput(inputEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.handleInput(inputEvent) target is: handler method is: handleInput(InputEvent)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: handleInput(Ldsachat/share/InputEvent;)V
TestCase is: Handler handler = new Handler();
String string = "/getheros";
InputEvent inputEvent = new InputEvent((ConnectionEndpoint) string, "/getheros");
handler.handleInput(inputEvent);

statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: dsachat.server.net.SecServer(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.net.SecServer
statement code is: SecServer secServer = new SecServer(arg0)
statement is: addConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.addConnection(arg0)
statement is: dsachat.share.UserEvent(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.share.UserEvent
statement code is: UserEvent userEvent = new UserEvent(true, "0/-2")
statement is: dsachat.share.InputEvent(Ldsachat/share/ConnectionEndpoint;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.share.InputEvent
statement code is: InputEvent inputEvent = new InputEvent(arg0, arg1)
statement is: handleInput(Ldsachat/share/InputEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.handleInput(arg0)
test data is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Handler handler = new Handler();
        MockSocket mockSocket = new MockSocket();
        SecServer secServer = new SecServer(mockSocket);
        handler.addConnection(secServer);
        UserEvent userEvent = new UserEvent(true, "0/-2");
        InputEvent inputEvent = new InputEvent(secServer, userEvent);
        handler.handleInput(inputEvent);
    }
}
statement is: Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecServer secServer = new SecServer(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.addConnection(secServer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(secServer) target is: handler method is: addConnection(SecServer)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: addConnection(Ldsachat/share/ConnectionEndpoint;)V
statement is: UserEvent userEvent = new UserEvent(true, "0/-2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InputEvent inputEvent = new InputEvent(secServer, userEvent), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.handleInput(inputEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.handleInput(inputEvent) target is: handler method is: handleInput(InputEvent)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: handleInput(Ldsachat/share/InputEvent;)V
TestCase is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
boolean _boolean = true;
String string = "0/-2";
UserEvent userEvent = new UserEvent(_boolean, string);
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

statement is: dsachat.server.Handler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.Handler
statement code is: Handler handler = new Handler()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: dsachat.server.net.SecServer(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.server.net.SecServer
statement code is: SecServer secServer = new SecServer(arg0)
statement is: addConnection(Ldsachat/share/ConnectionEndpoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.addConnection(arg0)
statement is: dsachat.share.InputEvent(Ldsachat/share/ConnectionEndpoint;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class dsachat.share.InputEvent
statement code is: InputEvent inputEvent = new InputEvent(arg0, "/getheros")
statement is: handleInput(Ldsachat/share/InputEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handler.handleInput(arg0)
test data is: Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Handler handler = new Handler();
        MockSocket mockSocket = new MockSocket("192.168.0.1", 4532);// changed to a more descriptive ip address and port number

        SecServer secServer = new SecServer(mockSocket);
        handler.addConnection(secServer);
        InputEvent inputEvent = new InputEvent(secServer, "/getheros");
        handler.handleInput(inputEvent);
    }
}
statement is: Handler handler = new Handler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket("192.168.0.1", 4532)// changed to a more descriptive ip address and port number
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SecServer secServer = new SecServer(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: dsachat.server.net.SecServer(Ljava/net/Socket;)V
statement is: handler.addConnection(secServer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.addConnection(secServer) target is: handler method is: addConnection(SecServer)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: addConnection(Ldsachat/share/ConnectionEndpoint;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: InputEvent inputEvent = new InputEvent(secServer, "/getheros"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: handler.handleInput(inputEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: handler.handleInput(inputEvent) target is: handler method is: handleInput(InputEvent)
source statement: dsachat.server.Handler()V callee: VariableReference: Statement 0, type dsachat.server.Handlerindex is: 0
Matched Method is: handleInput(Ldsachat/share/InputEvent;)V
TestCase is: Handler handler = new Handler();
SecServer secServer = null;
handler.addConnection(secServer);
String string = "/getheros";
InputEvent inputEvent = new InputEvent((ConnectionEndpoint) string, "/getheros");
handler.handleInput(inputEvent);

* test suite isTestSuite: 14
Test 0: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
handler.removeConnection(secServer);
Test 1: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);
Test 2: 
Handler handler = new Handler();
SecClient secClient = new SecClient();
handler.addConnection(secClient);
// Undeclared exception!
try { 
  handler.removeConnection(secClient);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.client.net.SecClient", e);
}

Test 3: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 4: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);
Test 5: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 6: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 7: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
handler.removeConnection((ConnectionEndpoint) null);

Test 8: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);

Test 9: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
handler.removeConnection((ConnectionEndpoint) null);
SecClient secClient = null;
handler.addConnection(secClient);
SecClient secClient = null;
handler.removeConnection(secClient);

Test 10: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

Test 11: 
Handler handler = new Handler();
InputEvent inputEvent = new InputEvent((ConnectionEndpoint) "/getheros", "/getheros");
handler.handleInput(inputEvent);

Test 12: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

Test 13: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
InputEvent inputEvent = new InputEvent((ConnectionEndpoint) "/getheros", "/getheros");
handler.handleInput(inputEvent);


* Generated after the refinement and before minimization 14 tests with total length 67
* test suite isTestSuite: 14
Test 0: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
handler.removeConnection(secServer);
Test 1: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);
Test 2: 
Handler handler = new Handler();
SecClient secClient = new SecClient();
handler.addConnection(secClient);
// Undeclared exception!
try { 
  handler.removeConnection(secClient);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.client.net.SecClient", e);
}

Test 3: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 4: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);
Test 5: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 6: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 7: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
handler.removeConnection((ConnectionEndpoint) null);

Test 8: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);

Test 9: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
handler.removeConnection((ConnectionEndpoint) null);
SecClient secClient = null;
handler.addConnection(secClient);
SecClient secClient = null;
handler.removeConnection(secClient);

Test 10: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

Test 11: 
Handler handler = new Handler();
InputEvent inputEvent = new InputEvent((ConnectionEndpoint) "/getheros", "/getheros");
handler.handleInput(inputEvent);

Test 12: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
handler.handleInput(inputEvent);

Test 13: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
InputEvent inputEvent = new InputEvent((ConnectionEndpoint) "/getheros", "/getheros");
handler.handleInput(inputEvent);


* Minimizing test suite
* test suite isTestSuite: 7
Test 0: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
handler.removeConnection(secServer);
Test 1: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);
Test 2: 
Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
// Undeclared exception!
try { 
  handler.removeConnection((ConnectionEndpoint) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.Handler", e);
}

Test 3: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 4: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);
Test 5: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 6: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 98
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 30%
* Total number of goals: 186
* Number of covered goals: 55
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 98
* Number of covered goals: 29
* Generated 7 tests with total length 34
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);

** It was a parseable test case! 
refined test name is: testRemoveConnectionWithValidInput
* Compiling Tests
refined test name is: testRemoveConnectionWithNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Handler handler = new Handler();
handler.addConnection((ConnectionEndpoint) null);
// Undeclared exception!
try { 
  handler.removeConnection((ConnectionEndpoint) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.Handler", e);
}


** It was a parseable test case! 
refined test name is: testRemoveConnectionwithNullConnectionEndpoint
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:21:17.837 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6387271884618386349.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:21:17.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6387271884618386349.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:21:17.895 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6387271884618386349.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:21:17.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6387271884618386349.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:21:17.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6387271884618386349.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:21:17.941 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6387271884618386349.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
[MASTER] 16:21:17.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6387271884618386349.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:21:17.995 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6387271884618386349.jar
[MASTER] 16:21:18.399 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 7
Test 0: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
handler.removeConnection(secServer);
Test 1: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);
Test 2: 
Handler handler = new Handler();
SecClient secClient = new SecClient();
handler.addConnection(secClient);
// Undeclared exception!
try { 
  handler.removeConnection(secClient);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.client.net.SecClient", e);
}

Test 3: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 4: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);
Test 5: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 6: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}


* Minimizing test suite
* test suite isTestSuite: 6
Test 0: 
Handler handler = new Handler();
handler.removeConnection((ConnectionEndpoint) null);
Test 1: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
handler.removeConnection(secServer);
Test 2: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 3: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
handler.handleInput(inputEvent);
Test 4: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
UserEvent userEvent = new UserEvent(true, "0/-2");
InputEvent inputEvent = new InputEvent(secServer, userEvent);
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}

Test 5: 
Handler handler = new Handler();
MockSocket mockSocket = new MockSocket();
SecServer secServer = new SecServer(mockSocket);
handler.addConnection(secServer);
InputEvent inputEvent = new InputEvent(secServer, "/getheros");
// Undeclared exception!
try { 
  handler.handleInput(inputEvent);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("dsachat.server.net.SecServer", e);
}


[MASTER] 16:21:20.983 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 98
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 30%
* Total number of goals: 186
* Number of covered goals: 55
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 98
* Number of covered goals: 29
* Generated 6 tests with total length 31
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 16:21:21.028 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 16:21:22.421 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:21:22.819 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6387271884618386349.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:21:22.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6387271884618386349.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:21:22.860 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6387271884618386349.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:21:22.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6387271884618386349.jar
* Writing tests to file
[MASTER] 16:21:22.863 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Handler_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
* Writing JUnit test case 'Handler_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
