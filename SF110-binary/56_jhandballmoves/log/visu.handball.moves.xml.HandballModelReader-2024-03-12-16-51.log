* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: visu.handball.moves.xml.HandballModelReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/56_jhandballmoves/evosuite-files/evosuite.properties
* Connecting to master process on port 13849
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:52:00.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:52:00.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:52:00.265 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:52:00.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:52:00.328 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:52:00.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class visu.handball.moves.xml.HandballModelReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 206
* Using seed 1710262317786
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 85 / 206
[Progress:=>                            5%] [Cov:==================>                52%][Progress:=>                            5%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:====>                         14%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:======>                       22%] [Cov:==================>                52%][Progress:======>                       22%] [Cov:==================>                52%][Progress:======>                       22%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:=========>                    32%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:=================>            57%] [Cov:==================>                52%][Progress:=================>            59%] [Cov:==================>                52%][Progress:=================>            59%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:====================>         67%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:============================> 94%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:=============================>99%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%]
* Search finished after 204s and 175 generations, 36776 statements, best individual has fitness: 121.0
* Generated before the refinement 9 tests with total length 31
statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: readFromXml()Lvisu/handball/moves/model/HandballModel; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.model.HandballModel
statement code is: HandballModel readFromXml = handballModelReader.readFromXml()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.readFromXml();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream(new ByteArrayInputStream("<?xml version=\"1.0\" encoding=\"UTF-8\"?><handballModel><players><player><name>John</name><number>11</number></player><player><name>Jane</name><number>12</number></player></players><field><width>50</width><length>100</length></field></handballModel>".getBytes()));
        HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream)));
        instance.readFromXml();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(new ByteArrayInputStream("<?xml version=\"1.0\" encoding=\"UTF-8\"?><handballModel><players><player><name>John</name><number>11</number></player><player><name>Jane</name><number>12</number></player></players><field><width>50</width><length>100</length></field></handballModel>".getBytes())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (pipedInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.readFromXml(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.readFromXml() target is: instance method is: readFromXml()
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: readFromXml()Lvisu/handball/moves/model/HandballModel;
TestCase is: PipedInputStream pipedInputStream = null;
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.readFromXml();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("OW|")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputStream()Ljava/io/InputStream; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream inputStream = (ByteArrayInputStream)handballModelReader.getInputStream()
test data is: MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("OW|");// This data is not very descriptive and does not accurately represent the situation being tested

        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        InputStream inputStream = instance.getInputStream();
        String content = new String(inputStream.readAllBytes());
        assertEquals("This is a test string", content);// This assert statement checks that the method is returning the correct value for the given input data }}

    }
}
statement is: MockFile mockFile = new MockFile("OW|")// This data is not very descriptive and does not accurately represent the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: InputStream inputStream = instance.getInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputStream() target is: instance method is: getInputStream()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: getInputStream()Ljava/io/InputStream;
statement is: String content = new String(inputStream.readAllBytes()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals("This is a test string", content)// This assert statement checks that the method is returning the correct value for the given input data }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("This is a test string", content)// This assert statement checks that the method is returning the correct value for the given input data }}
 target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: String string = "OW|";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for testing the getInputFile() method
        InputStream inputStream = new ByteArrayInputStream(new byte[]{ 1, 2, 3 });
        HandballModelReader instance = HandballModelReader.getInstance(inputStream);
        String expectedOutput = "test_file.txt";
        assertEquals(expectedOutput, instance.getInputFile());
    }
}
statement is: // Improved test data for testing the getInputFile() method
InputStream inputStream = new ByteArrayInputStream(new byte[]{ 1, 2, 3 }), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(inputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(inputStream) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: String expectedOutput = "test_file.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedOutput, instance.getInputFile()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedOutput, instance.getInputFile()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "test_file.txt"
TestCase is: InputStream inputStream = null;
HandballModelReader.getInstance(inputStream);
String string = "test_file.txt";

statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null)
statement is: readFromXml()Lvisu/handball/moves/model/HandballModel; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.model.HandballModel
statement code is: HandballModel readFromXml = handballModelReader.readFromXml()
test data is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HandballModelReader instance = HandballModelReader.getInstance(new FileInputStream("path/to/xml/file"));
        instance.readFromXml();
    }
}
statement is: HandballModelReader instance = HandballModelReader.getInstance(new FileInputStream("path/to/xml/file")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(new FileInputStream("path/to/xml/file")) target is: HandballModelReader method is: getInstance(FileInputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.readFromXml(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.readFromXml() target is: instance method is: readFromXml()
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 0, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: readFromXml()Lvisu/handball/moves/model/HandballModel;
TestCase is: InputStream inputStream = null;
HandballModelReader.getInstance(inputStream);
((HandballModelReader) inputStream).readFromXml();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("OW|")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@6075cfd4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, 1042, 2098)
statement is: setInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handballModelReader.setInputStream(arg0)
test data is: MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
instance.setInputStream(byteArrayInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("OW|");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        // Improved test data:
        // Using a more descriptive and representative String for the file name, such as "handball_model.dat"
        MockFile mockFile = new MockFile("handball_model.dat");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        byte[] byteArray = new byte[0];
        // Improved test data:
        // Using a more descriptive and representative value for the length of the input stream, such as 1024
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1024, 2098);
        instance.setInputStream(byteArrayInputStream);
    }
}
statement is: MockFile mockFile = new MockFile("OW|"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: // Improved test data:
// Using a more descriptive and representative String for the file name, such as "handball_model.dat"
MockFile mockFile = new MockFile("handball_model.dat"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: byte[] byteArray = new byte[0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[0] Elements: []
lengths: [0] [0]
Their type are: class [B byte[]
statement is: // Improved test data:
// Using a more descriptive and representative value for the length of the input stream, such as 1024
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1024, 2098), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: instance.setInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputStream(byteArrayInputStream) target is: instance method is: setInputStream(ByteArrayInputStream)
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 5
Matched Method is: setInputStream(Ljava/io/InputStream;)V
TestCase is: String string = "OW|";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
String string = "handball_model.dat";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
int _int = 1024;
int _int = 2098;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, _int, _int);
((HandballModelReader) mockFile).setInputStream(byteArrayInputStream);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("OW|")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: setInputFile(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handballModelReader.setInputFile(arg0)
test data is: MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        MockFile mockFile = new MockFile("OW|");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        instance.setInputFile(mockFile);
    }
}
statement is: // Improved test data
MockFile mockFile = new MockFile("OW|"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.setInputFile(mockFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputFile(mockFile) target is: instance method is: setInputFile(MockFile)
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: setInputFile(Ljava/io/File;)V
TestCase is: String string = "OW|";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        MockFile mockFile = new MockFile("test_data.txt", "This is a test file for reading the handball model.");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        String expectedInputFile = "test_data.txt";
        assertEquals(expectedInputFile, instance.getInputFile());
    }
}
statement is: // Improved test data
MockFile mockFile = new MockFile("test_data.txt", "This is a test file for reading the handball model."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: String expectedInputFile = "test_data.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedInputFile, instance.getInputFile()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedInputFile, instance.getInputFile()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "test_data.txt"
TestCase is: String string = "test_data.txt";
String string = "This is a test file for reading the handball model.";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);
String string = "test_data.txt";

statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null)
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile((String) null, ".XN2t?")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HandballModelReader instance = HandballModelReader.getInstance(new File("C:\\Users\\John Doe\\Desktop\\test_data.txt"));
        MockFile mockFile = new MockFile("test_file", "This is a test file containing handball model data.");
        HandballModelReader.getInstance(mockFile);
        instance.getInputFile();
    }
}
statement is: HandballModelReader instance = HandballModelReader.getInstance(new File("C:\\Users\\John Doe\\Desktop\\test_data.txt")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(new File("C:\\Users\\John Doe\\Desktop\\test_data.txt")) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockFile mockFile = new MockFile("test_file", "This is a test file containing handball model data."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(mockFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(mockFile) target is: HandballModelReader method is: getInstance(MockFile)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.getInputFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputFile() target is: instance method is: getInputFile()
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 0, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: getInputFile()Ljava/io/File;
TestCase is: InputStream inputStream = null;
HandballModelReader.getInstance(inputStream);
String string = "test_file";
String string = "This is a test file containing handball model data.";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((InputStream) mockFile);
((HandballModelReader) inputStream).getInputFile();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("OW|")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@9e068afe type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, 1042, 2098)
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: getInputStream()Ljava/io/InputStream; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream inputStream = (ByteArrayInputStream)handballModelReader.getInputStream()
test data is: MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("OW|");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        byte[] byteArray = new byte[]{ 1, 2, 3, 4 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        HandballModelReader.getInstance(((InputStream) (byteArrayInputStream)));
        instance.getInputStream();
    }
}
statement is: MockFile mockFile = new MockFile("OW|"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 1, 2, 3, 4 } Elements: [1, 2, 3, 4]
lengths: [0] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.getInputStream(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputStream() target is: instance method is: getInputStream()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: getInputStream()Ljava/io/InputStream;
TestCase is: String string = "OW|";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = null;
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

* test suite isTestSuite: 18
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();
Test 9: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

Test 10: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

Test 11: 
HandballModelReader.getInstance((InputStream) null);

Test 12: 
InputStream inputStream = null;
HandballModelReader.getInstance((InputStream) null);
((HandballModelReader) inputStream).readFromXml();

Test 13: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = new MockFile("handball_model.dat");
HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1024, 2098);
((HandballModelReader) mockFile).setInputStream(byteArrayInputStream);

Test 14: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);

Test 15: 
MockFile mockFile = new MockFile("test_data.txt", "This is a test file for reading the handball model.");
HandballModelReader.getInstance((File) mockFile);

Test 16: 
InputStream inputStream = null;
HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile("test_file", "This is a test file containing handball model data.");
HandballModelReader.getInstance((InputStream) mockFile);
((HandballModelReader) inputStream).getInputFile();

Test 17: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) null);
((HandballModelReader) mockFile).getInputStream();


* Generated after the refinement and before minimization 18 tests with total length 61
* test suite isTestSuite: 18
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();
Test 9: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

Test 10: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

Test 11: 
HandballModelReader.getInstance((InputStream) null);

Test 12: 
InputStream inputStream = null;
HandballModelReader.getInstance((InputStream) null);
((HandballModelReader) inputStream).readFromXml();

Test 13: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = new MockFile("handball_model.dat");
HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1024, 2098);
((HandballModelReader) mockFile).setInputStream(byteArrayInputStream);

Test 14: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);

Test 15: 
MockFile mockFile = new MockFile("test_data.txt", "This is a test file for reading the handball model.");
HandballModelReader.getInstance((File) mockFile);

Test 16: 
InputStream inputStream = null;
HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile("test_file", "This is a test file containing handball model data.");
HandballModelReader.getInstance((InputStream) mockFile);
((HandballModelReader) inputStream).getInputFile();

Test 17: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) null);
((HandballModelReader) mockFile).getInputStream();


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 44
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Generated 9 tests with total length 31
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testReadFromXmlWithNullInputStreamHeadless
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
InputStream inputStream = instance.getInputStream();
assertNull(inputStream);


** It was a parseable test case! 
refined test name is: testInputstreamIsNullWhenNoArgumentPassed
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
File inputFile = instance.getInputFile();
assertNull(inputFile);


** It was a parseable test case! 
refined test name is: testGetInputFileWithNullInputStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testReadFromXmlHeadlessModeThrowsHeadlessException
* Compiling Tests
refined test name is: testReadFromXmlThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
instance.setInputFile(arg0);
assertEquals("OW|", arg0.toString());


** It was a parseable test case! 
refined test name is: testSetInputFileValidFileReaderSetsInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile arg0 = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) arg0);
File inputFile = instance.getInputFile();
assertEquals(0L, inputFile.getFreeSpace());


** It was a parseable test case! 
refined test name is: testGetInstanceWithNullInputStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
File inputFile = instance.getInputFile();
assertTrue(inputFile.exists());


** It was a parseable test case! 
refined test name is: testReadExistingInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:02:13.386 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:02:13.404 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
* Compiling Tests
[MASTER] 17:02:13.464 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:02:13.517 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:13.581 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:02:13.621 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.622 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:02:13.662 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.663 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:02:13.702 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
[MASTER] 17:02:13.797 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.798 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
[MASTER] 17:02:13.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:13.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
[MASTER] 17:02:14.047 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

* Minimizing test suite
[MASTER] 17:02:15.878 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
[MASTER] 17:02:15.916 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
MockFile mockFile = new MockFile((String) null, ".XN2t?");
HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
MockFile mockFile = new MockFile("OW|");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1042, 2098);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 44
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Generated 9 tests with total length 31
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 17:02:19.196 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.662 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:19.663 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.711 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:02:19.712 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.759 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:19.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.820 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:19.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.873 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:19.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.925 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:19.926 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:02:19.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:19.979 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 17:02:20.111 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:20.112 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 17:02:20.297 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3063658291323283920.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:02:20.298 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3063658291323283920.jar
* Writing tests to file
[MASTER] 17:02:20.300 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HandballModelReader_ESTest' to evosuite-tests
** Write a test suite: 3 called: 0 to improve: false
* Writing JUnit test case 'HandballModelReader_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
* Done!

* Computation finished
