* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: visu.handball.moves.xml.HandballModelReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/56_jhandballmoves/evosuite-files/evosuite.properties
* Connecting to master process on port 21655
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:42:46.343 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:42:46.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:42:46.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:42:46.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:42:46.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:42:46.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class visu.handball.moves.xml.HandballModelReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 206
* Using seed 1709808165088
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 85 / 206
[Progress:>                             0%] [Cov:==============>                    42%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          12%] [Cov:==================>                52%][Progress:===>                          12%] [Cov:==================>                52%][Progress:===>                          12%] [Cov:==================>                52%][Progress:===>                          12%] [Cov:==================>                52%][Progress:=====>                        17%] [Cov:==================>                52%][Progress:=====>                        17%] [Cov:==================>                52%][Progress:=====>                        17%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:==============>               49%] [Cov:==================>                52%][Progress:==============>               49%] [Cov:==================>                52%][Progress:==============>               49%] [Cov:==================>                52%][Progress:==============>               49%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             54%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%]
* Search finished after 102s and 65 generations, 14081 statements, best individual has fitness: 121.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 31
* Number of covered goals: 11
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 44
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 31
* Number of covered goals: 11
* Generated 12 tests with total length 37
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'HandballModelReader_ESTest' to evosuite-tests
* Done!

* Computation finished
