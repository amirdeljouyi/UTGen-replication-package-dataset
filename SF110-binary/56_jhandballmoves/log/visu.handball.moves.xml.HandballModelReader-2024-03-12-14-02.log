* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: visu.handball.moves.xml.HandballModelReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/56_jhandballmoves/evosuite-files/evosuite.properties
* Connecting to master process on port 2298
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:02:29.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:02:29.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:02:29.719 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:02:29.777 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:02:29.782 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:02:29.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class visu.handball.moves.xml.HandballModelReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 206
* Using seed 1710252147545
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 85 / 206
[Progress:>                             0%] [Cov:================>                  48%][Progress:>                             0%] [Cov:=================>                 49%][Progress:>                             2%] [Cov:=================>                 51%][Progress:>                             2%] [Cov:=================>                 51%][Progress:>                             3%] [Cov:=================>                 51%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:====>                         14%] [Cov:==================>                52%][Progress:====>                         14%] [Cov:==================>                52%][Progress:====>                         14%] [Cov:==================>                52%][Progress:====>                         14%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      24%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:=============>                44%] [Cov:==================>                52%][Progress:==============>               47%] [Cov:==================>                52%][Progress:==============>               47%] [Cov:==================>                52%][Progress:==============>               47%] [Cov:==================>                52%][Progress:==============>               47%] [Cov:==================>                52%][Progress:==============>               47%] [Cov:==================>                52%][Progress:==============>               47%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:====================>         69%] [Cov:==================>                52%][Progress:====================>         69%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:=====================>        72%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:==================>                52%][Progress:=============================>99%] [Cov:==================>                52%][Progress:=============================>99%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%]
* Search finished after 203s and 190 generations, 39352 statements, best individual has fitness: 122.0
* Generated before the refinement 11 tests with total length 34
statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: readFromXml()Lvisu/handball/moves/model/HandballModel; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.model.HandballModel
statement code is: HandballModel readFromXml = handballModelReader.readFromXml()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.readFromXml();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream(new FileInputStream("path/to/file.xml"));
        HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream)));
        instance.readFromXml();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(new FileInputStream("path/to/file.xml")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (pipedInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.readFromXml(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.readFromXml() target is: instance method is: readFromXml()
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: readFromXml()Lvisu/handball/moves/model/HandballModel;
TestCase is: PipedInputStream pipedInputStream = null;
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.readFromXml();

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: getInputStream()Ljava/io/InputStream; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream inputStream = (PipedInputStream)handballModelReader.getInputStream()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.getInputStream();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        pipedInputStream = new PipedInputStream();
        instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream)));
        inputStream = instance.getInputStream();
        // Test data for different types of inputs
        int intValue = 10;
        double doubleValue = 3.14;
        String stringValue = "hello world";
        Object[] objectArray = new Object[2];
        objectArray[0] = new Integer(5);
        objectArray[1] = new Double(7.89);
        // Test data for input streams with different sizes
        InputStream smallStream = new PipedInputStream(10);
        InputStream mediumStream = new PipedInputStream(200);
        InputStream largeStream = new PipedInputStream(5000);
    }
}
statement is: pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: inputStream = instance.getInputStream(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: // Test data for different types of inputs
int intValue = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "hello world", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[] objectArray = new Object[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: objectArray[0] = new Integer(5), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Integer(5) Ct is: objectArray[0] = new Integer(5)
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = new Double(7.89), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Double(7.89) Ct is: objectArray[1] = new Double(7.89)
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Test data for input streams with different sizes
InputStream smallStream = new PipedInputStream(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InputStream mediumStream = new PipedInputStream(200), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InputStream largeStream = new PipedInputStream(5000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "hello world"
TestCase is: int _int = 10;
double _double = 3.14;
String string = "hello world";

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("testdata.csv", "This is a test data file");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        instance.getInputFile();
    }
}
statement is: MockFile mockFile = new MockFile("testdata.csv", "This is a test data file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.getInputFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputFile() target is: instance method is: getInputFile()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 3
Matched Method is: getInputFile()Ljava/io/File;
TestCase is: String string = "testdata.csv";
String string = "This is a test data file";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) string).getInputFile();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
test data is: MockFile mockFile = new MockFile("", "");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) mockFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("file1.txt", "Hello World!");
        HandballModelReader.getInstance(((File) (mockFile)));
        MockFile mockFile2 = new MockFile("file2.txt", "This is a test file with some random text.");
        HandballModelReader.getInstance(((File) (mockFile2)));
        MockFile mockFile3 = new MockFile("file3.txt", "The quick brown fox jumps over the lazy dog, but this time it's a test file.");
        HandballModelReader.getInstance(((File) (mockFile3)));
    }
}
statement is: MockFile mockFile = new MockFile("file1.txt", "Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: MockFile mockFile2 = new MockFile("file2.txt", "This is a test file with some random text."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(((File) (mockFile2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile2))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: MockFile mockFile3 = new MockFile("file3.txt", "The quick brown fox jumps over the lazy dog, but this time it's a test file."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(((File) (mockFile3))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile3))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
TestCase is: String string = "file1.txt";
String string = "Hello World!";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);
String string = "file2.txt";
String string = "This is a test file with some random text.";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);
String string = "file3.txt";
String string = "The quick brown fox jumps over the lazy dog, but this time it's a test file.";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@1279e5ef type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        HandballModelReader.getInstance(((InputStream) (pipedInputStream)));
        byte[] byteArray = new byte[]{ 0x1, 0x2 };// byte array with two bytes

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        HandballModelReader.getInstance(((InputStream) (byteArrayInputStream)));
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (pipedInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: byte[] byteArray = new byte[]{ 0x1, 0x2 }// byte array with two bytes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ 0x1, 0x2 } Elements: [0x1, 0x2]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
PipedInputStream pipedInputStream = null;
HandballModelReader.getInstance((InputStream) pipedInputStream);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("", "")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: readFromXml()Lvisu/handball/moves/model/HandballModel; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.model.HandballModel
statement code is: HandballModel readFromXml = handballModelReader.readFromXml()
test data is: MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.readFromXml();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("TestingData/Team.xml", "Handball");
        HandballModelReader instance = HandballModelReader.getInstance(mockFile);
        instance.readFromXml();
    }
}
statement is: MockFile mockFile = new MockFile("TestingData/Team.xml", "Handball"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(mockFile) target is: HandballModelReader method is: getInstance(MockFile)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.readFromXml(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.readFromXml() target is: instance method is: readFromXml()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 3
Matched Method is: readFromXml()Lvisu/handball/moves/model/HandballModel;
TestCase is: String string = "TestingData/Team.xml";
String string = "Handball";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) string).readFromXml();

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: setInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handballModelReader.setInputStream(arg0)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputStream(pipedInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        String modelName = "HandballModel";
        int numPlayers = 11;
        double teamSize = 0.25;
        String[] playerNames = new String[]{ "John", "Jane", "Bob", "Alice" };
        String[] teamNames = new String[]{ "Red Team", "Blue Team" };
        HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream)));
        instance.setInputStream(pipedInputStream);
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String modelName = "HandballModel", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int numPlayers = 11, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double teamSize = 0.25, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] playerNames = new String[]{ "John", "Jane", "Bob", "Alice" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] teamNames = new String[]{ "Red Team", "Blue Team" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (pipedInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.setInputStream(pipedInputStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputStream(pipedInputStream) target is: instance method is: setInputStream(PipedInputStream)
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 4
Matched Method is: setInputStream(Ljava/io/InputStream;)V
* this is vulnerable: int _int = 11
* this is vulnerable: double _double = 0.25
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
String string = "HandballModel";
int _int = 11;
double _double = 0.25;
HandballModelReader.getInstance((InputStream) pipedInputStream);
((HandballModelReader) string).setInputStream(pipedInputStream);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: setInputFile(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handballModelReader.setInputFile((File) null)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputFile((File) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream(1024, true);
        HandballModelReader instance = HandballModelReader.getInstance(pipedInputStream);
        instance.setInputFile(new File("handball_model.txt"));
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(1024, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(pipedInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(pipedInputStream) target is: HandballModelReader method is: getInstance(PipedInputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.setInputFile(new File("handball_model.txt")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputFile(new File("handball_model.txt")) target is: instance method is: setInputFile(File)
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: setInputFile(Ljava/io/File;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: PipedInputStream pipedInputStream = null;
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
File file = null;
instance.setInputFile(file);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("\" could not be added as a namespace to \"")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        MockFile mockFile = new MockFile("\"C:\\Users\\User1\\Desktop\\example_data.txt\"");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        instance.getInputFile();
    }
}
statement is: // Improved test data
MockFile mockFile = new MockFile("\"C:\\Users\\User1\\Desktop\\example_data.txt\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.getInputFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputFile() target is: instance method is: getInputFile()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: getInputFile()Ljava/io/File;
TestCase is: String string = "\"C:\\Users\\User1\\Desktop\\example_data.txt\"";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();

statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) null)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File inputFile = handballModelReader.getInputFile()
test data is: HandballModelReader instance = HandballModelReader.getInstance((File) null);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HandballModelReader instance = HandballModelReader.getInstance(new File("path/to/file.json"));
        assertEquals(new File("path/to/file.json"), instance.getInputFile());
    }
}
statement is: HandballModelReader instance = HandballModelReader.getInstance(new File("path/to/file.json")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(new File("path/to/file.json")) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals(new File("path/to/file.json"), instance.getInputFile()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(new File("path/to/file.json"), instance.getInputFile()) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: File file = null;
HandballModelReader.getInstance(file);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("\" could not be added as a namespace to \"")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputStream()Ljava/io/InputStream; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.InputStream
statement code is: InputStream inputStream = handballModelReader.getInputStream()
test data is: MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        MockFile mockFile = new MockFile("non-existent_file.txt");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        instance.getInputStream();
    }
}
statement is: // Improved test data
MockFile mockFile = new MockFile("non-existent_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.getInputStream(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputStream() target is: instance method is: getInputStream()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: getInputStream()Ljava/io/InputStream;
TestCase is: String string = "non-existent_file.txt";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

* test suite isTestSuite: 22
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.getInputStream();
Test 2: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 3: 
MockFile mockFile = new MockFile("", "");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) mockFile);
Test 4: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 6: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputStream(pipedInputStream);
Test 7: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputFile((File) null);
Test 8: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 9: 
HandballModelReader instance = HandballModelReader.getInstance((File) null);
instance.getInputFile();
Test 10: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 11: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

Test 12: 

Test 13: 
MockFile mockFile = new MockFile("testdata.csv", "This is a test data file");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader)"This is a test data file").getInputFile();

Test 14: 
MockFile mockFile = new MockFile("file1.txt", "Hello World!");
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = new MockFile("file2.txt", "This is a test file with some random text.");
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = new MockFile("file3.txt", "The quick brown fox jumps over the lazy dog, but this time it's a test file.");
HandballModelReader.getInstance((File) mockFile);

Test 15: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
HandballModelReader.getInstance((InputStream) null);

Test 16: 
MockFile mockFile = new MockFile("TestingData/Team.xml", "Handball");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader)"Handball").readFromXml();

Test 17: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
((HandballModelReader)"HandballModel").setInputStream(pipedInputStream);

Test 18: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.setInputFile((File) null);

Test 19: 
MockFile mockFile = new MockFile("\"C:UsersUser1Desktopexample_data.txt\"");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();

Test 20: 
HandballModelReader.getInstance((File) null);

Test 21: 
MockFile mockFile = new MockFile("non-existent_file.txt");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();


* Generated after the refinement and before minimization 22 tests with total length 63
* test suite isTestSuite: 22
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.getInputStream();
Test 2: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 3: 
MockFile mockFile = new MockFile("", "");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) mockFile);
Test 4: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 6: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputStream(pipedInputStream);
Test 7: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputFile((File) null);
Test 8: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 9: 
HandballModelReader instance = HandballModelReader.getInstance((File) null);
instance.getInputFile();
Test 10: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 11: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

Test 12: 

Test 13: 
MockFile mockFile = new MockFile("testdata.csv", "This is a test data file");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader)"This is a test data file").getInputFile();

Test 14: 
MockFile mockFile = new MockFile("file1.txt", "Hello World!");
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = new MockFile("file2.txt", "This is a test file with some random text.");
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = new MockFile("file3.txt", "The quick brown fox jumps over the lazy dog, but this time it's a test file.");
HandballModelReader.getInstance((File) mockFile);

Test 15: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
HandballModelReader.getInstance((InputStream) null);

Test 16: 
MockFile mockFile = new MockFile("TestingData/Team.xml", "Handball");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader)"Handball").readFromXml();

Test 17: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
((HandballModelReader)"HandballModel").setInputStream(pipedInputStream);

Test 18: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.setInputFile((File) null);

Test 19: 
MockFile mockFile = new MockFile("\"C:UsersUser1Desktopexample_data.txt\"");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();

Test 20: 
HandballModelReader.getInstance((File) null);

Test 21: 
MockFile mockFile = new MockFile("non-existent_file.txt");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();


* Minimizing test suite
* test suite isTestSuite: 11
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((File) null);
instance.getInputFile();
Test 3: 
MockFile mockFile = new MockFile("file1.txt", "Hello World!");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) mockFile);
Test 4: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader.getInstance((InputStream) pipedInputStream);
HandballModelReader.getInstance((InputStream) null);
Test 5: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 6: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputStream(pipedInputStream);
Test 7: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.setInputFile((File) null);
Test 8: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 9: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 10: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.getInputStream();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 31
* Number of covered goals: 11
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 44
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 31
* Number of covered goals: 11
* Generated 11 tests with total length 30
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testReadFromXmlThrowsHeadlessException
* Compiling Tests
refined test name is: testReadFromXmlThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
InputStream inputStream = instance.getInputStream();
assertNull(inputStream);


** It was a parseable test case! 
refined test name is: testGetInputStreamWhenFileDoesNotExist
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((File) null);
File inputFile = instance.getInputFile();
assertNull(inputFile);


** It was a parseable test case! 
refined test name is: testGetInstanceWithoutFileReturnsNullInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testReadFromXmlThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0);
instance.setInputStream(arg0);
assertEquals(0, arg0.available());


** It was a parseable test case! 
refined test name is: testReadingFromPipeshouldReturnZeroAvailable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.setInputFile((File) null);

** It was a parseable test case! 
refined test name is: testReaderInstanceAndSetInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
File inputFile = instance.getInputFile();
assertEquals("\" could not be added as a namespace to \"", inputFile.toString());


** It was a parseable test case! 
refined test name is: testSetInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
File inputFile = instance.getInputFile();
assertEquals("", inputFile.getName());


** It was a parseable test case! 
refined test name is: testInstanceHasEmptyInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0);
InputStream inputStream = instance.getInputStream();
assertEquals(0, inputStream.available());


** It was a parseable test case! 
refined test name is: testGetInputStreamReturnsEmptyInputStream
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:09.870 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:09.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:09.973 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:09.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.028 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.101 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.102 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.155 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.200 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.201 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.235 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.236 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.269 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:15:10.304 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.304 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:10.470 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.471 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 8 called: 0 to improve: false
[MASTER] 14:15:10.643 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:10.644 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
[MASTER] 14:15:10.820 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 10
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.getInputStream();
Test 2: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 3: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputStream(pipedInputStream);
Test 5: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputFile((File) null);
Test 6: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 346, 346);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
HandballModelReader.getInstance((InputStream) dataInputStream);
Test 7: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
HandballModelReader instance = HandballModelReader.getInstance((File) null);
instance.getInputFile();
Test 9: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();

* Minimizing test suite
[MASTER] 14:15:12.546 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
[MASTER] 14:15:12.571 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((File) null);
instance.getInputFile();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputStream(pipedInputStream);
Test 5: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.setInputFile((File) null);
Test 6: 
MockFile mockFile = new MockFile("\" could not be added as a namespace to \"");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
MockFile mockFile = new MockFile("", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.getInputStream();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 44
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Generated 9 tests with total length 26
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 14:15:15.979 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:16.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:16.575 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:16.720 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:16.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:16.816 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:16.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:16.913 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:16.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:17.001 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.004 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:17.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:17.189 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:17.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.267 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:15:17.336 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.339 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 14:15:17.446 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 14:15:17.577 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar4649106601639676246.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:15:17.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4649106601639676246.jar
* Writing tests to file
[MASTER] 14:15:17.589 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HandballModelReader_ESTest' to evosuite-tests
** Write a test suite: 8 called: 0 to improve: false
* Writing JUnit test case 'HandballModelReader_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
* Done!

* Computation finished
