* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: visu.handball.moves.xml.HandballModelReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/56_jhandballmoves/evosuite-files/evosuite.properties
* Connecting to master process on port 5276
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:06:36.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:06:36.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:06:36.733 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:06:36.852 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:06:36.866 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:06:36.874 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class visu.handball.moves.xml.HandballModelReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 206
* Using seed 1710234394000
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 85 / 206
[Progress:>                             1%] [Cov:================>                  48%][Progress:>                             2%] [Cov:=================>                 49%][Progress:=>                            5%] [Cov:=================>                 51%][Progress:===>                          11%] [Cov:=================>                 51%][Progress:===>                          11%] [Cov:=================>                 51%][Progress:===>                          11%] [Cov:=================>                 51%][Progress:===>                          12%] [Cov:=================>                 51%][Progress:===>                          12%] [Cov:=================>                 51%][Progress:=====>                        17%] [Cov:=================>                 51%][Progress:=====>                        18%] [Cov:=================>                 51%][Progress:======>                       21%] [Cov:=================>                 51%][Progress:======>                       21%] [Cov:=================>                 51%][Progress:======>                       21%] [Cov:=================>                 51%][Progress:======>                       22%] [Cov:=================>                 51%][Progress:======>                       22%] [Cov:=================>                 51%][Progress:======>                       22%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:========>                     29%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:==========>                   34%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:===============>              52%] [Cov:==================>                52%][Progress:==================>           62%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=======================>      79%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:=============================>97%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%]
* Search finished after 102s and 68 generations, 14604 statements, best individual has fitness: 122.0
* Generated before the refinement 11 tests with total length 32
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null)
statement is: readFromXml()Lvisu/handball/moves/model/HandballModel; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.model.HandballModel
statement code is: HandballModel readFromXml = handballModelReader.readFromXml()
test data is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int playerAge = 18;
        String playerName = "John Smith";
        double playerWeight = 60.0;
        char playerPosition = 'F';
    }
}
statement is: int playerAge = 18, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String playerName = "John Smith", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double playerWeight = 60.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char playerPosition = 'F', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 18
* this is vulnerable: String string = "John Smith"
* this is vulnerable: double _double = 60.0
* this is vulnerable: char _char = 'F'
TestCase is: int _int = 18;
String string = "John Smith";
double _double = 60.0;
char _char = 'F';

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("-Q")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputStream()Ljava/io/InputStream; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.InputStream
statement code is: InputStream inputStream = handballModelReader.getInputStream()
test data is: MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("Test data for HandballModelReader.java");
        HandballModelReader instance = HandballModelReader.getInstance(mockFile);
        instance.getInputStream();
    }
}
statement is: MockFile mockFile = new MockFile("Test data for HandballModelReader.java"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(mockFile) target is: HandballModelReader method is: getInstance(MockFile)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.getInputStream(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputStream() target is: instance method is: getInputStream()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: getInputStream()Ljava/io/InputStream;
TestCase is: String string = "Test data for HandballModelReader.java";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("'", "")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: MockFile mockFile = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("example_file_name", "example_file_path");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        String expectedOutput = "example_output";
        String actualOutput = instance.getInputFile();
        assertEquals(expectedOutput, actualOutput);
    }
}
statement is: MockFile mockFile = new MockFile("example_file_name", "example_file_path"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: String expectedOutput = "example_output", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String actualOutput = instance.getInputFile(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputFile() target is: instance method is: getInputFile()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 3
Matched Method is: getInputFile()Ljava/io/File;
statement is: assertEquals(expectedOutput, actualOutput), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedOutput, actualOutput) target is:  method is: assertEquals(java.lang.String,java.lang.String)
* this is vulnerable: String string = "example_output"
TestCase is: String string = "example_file_name";
String string = "example_file_path";
MockFile mockFile = new MockFile(string, string);
HandballModelReader.getInstance((File) mockFile);
String string = "example_output";
((HandballModelReader) string).getInputFile();

statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) null)
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) null)
test data is: HandballModelReader.getInstance((File) null);
HandballModelReader.getInstance((File) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HandballModelReader.getInstance(new File("model1.hbm"));
        HandballModelReader.getInstance(new File("model2.hbm"));
    }
}
statement is: HandballModelReader.getInstance(new File("model1.hbm")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(new File("model1.hbm")) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: HandballModelReader.getInstance(new File("model2.hbm")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(new File("model2.hbm")) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: File file = null;
HandballModelReader.getInstance(file);
File file = null;
HandballModelReader.getInstance(file);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("-Q")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null)
test data is: MockFile mockFile = new MockFile("-Q");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((InputStream) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("a.txt");
        HandballModelReader.getInstance(mockFile);
        HandballModelReader.getInstance(new FileInputStream(mockFile));
    }
}
statement is: MockFile mockFile = new MockFile("a.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader.getInstance(mockFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(mockFile) target is: HandballModelReader method is: getInstance(MockFile)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: HandballModelReader.getInstance(new FileInputStream(mockFile)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(new FileInputStream(mockFile)) target is: HandballModelReader method is: getInstance(FileInputStream)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "a.txt";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
MockFile mockFile = null;
HandballModelReader.getInstance((File) mockFile);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: readFromXml()Lvisu/handball/moves/model/HandballModel; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.model.HandballModel
statement code is: HandballModel readFromXml = handballModelReader.readFromXml()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.readFromXml();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream(new StringReader("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + ((((("<handball-model>\n" + "  <team name=\"Team A\">\n") + "    <player id=\"1\">John Doe</player>\n") + "    <player id=\"2\">Jane Smith</player>\n") + "  </team>\n") + "</handball-model>")));
        HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream)));
        instance.readFromXml();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(new StringReader("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + ((((("<handball-model>\n" + "  <team name=\"Team A\">\n") + "    <player id=\"1\">John Doe</player>\n") + "    <player id=\"2\">Jane Smith</player>\n") + "  </team>\n") + "</handball-model>"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (pipedInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.readFromXml(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.readFromXml() target is: instance method is: readFromXml()
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: readFromXml()Lvisu/handball/moves/model/HandballModel;
TestCase is: PipedInputStream pipedInputStream = null;
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
instance.readFromXml();

statement is: org.evosuite.testcase.statements.ArrayStatement@9912b3b0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: setInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handballModelReader.setInputStream(arg0)
test data is: byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.setInputStream(byteArrayInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4 };// This byte array represents the input data for the test case.

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (byteArrayInputStream)));
        instance.setInputStream(byteArrayInputStream);
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4 }// This byte array represents the input data for the test case.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 1, 2, 3, 4 } Elements: [1, 2, 3, 4]
lengths: [0] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.setInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputStream(byteArrayInputStream) target is: instance method is: setInputStream(ByteArrayInputStream)
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 2, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: setInputStream(Ljava/io/InputStream;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: ByteArrayInputStream byteArrayInputStream = null;
HandballModelReader.getInstance((InputStream) byteArrayInputStream);
ByteArrayInputStream byteArrayInputStream = null;
((HandballModelReader) byteArrayInputStream).setInputStream(byteArrayInputStream);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("-Q")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: setInputFile(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: handballModelReader.setInputFile(arg0)
test data is: MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("-Q");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        instance.setInputFile(mockFile);
        // Improved test data:
        MockFile mockFile = new MockFile("data/test_file.txt");
        HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile)));
        instance.setInputFile(mockFile);
    }
}
statement is: MockFile mockFile = new MockFile("-Q"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.setInputFile(mockFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputFile(mockFile) target is: instance method is: setInputFile(MockFile)
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: setInputFile(Ljava/io/File;)V
statement is: // Improved test data:
MockFile mockFile = new MockFile("data/test_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((File) (mockFile))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((File) (mockFile))) target is: HandballModelReader method is: getInstance(File)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.setInputFile(mockFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.setInputFile(mockFile) target is: instance method is: setInputFile(MockFile)
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 6
Matched Method is: setInputFile(Ljava/io/File;)V
TestCase is: String string = "-Q";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);
String string = "data/test_file.txt";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/io/File;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile((File) null, "")
statement is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((File) arg0)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile inputFile = (MockFile)handballModelReader.getInputFile()
test data is: MockFile mockFile = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile(new File("path/to/file1"), "file1");
        HandballModelReader instance = HandballModelReader.getInstance(mockFile);
        instance.getInputFile();
        MockFile mockFile2 = new MockFile(new File("path/to/file2"), "file2");
        HandballModelReader instance2 = HandballModelReader.getInstance(mockFile2);
        instance2.getInputFile();
    }
}
statement is: MockFile mockFile = new MockFile(new File("path/to/file1"), "file1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(mockFile) target is: HandballModelReader method is: getInstance(MockFile)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance.getInputFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputFile() target is: instance method is: getInputFile()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 2
Matched Method is: getInputFile()Ljava/io/File;
statement is: MockFile mockFile2 = new MockFile(new File("path/to/file2"), "file2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance2 = HandballModelReader.getInstance(mockFile2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(mockFile2) target is: HandballModelReader method is: getInstance(MockFile)
Matched Method is: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader;
statement is: instance2.getInputFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance2.getInputFile() target is: instance2 method is: getInputFile()
source statement: getInstance(Ljava/io/File;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 1, type visu.handball.moves.xml.HandballModelReaderindex is: 6
Matched Method is: getInputFile()Ljava/io/File;
TestCase is: String string = "file1";
MockFile mockFile = new MockFile((File) string, "");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();
String string = "file2";
MockFile mockFile = new MockFile((File) string, "");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();

statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null)
statement is: getInputFile()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File inputFile = handballModelReader.getInputFile()
test data is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    private static final String DEFAULT_FILENAME = "handball_model_customized.json";

    public static HandballModelReader getInstance(InputStream inputStream) {
        return new HandballModelReader();
    }

    public InputStream getInputFile() {
        // returns a file stream for the customized model file }}
    }
}
statement is: // returns a file stream for the customized model file }}, class spoon.support.reflect.code.CtCommentImpl
statement is: return new HandballModelReader(), class spoon.support.reflect.code.CtReturnImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@d1a92f2f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, (byte)0, (-1))
statement is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class visu.handball.moves.xml.HandballModelReader
statement code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0)
statement is: getInputStream()Ljava/io/InputStream; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream inputStream = (ByteArrayInputStream)handballModelReader.getInputStream()
test data is: byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)0, (-1));
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5 };// Improved test data for byte array

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);// Improved test data for ByteArrayInputStream

        HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (byteArrayInputStream)));// Improved test data for HandballModelReader

        instance.getInputStream();
    }
}
statement is: byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5 }// Improved test data for byte array
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ 0, 1, 2, 3, 4, 5 } Elements: [0, 1, 2, 3, 4, 5]
lengths: [6] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray)// Improved test data for ByteArrayInputStream
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HandballModelReader instance = HandballModelReader.getInstance(((InputStream) (byteArrayInputStream)))// Improved test data for HandballModelReader
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HandballModelReader.getInstance(((InputStream) (byteArrayInputStream))) target is: HandballModelReader method is: getInstance(InputStream)
Matched Method is: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: instance.getInputStream(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: instance.getInputStream() target is: instance method is: getInputStream()
source statement: getInstance(Ljava/io/InputStream;)Lvisu/handball/moves/xml/HandballModelReader; callee: VariableReference: Statement 2, type visu.handball.moves.xml.HandballModelReaderindex is: 1
Matched Method is: getInputStream()Ljava/io/InputStream;
TestCase Could not be added: getInputStream()Ljava/io/InputStream;
TestCase is: ByteArrayInputStream byteArrayInputStream = null;
HandballModelReader.getInstance((InputStream) byteArrayInputStream);

* test suite isTestSuite: 21
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
MockFile mockFile = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 3: 
HandballModelReader.getInstance((File) null);
HandballModelReader.getInstance((File) null);
Test 4: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((InputStream) null);
Test 5: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 6: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.setInputStream(byteArrayInputStream);
Test 7: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 8: 
MockFile mockFile = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 9: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 10: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)0, (-1));
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();
Test 11: 

Test 12: 
MockFile mockFile = new MockFile("Test data for HandballModelReader.java");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

Test 13: 
MockFile mockFile = new MockFile("example_file_name", "example_file_path");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader)"example_file_path").getInputFile();

Test 14: 
HandballModelReader.getInstance((File) null);
HandballModelReader.getInstance((File) null);

Test 15: 
MockFile mockFile = new MockFile("a.txt");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) null);

Test 16: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

Test 17: 
HandballModelReader.getInstance((InputStream) null);
ByteArrayInputStream byteArrayInputStream = null;
((HandballModelReader) byteArrayInputStream).setInputStream(byteArrayInputStream);

Test 18: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);
String string = "data/test_file.txt";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);

Test 19: 
MockFile mockFile = new MockFile((File) "file1", "");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();
String string = "file2";
MockFile mockFile = new MockFile((File) string, "");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();

Test 20: 
HandballModelReader.getInstance((InputStream) null);


* Generated after the refinement and before minimization 21 tests with total length 63
* test suite isTestSuite: 21
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
MockFile mockFile = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 3: 
HandballModelReader.getInstance((File) null);
HandballModelReader.getInstance((File) null);
Test 4: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((InputStream) null);
Test 5: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 6: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.setInputStream(byteArrayInputStream);
Test 7: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 8: 
MockFile mockFile = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 9: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 10: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)0, (-1));
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();
Test 11: 

Test 12: 
MockFile mockFile = new MockFile("Test data for HandballModelReader.java");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputStream();

Test 13: 
MockFile mockFile = new MockFile("example_file_name", "example_file_path");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader)"example_file_path").getInputFile();

Test 14: 
HandballModelReader.getInstance((File) null);
HandballModelReader.getInstance((File) null);

Test 15: 
MockFile mockFile = new MockFile("a.txt");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((File) null);

Test 16: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.readFromXml();

Test 17: 
HandballModelReader.getInstance((InputStream) null);
ByteArrayInputStream byteArrayInputStream = null;
((HandballModelReader) byteArrayInputStream).setInputStream(byteArrayInputStream);

Test 18: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);
String string = "data/test_file.txt";
MockFile mockFile = new MockFile(string);
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).setInputFile(mockFile);

Test 19: 
MockFile mockFile = new MockFile((File) "file1", "");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();
String string = "file2";
MockFile mockFile = new MockFile((File) string, "");
HandballModelReader.getInstance((File) mockFile);
((HandballModelReader) mockFile).getInputFile();

Test 20: 
HandballModelReader.getInstance((InputStream) null);


* Minimizing test suite
* test suite isTestSuite: 11
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
HandballModelReader.getInstance((File) null);
HandballModelReader.getInstance((File) null);
Test 4: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader.getInstance((File) mockFile);
HandballModelReader.getInstance((InputStream) null);
Test 5: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 6: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.setInputStream(byteArrayInputStream);
Test 7: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 8: 
MockFile mockFile = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 9: 
MockFile mockFile = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 10: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)0, (-1));
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 31
* Number of covered goals: 11
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 44
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 31
* Number of covered goals: 11
* Generated 11 tests with total length 32
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testReadFromXmlWithValidInputReturnsHandballModel
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
InputStream inputStream = instance.getInputStream();
assertNull(inputStream);


** It was a parseable test case! 
refined test name is: testGetInputStreamForInvalidFileName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
File inputFile = instance.getInputFile();
assertNull(inputFile);


** It was a parseable test case! 
refined test name is: testGetInputFileWithNoInputStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) arg0);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testReadFromXmlHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
instance.setInputFile(arg0);
assertEquals(0L, arg0.getTotalSpace());


** It was a parseable test case! 
refined test name is: testNegativeTotalSpace
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
File inputFile = instance.getInputFile();
assertTrue(inputFile.isFile());


** It was a parseable test case! 
refined test name is: testCreateInstanceWithMockFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockFile arg0 = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) arg0);
File inputFile = instance.getInputFile();
assertTrue(inputFile.canRead());


** It was a parseable test case! 
refined test name is: testCanReadInputFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.088 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.117 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.184 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.185 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.293 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.350 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.401 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.401 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.449 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.508 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.509 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.634 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:14:26.775 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:26.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
[MASTER] 09:14:26.921 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
MockFile mockFile = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
MockFile mockFile = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 8: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)0, (-1));
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputStream();
Test 2: 
HandballModelReader instance = HandballModelReader.getInstance((InputStream) null);
instance.getInputFile();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
HandballModelReader instance = HandballModelReader.getInstance((InputStream) pipedInputStream);
// Undeclared exception!
try { 
  instance.readFromXml();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 4: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.setInputStream(byteArrayInputStream);
Test 5: 
MockFile mockFile = new MockFile("-Q");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.setInputFile(mockFile);
Test 6: 
MockFile mockFile = new MockFile("'", "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 7: 
MockFile mockFile = new MockFile((File) null, "");
HandballModelReader instance = HandballModelReader.getInstance((File) mockFile);
instance.getInputFile();
Test 8: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)0, (-1));
HandballModelReader instance = HandballModelReader.getInstance((InputStream) byteArrayInputStream);
instance.getInputStream();

[MASTER] 09:14:28.475 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 44
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 31
* Number of covered goals: 9
* Generated 9 tests with total length 27
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 09:14:28.501 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 09:14:28.861 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.388 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.464 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.544 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.546 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.645 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.647 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:14:29.692 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.693 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 09:14:29.773 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.775 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 09:14:29.851 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5909487763954760703.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:14:29.852 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5909487763954760703.jar
* Writing tests to file
[MASTER] 09:14:29.853 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HandballModelReader_ESTest' to evosuite-tests
* Writing JUnit test case 'HandballModelReader_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
* Done!

* Computation finished
