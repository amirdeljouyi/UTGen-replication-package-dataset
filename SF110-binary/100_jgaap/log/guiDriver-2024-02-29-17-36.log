* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: guiDriver
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/100_jgaap/evosuite-files/evosuite.properties
* Connecting to master process on port 7138
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:36:06.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:36:06.746 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:36:06.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:36:07.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:36:07.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:36:07.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:36:08.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:36:08.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:36:08.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:36:08.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:36:08.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:36:08.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:36:08.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:36:08.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:36:08.116 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:36:08.150 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:36:08.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class guiDriver
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 214
* Using seed 1709228164840
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 122 / 214
[Progress:>                             2%] [Cov:===========>                       34%][Progress:>                             3%] [Cov:==================>                54%][Progress:>                             3%] [Cov:===================>               55%][Progress:=>                            4%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:======================>            65%][Progress:==>                           9%] [Cov:======================>            65%][Progress:===>                          10%] [Cov:======================>            65%][Progress:===>                          10%] [Cov:======================>            65%][Progress:===>                          10%] [Cov:======================>            65%][Progress:===>                          11%] [Cov:======================>            65%][Progress:===>                          11%] [Cov:======================>            65%][Progress:===>                          11%] [Cov:======================>            65%][Progress:===>                          12%] [Cov:======================>            65%][Progress:===>                          12%] [Cov:======================>            65%][Progress:===>                          12%] [Cov:======================>            65%][Progress:===>                          13%] [Cov:======================>            65%][Progress:===>                          13%] [Cov:======================>            65%][Progress:===>                          13%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:======================>            65%][Progress:=====>                        17%] [Cov:======================>            65%][Progress:=====>                        17%] [Cov:======================>            65%][Progress:=====>                        17%] [Cov:======================>            65%][Progress:=====>                        17%] [Cov:======================>            65%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:=====>                        19%] [Cov:======================>            65%][Progress:=====>                        19%] [Cov:======================>            65%][Progress:=====>                        19%] [Cov:======================>            65%][Progress:=====>                        19%] [Cov:======================>            65%][Progress:=====>                        19%] [Cov:======================>            65%][Progress:=====>                        19%] [Cov:======================>            65%][Progress:======>                       20%] [Cov:======================>            65%][Progress:======>                       20%] [Cov:======================>            65%][Progress:======>                       20%] [Cov:======================>            65%][Progress:======>                       20%] [Cov:======================>            65%][Progress:======>                       21%] [Cov:======================>            65%][Progress:======>                       21%] [Cov:======================>            65%][Progress:======>                       21%] [Cov:======================>            65%][Progress:======>                       22%] [Cov:======================>            65%][Progress:======>                       22%] [Cov:======================>            65%][Progress:======>                       22%] [Cov:======================>            65%][Progress:======>                       22%] [Cov:======================>            65%][Progress:======>                       23%] [Cov:======================>            65%][Progress:======>                       23%] [Cov:======================>            65%][Progress:======>                       23%] [Cov:======================>            65%][Progress:======>                       23%] [Cov:======================>            65%][Progress:=======>                      24%] [Cov:======================>            65%][Progress:=======>                      24%] [Cov:======================>            65%][Progress:=======>                      24%] [Cov:======================>            65%][Progress:=======>                      24%] [Cov:======================>            65%][Progress:=======>                      24%] [Cov:======================>            65%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      26%] [Cov:======================>            65%][Progress:=======>                      26%] [Cov:======================>            65%][Progress:=======>                      26%] [Cov:======================>            65%][Progress:=======>                      26%] [Cov:======================>            65%][Progress:=======>                      26%] [Cov:======================>            65%][Progress:========>                     27%] [Cov:======================>            65%][Progress:========>                     27%] [Cov:======================>            65%][Progress:========>                     27%] [Cov:======================>            65%][Progress:========>                     27%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     29%] [Cov:======================>            65%][Progress:========>                     29%] [Cov:======================>            65%][Progress:========>                     29%] [Cov:======================>            65%][Progress:========>                     29%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    32%] [Cov:======================>            65%][Progress:=========>                    32%] [Cov:======================>            65%][Progress:=========>                    32%] [Cov:======================>            65%][Progress:=========>                    32%] [Cov:======================>            65%][Progress:=========>                    32%] [Cov:======================>            65%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:==========>                   34%] [Cov:======================>            65%][Progress:==========>                   34%] [Cov:======================>            65%][Progress:==========>                   34%] [Cov:======================>            65%][Progress:==========>                   34%] [Cov:======================>            65%][Progress:==========>                   34%] [Cov:======================>            65%][Progress:==========>                   34%] [Cov:======================>            65%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][MASTER] 17:36:44.972 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             55%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:================>             56%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            57%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            58%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:=================>            59%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           60%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           61%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           62%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:==================>           63%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          64%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          65%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:===================>          66%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        70%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        71%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        72%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:=====================>        73%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][MASTER] 17:37:24.037 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       75%] [Cov:======================>            65%][Progress:======================>       76%] [Cov:======================>            65%][Progress:======================>       76%] [Cov:======================>            65%][Progress:======================>       76%] [Cov:======================>            65%][Progress:======================>       76%] [Cov:======================>            65%][Progress:======================>       76%] [Cov:=======================>           68%][Progress:======================>       76%] [Cov:=======================>           68%][Progress:======================>       76%] [Cov:=======================>           68%][Progress:======================>       76%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      77%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     81%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     82%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   89%] [Cov:========================>          69%][Progress:==========================>   89%] [Cov:========================>          69%][Progress:==========================>   89%] [Cov:========================>          69%][Progress:==========================>   89%] [Cov:========================>          69%][Progress:==========================>   89%] [Cov:========================>          69%][Progress:==========================>   89%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 95%] [Cov:========================>          69%][Progress:============================> 95%] [Cov:========================>          69%][Progress:============================> 95%] [Cov:========================>          69%][Progress:============================> 95%] [Cov:========================>          69%][Progress:============================> 95%] [Cov:========================>          69%][Progress:============================> 95%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>97%] [Cov:========================>          69%][Progress:=============================>98%] [Cov:========================>          69%][Progress:=============================>98%] [Cov:========================>          69%][Progress:=============================>98%] [Cov:========================>          69%][Progress:=============================>98%] [Cov:========================>          69%][Progress:=============================>98%] [Cov:========================>          69%][Progress:=============================>98%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:=============================>99%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%][Progress:==============================100%] [Cov:========================>          69%]
* Search finished after 101s and 609 generations, 318827 statements, best individual has fitness: 41.0
* Generated before the refinement 10 tests with total length 78
statement is: jgaapGUI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jgaapGUI
statement code is: jgaapGUI _jgaapGUI = new jgaapGUI()
statement is: org.evosuite.testcase.statements.FieldStatement@8d001d24 type is: class org.evosuite.testcase.statements.FieldStatement return type class guiDriver
statement code is: guiDriver _guiDriver = _jgaapGUI.driver
statement is: javax.swing.JTabbedPane()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTabbedPane
statement code is: JTabbedPane jTabbedPane = new JTabbedPane()
statement is: javax.swing.JProgressBar(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JProgressBar
statement code is: JProgressBar jProgressBar = new JProgressBar(0)
statement is: createEventSetDriver(Ljava/lang/String;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)LguiDriver$createEventSetDriver; type is: class org.evosuite.testcase.statements.MethodStatement return type class guiDriver$createEventSetDriver
statement code is: guiDriver.createEventSetDriver createEventSetDriver = _guiDriver.createEventSetDriver("", arg1, arg2)
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiDriver_createEventSetDriver.run()
test data is: jgaapGUI _jgaapGUI = new jgaapGUI();
guiDriver _guiDriver = _jgaapGUI.driver;
JTabbedPane jTabbedPane = new JTabbedPane();
JProgressBar jProgressBar = new JProgressBar(0);
guiDriver.createEventSetDriver createEventSetDriver = _guiDriver.createEventSetDriver("", jTabbedPane, jProgressBar);
createEventSetDriver.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        jgaapGUI _jgaapGUI = new jgaapGUI();
        guiDriver _guiDriver = _jgaapGUI.driver;
        JTabbedPane jTabbedPane = new JTabbedPane("My Tabbed Pane");
        JProgressBar jProgressBar = new JProgressBar(0, 100);
        guiDriver.createEventSetDriver createEventSetDriver = _guiDriver.createEventSetDriver("My Event Set", jTabbedPane, jProgressBar);
        createEventSetDriver.run();
    }
}
statement is: jgaapGUI _jgaapGUI = new jgaapGUI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: guiDriver _guiDriver = _jgaapGUI.driver, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: _jgaapGUI.driver is _jgaapGUI
CtField is: guiDriver jgaapGUI.driver guiDriver driver
statement is: JTabbedPane jTabbedPane = new JTabbedPane("My Tabbed Pane"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JProgressBar jProgressBar = new JProgressBar(0, 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: createEventSetDriver createEventSetDriver = _guiDriver.createEventSetDriver("My Event Set", jTabbedPane, jProgressBar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: _guiDriver.createEventSetDriver("My Event Set", jTabbedPane, jProgressBar) target is: _guiDriver method is: createEventSetDriver(java.lang.String,JTabbedPane,JProgressBar)
statement is: createEventSetDriver.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: createEventSetDriver.run() target is: createEventSetDriver method is: run()
TestCase is: jgaapGUI _jgaapGUI = new jgaapGUI();

statement is: guiDriver()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class guiDriver
statement code is: guiDriver _guiDriver = new guiDriver()
statement is: javax.swing.JTabbedPane()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTabbedPane
statement code is: JTabbedPane jTabbedPane = new JTabbedPane()
statement is: javax.swing.JProgressBar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JProgressBar
statement code is: JProgressBar jProgressBar = new JProgressBar()
statement is: runStatisticalAnalysisDriver(Ljava/lang/String;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)LguiDriver$runStatisticalAnalysisDriver; type is: class org.evosuite.testcase.statements.MethodStatement return type class guiDriver$runStatisticalAnalysisDriver
statement code is: guiDriver.runStatisticalAnalysisDriver runStatisticalAnalysisDriver = _guiDriver.runStatisticalAnalysisDriver("cr4hM$3qQhcV$*", arg1, arg2)
statement is: getResults()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String results = guiDriver_runStatisticalAnalysisDriver.getResults()
test data is: guiDriver _guiDriver = new guiDriver();
JTabbedPane jTabbedPane = new JTabbedPane();
JProgressBar jProgressBar = new JProgressBar();
guiDriver.runStatisticalAnalysisDriver runStatisticalAnalysisDriver = _guiDriver.runStatisticalAnalysisDriver("cr4hM$3qQhcV$*", jTabbedPane, jProgressBar);
runStatisticalAnalysisDriver.getResults();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        guiDriver _guiDriver = new guiDriver();
        JTabbedPane jTabbedPane = new JTabbedPane();
        JProgressBar jProgressBar = new JProgressBar();
        // Improved test data:
        int[] dataSet = new int[]{ 1, 2, 3, 4, 5 };
        String analysisType = "regression";
        guiDriver.runStatisticalAnalysisDriver runStatisticalAnalysisDriver = _guiDriver.runStatisticalAnalysisDriver("cr4hM$3qQhcV$*", jTabbedPane, jProgressBar);
        runStatisticalAnalysisDriver.getResults(dataSet, analysisType);
    }
}
statement is: guiDriver _guiDriver = new guiDriver(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTabbedPane jTabbedPane = new JTabbedPane(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JProgressBar jProgressBar = new JProgressBar(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
int[] dataSet = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String analysisType = "regression", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: runStatisticalAnalysisDriver runStatisticalAnalysisDriver = _guiDriver.runStatisticalAnalysisDriver("cr4hM$3qQhcV$*", jTabbedPane, jProgressBar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: _guiDriver.runStatisticalAnalysisDriver("cr4hM$3qQhcV$*", jTabbedPane, jProgressBar) target is: _guiDriver method is: runStatisticalAnalysisDriver(java.lang.String,JTabbedPane,JProgressBar)
source statement: guiDriver()V callee: VariableReference: Statement 0, type guiDriverindex is: 0
Matched Method is: runStatisticalAnalysisDriver(Ljava/lang/String;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)LguiDriver$runStatisticalAnalysisDriver;
statement is: runStatisticalAnalysisDriver.getResults(dataSet, analysisType), class spoon.support.reflect.code.CtInvocationImpl
invocation is: runStatisticalAnalysisDriver.getResults(dataSet, analysisType) target is: runStatisticalAnalysisDriver method is: getResults(int[],java.lang.String)
* this is vulnerable: String string = "regression"
TestCase is: guiDriver _guiDriver = new guiDriver();
JTabbedPane jTabbedPane = new JTabbedPane();
JProgressBar jProgressBar = new JProgressBar();
String string = "regression";
String string = "cr4hM$3qQhcV$*";
_guiDriver.runStatisticalAnalysisDriver(string, jTabbedPane, jProgressBar);

statement is: guiDriver()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class guiDriver
statement code is: guiDriver _guiDriver = new guiDriver()
statement is: addDocument(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: _guiDriver.addDocument("", "")
test data is: guiDriver _guiDriver = new guiDriver();
_guiDriver.addDocument("", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        guiDriver _guiDriver = new guiDriver();
        _guiDriver.addDocument("Test Document", "This is a test document.");
    }
}
statement is: guiDriver _guiDriver = new guiDriver(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _guiDriver.addDocument("Test Document", "This is a test document."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _guiDriver.addDocument("Test Document", "This is a test document.") target is: _guiDriver method is: addDocument(java.lang.String,java.lang.String)
source statement: guiDriver()V callee: VariableReference: Statement 0, type guiDriverindex is: 0
Matched Method is: addDocument(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: guiDriver _guiDriver = new guiDriver();
String string = "Test Document";
String string = "This is a test document.";
_guiDriver.addDocument(string, string);

statement is: jgaapGUI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jgaapGUI
statement code is: jgaapGUI _jgaapGUI = new jgaapGUI()
statement is: org.evosuite.testcase.statements.FieldStatement@a0dc1b14 type is: class org.evosuite.testcase.statements.FieldStatement return type class guiDriver
statement code is: guiDriver _guiDriver = _jgaapGUI.driver
statement is: javax.swing.JTabbedPane()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTabbedPane
statement code is: JTabbedPane jTabbedPane = new JTabbedPane()
statement is: javax.swing.JProgressBar(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JProgressBar
statement code is: JProgressBar jProgressBar = new JProgressBar(0)
statement is: org.evosuite.testcase.statements.ArrayStatement@bc1d072b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.JCheckBox;
statement code is: JCheckBox[] jCheckBoxArray = new JCheckBox[4]
statement is: javax.swing.JCheckBox(Ljavax/swing/Icon;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JCheckBox
statement code is: JCheckBox jCheckBox = new JCheckBox((Icon) null, true)
statement is: org.evosuite.testcase.statements.AssignmentStatement@dfb8817b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[0] = jCheckBox
statement is: org.evosuite.testcase.statements.AssignmentStatement@c7d7f1c7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[1] = jCheckBox
statement is: org.evosuite.testcase.statements.AssignmentStatement@7a613cbe type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[2] = jCheckBox
statement is: guiDriver$preprocessEngineDriver(LguiDriver;[Ljavax/swing/JCheckBox;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class guiDriver$preprocessEngineDriver
statement code is: guiDriver.preprocessEngineDriver guiDriver_preprocessEngineDriver = arg0.new preprocessEngineDriver(arg1, arg2, arg3)
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiDriver_preprocessEngineDriver.run()
test data is: jgaapGUI _jgaapGUI = new jgaapGUI();
guiDriver _guiDriver = _jgaapGUI.driver;
JTabbedPane jTabbedPane = new JTabbedPane();
JProgressBar jProgressBar = new JProgressBar(0);
JCheckBox[] jCheckBoxArray = new JCheckBox[4];
JCheckBox jCheckBox = new JCheckBox((Icon) null, true);
jCheckBoxArray[0] = jCheckBox;
jCheckBoxArray[1] = jCheckBox;
jCheckBoxArray[2] = jCheckBox;
guiDriver.preprocessEngineDriver guiDriver_preprocessEngineDriver = _guiDriver.new preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar);
guiDriver_preprocessEngineDriver.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        jgaapGUI _jgaapGUI = new jgaapGUI();
        guiDriver _guiDriver = _jgaapGUI.driver;
        JTabbedPane jTabbedPane = new JTabbedPane();
        JProgressBar jProgressBar = new JProgressBar(0);
        // Use more descriptive examples for the primitive values and Strings
        String[] checkboxLabels = new String[]{ "Checkbox 1", "Checkbox 2", "Checkbox 3", "Checkbox 4" };
        boolean[] checkboxInitialStates = new boolean[]{ true, false, true, false };
        JCheckBox[] jCheckBoxArray = new JCheckBox[checkboxLabels.length];
        for (int i = 0; i < checkboxLabels.length; i++) {
            JCheckBox jCheckBox = new JCheckBox(checkboxLabels[i], checkboxInitialStates[i]);
            jCheckBoxArray[i] = jCheckBox;
        }
        preprocessEngineDriver guiDriver_preprocessEngineDriver = _guiDriver.new preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar);
        guiDriver_preprocessEngineDriver.run();
    }
}
statement is: jgaapGUI _jgaapGUI = new jgaapGUI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: guiDriver _guiDriver = _jgaapGUI.driver, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: _jgaapGUI.driver is _jgaapGUI
CtField is: guiDriver jgaapGUI.driver guiDriver driver
statement is: JTabbedPane jTabbedPane = new JTabbedPane(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JProgressBar jProgressBar = new JProgressBar(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Use more descriptive examples for the primitive values and Strings
String[] checkboxLabels = new String[]{ "Checkbox 1", "Checkbox 2", "Checkbox 3", "Checkbox 4" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: JCheckBox[] jCheckBoxArray = new JCheckBox[4] isAssignment: false Array: new String[]{ "Checkbox 1", "Checkbox 2", "Checkbox 3", "Checkbox 4" } Elements: ["Checkbox 1", "Checkbox 2", "Checkbox 3", "Checkbox 4"]
lengths: [4] []
statement is: boolean[] checkboxInitialStates = new boolean[]{ true, false, true, false }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: JCheckBox[] jCheckBoxArray = new JCheckBox[4] isAssignment: false Array: new boolean[]{ true, false, true, false } Elements: [true, false, true, false]
lengths: [4] []
statement is: JCheckBox[] jCheckBoxArray = new JCheckBox[checkboxLabels.length], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [checkboxLabels.length] Ct is: JCheckBox[] jCheckBoxArray = new JCheckBox[4] isAssignment: false Array: new JCheckBox[checkboxLabels.length] Elements: []
lengths: [4] [checkboxLabels.length]
Their type are: class [Ljavax.swing.JCheckBox; JCheckBox[]
statement is: for (int i = 0; i < checkboxLabels.length; i++) {
    JCheckBox jCheckBox = new JCheckBox(checkboxLabels[i], checkboxInitialStates[i]);
    jCheckBoxArray[i] = jCheckBox;
}, class spoon.support.reflect.code.CtForImpl
statement is: preprocessEngineDriver guiDriver_preprocessEngineDriver = _guiDriver.new preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: guiDriver_preprocessEngineDriver.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: guiDriver_preprocessEngineDriver.run() target is: guiDriver_preprocessEngineDriver method is: run()
TestCase is: jgaapGUI _jgaapGUI = new jgaapGUI();
JTabbedPane jTabbedPane = new JTabbedPane();
int _int = 0;
JProgressBar jProgressBar = new JProgressBar(_int);
JCheckBox[] jCheckBoxArray = new JCheckBox[4];

statement is: guiDriver()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class guiDriver
statement code is: guiDriver _guiDriver = new guiDriver()
statement is: addDocument(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: _guiDriver.addDocument("guiDriver$runStatisticalAnalysisDriver", "guiDriver$runStatisticalAnalysisDriver")
statement is: javax.swing.JTabbedPane()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTabbedPane
statement code is: JTabbedPane jTabbedPane = new JTabbedPane()
statement is: javax.swing.JProgressBar(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JProgressBar
statement code is: JProgressBar jProgressBar = new JProgressBar((-2752), (-2752))
statement is: org.evosuite.testcase.statements.ArrayStatement@fe13cab9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.JCheckBox;
statement code is: JCheckBox[] jCheckBoxArray = new JCheckBox[3]
statement is: javax.swing.tree.DefaultTreeCellRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.tree.DefaultTreeCellRenderer
statement code is: DefaultTreeCellRenderer defaultTreeCellRenderer = new DefaultTreeCellRenderer()
statement is: getClosedIcon()Ljavax/swing/Icon; type is: class org.evosuite.testcase.statements.MethodStatement return type class sun.swing.ImageIconUIResource
statement code is: ImageIconUIResource closedIcon = (ImageIconUIResource)defaultTreeCellRenderer.getClosedIcon()
statement is: javax.swing.JCheckBox(Ljavax/swing/Icon;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JCheckBox
statement code is: JCheckBox jCheckBox = new JCheckBox(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f6d55ae4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[0] = jCheckBox
statement is: javax.swing.JCheckBox(Ljavax/swing/Icon;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JCheckBox
statement code is: JCheckBox jCheckBox = new JCheckBox(arg0, true)
statement is: org.evosuite.testcase.statements.AssignmentStatement@42521fc5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[1] = jCheckBox
statement is: org.evosuite.testcase.statements.AssignmentStatement@1f17ae87 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[2] = jCheckBoxArray[1]
statement is: preprocessEngineDriver([Ljavax/swing/JCheckBox;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)LguiDriver$preprocessEngineDriver; type is: class org.evosuite.testcase.statements.MethodStatement return type class guiDriver$preprocessEngineDriver
statement code is: guiDriver.preprocessEngineDriver preprocessEngineDriver = _guiDriver.preprocessEngineDriver(arg0, arg1, arg2)
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiDriver_preprocessEngineDriver.run()
test data is: guiDriver _guiDriver = new guiDriver();
_guiDriver.addDocument("guiDriver$runStatisticalAnalysisDriver", "guiDriver$runStatisticalAnalysisDriver");
JTabbedPane jTabbedPane = new JTabbedPane();
JProgressBar jProgressBar = new JProgressBar((-2752), (-2752));
JCheckBox[] jCheckBoxArray = new JCheckBox[3];
DefaultTreeCellRenderer defaultTreeCellRenderer = new DefaultTreeCellRenderer();
ImageIconUIResource closedIcon = (ImageIconUIResource)defaultTreeCellRenderer.getClosedIcon();
JCheckBox jCheckBox = new JCheckBox(closedIcon);
jCheckBoxArray[0] = jCheckBox;
JCheckBox jCheckBox = new JCheckBox(closedIcon, true);
jCheckBoxArray[1] = jCheckBox;
jCheckBoxArray[2] = jCheckBoxArray[1];
guiDriver.preprocessEngineDriver preprocessEngineDriver = _guiDriver.preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar);
preprocessEngineDriver.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        guiDriver _guiDriver = new guiDriver();
        _guiDriver.addDocument("Statistical Analysis Preprocessing Task", "Statistical Analysis Preprocessing Task");
        JTabbedPane jTabbedPane = new JTabbedPane();
        JProgressBar jProgressBar = new JProgressBar(0, 100);
        JCheckBox[] jCheckBoxArray = new JCheckBox[3];
        DefaultTreeCellRenderer defaultTreeCellRenderer = new DefaultTreeCellRenderer();
        ImageIconUIResource closedIcon = ((ImageIconUIResource) (defaultTreeCellRenderer.getClosedIcon()));
        JCheckBox jCheckBox = new JCheckBox(closedIcon);
        jCheckBoxArray[0] = jCheckBox;
        JCheckBox jCheckBox = new JCheckBox(closedIcon, true);
        jCheckBoxArray[1] = jCheckBox;
        jCheckBoxArray[2] = jCheckBoxArray[1];
        guiDriver.preprocessEngineDriver preprocessEngineDriver = _guiDriver.preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar);
        preprocessEngineDriver.run();
    }
}
statement is: guiDriver _guiDriver = new guiDriver(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _guiDriver.addDocument("Statistical Analysis Preprocessing Task", "Statistical Analysis Preprocessing Task"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _guiDriver.addDocument("Statistical Analysis Preprocessing Task", "Statistical Analysis Preprocessing Task") target is: _guiDriver method is: addDocument(java.lang.String,java.lang.String)
source statement: guiDriver()V callee: VariableReference: Statement 0, type guiDriverindex is: 0
Matched Method is: addDocument(Ljava/lang/String;Ljava/lang/String;)V
statement is: JTabbedPane jTabbedPane = new JTabbedPane(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JProgressBar jProgressBar = new JProgressBar(0, 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JCheckBox[] jCheckBoxArray = new JCheckBox[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: JCheckBox[] jCheckBoxArray = new JCheckBox[3] isAssignment: false Array: new JCheckBox[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljavax.swing.JCheckBox; JCheckBox[]
statement is: DefaultTreeCellRenderer defaultTreeCellRenderer = new DefaultTreeCellRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageIconUIResource closedIcon = ((ImageIconUIResource) (defaultTreeCellRenderer.getClosedIcon())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((ImageIconUIResource) (defaultTreeCellRenderer.getClosedIcon())) target is: defaultTreeCellRenderer method is: getClosedIcon()
source statement: javax.swing.tree.DefaultTreeCellRenderer()V callee: VariableReference: Statement 5, type javax.swing.tree.DefaultTreeCellRendererindex is: 9
Matched Method is: getClosedIcon()Ljavax/swing/Icon;
statement is: JCheckBox jCheckBox = new JCheckBox(closedIcon), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jCheckBoxArray[0] = jCheckBox, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : jCheckBoxArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:jCheckBox Ct is: jCheckBoxArray[0] = jCheckBox
target : jCheckBoxArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@ae7a3a32
statement is: JCheckBox jCheckBox = new JCheckBox(closedIcon, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jCheckBoxArray[1] = jCheckBox, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : jCheckBoxArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:jCheckBox Ct is: jCheckBoxArray[1] = jCheckBox
target : jCheckBoxArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@e1fe0ad9
statement is: jCheckBoxArray[2] = jCheckBoxArray[1], class spoon.support.reflect.code.CtAssignmentImpl
Assigned : jCheckBoxArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:jCheckBoxArray[1] Ct is: jCheckBoxArray[2] = jCheckBoxArray[1]
target : jCheckBoxArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9d3c1cb0
statement is: preprocessEngineDriver preprocessEngineDriver = _guiDriver.preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: _guiDriver.preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar) target is: _guiDriver method is: preprocessEngineDriver(JCheckBox[],JTabbedPane,JProgressBar)
source statement: guiDriver()V callee: VariableReference: Statement 0, type guiDriverindex is: 0
Matched Method is: preprocessEngineDriver([Ljavax/swing/JCheckBox;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)LguiDriver$preprocessEngineDriver;
statement is: preprocessEngineDriver.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preprocessEngineDriver.run() target is: preprocessEngineDriver method is: run()
TestCase is: guiDriver _guiDriver = new guiDriver();
String string = "Statistical Analysis Preprocessing Task";
String string = "Statistical Analysis Preprocessing Task";
_guiDriver.addDocument(string, string);
JTabbedPane jTabbedPane = new JTabbedPane();
int _int = 0;
int _int = 100;
JProgressBar jProgressBar = new JProgressBar(_int, _int);
JCheckBox[] jCheckBoxArray = new JCheckBox[3];
DefaultTreeCellRenderer defaultTreeCellRenderer = new DefaultTreeCellRenderer();
ImageIconUIResource closedIcon = (ImageIconUIResource)((DefaultTreeCellRenderer) _int).getClosedIcon();
JCheckBox jCheckBox = new JCheckBox(closedIcon);
boolean _boolean = true;
JCheckBox jCheckBox = new JCheckBox(closedIcon, _boolean);
_guiDriver.preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar);

statement is: guiDriver()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class guiDriver
statement code is: guiDriver _guiDriver = new guiDriver()
statement is: javax.swing.JTabbedPane()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTabbedPane
statement code is: JTabbedPane jTabbedPane = new JTabbedPane()
statement is: javax.swing.JCheckBox()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JCheckBox
statement code is: JCheckBox jCheckBox = new JCheckBox()
statement is: javax.swing.JProgressBar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JProgressBar
statement code is: JProgressBar jProgressBar = new JProgressBar()
statement is: org.evosuite.testcase.statements.FieldStatement@a4195ba3 type is: class org.evosuite.testcase.statements.FieldStatement return type java.util.Vector<Document>
statement code is: Vector<Document> vector = _guiDriver.u_docs
statement is: mock(class Document) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class Document
statement code is: Document document = mock(Document.class, new ViolatedAssumptionAnswer())
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = vector.add(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@af60b68d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.JCheckBox;
statement code is: JCheckBox[] jCheckBoxArray = new JCheckBox[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a82aef2d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[0] = jCheckBox
statement is: org.evosuite.testcase.statements.AssignmentStatement@a127e444 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[1] = jCheckBox
statement is: org.evosuite.testcase.statements.AssignmentStatement@133eb9be type is: class org.evosuite.testcase.statements.AssignmentStatement return type class javax.swing.JCheckBox
statement code is: jCheckBoxArray[2] = jCheckBox
statement is: preprocessEngineDriver([Ljavax/swing/JCheckBox;Ljavax/swing/JTabbedPane;Ljavax/swing/JProgressBar;)LguiDriver$preprocessEngineDriver; type is: class org.evosuite.testcase.statements.MethodStatement return type class guiDriver$preprocessEngineDriver
statement code is: guiDriver.preprocessEngineDriver preprocessEngineDriver = _guiDriver.preprocessEngineDriver(arg0, arg1, arg2)
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiDriver_preprocessEngineDriver.run()
test data is: guiDriver _guiDriver = new guiDriver();
JTabbedPane jTabbedPane = new JTabbedPane();
JCheckBox jCheckBox = new JCheckBox();
JProgressBar jProgressBar = new JProgressBar();
Vector<Document> vector = _guiDriver.u_docs;
Document document = mock(Document.class, new ViolatedAssumptionAnswer());
vector.add(document);
JCheckBox[] jCheckBoxArray = new JCheckBox[5];
jCheckBoxArray[0] = jCheckBox;
jCheckBoxArray[1] = jCheckBox;
jCheckBoxArray[2] = jCheckBox;
guiDriver.preprocessEngineDriver preprocessEngineDriver = _guiDriver.preprocessEngineDriver(jCheckBoxArray, jTabbedPane, jProgressBar);
preprocessEngineDriver.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        // Create a mock Document object with a more descriptive name
        Document document = mock(Document.class, "my-document");
        // Use a vector of size 5 for the test
        Vector<Document> vector = new Vector<>();
        vector.add(document);
        vector.add(document);
        vector.add(document);
        vector.add(document);
        vector.add(document);
        // Create an array of JCheckBox objects with different names
        JCheckBox[] jCheckBoxArray = new JCheckBox[5];
        jCheckBoxArray[0] = mock(JCheckBox.class, "checkbox-1");
        jCheckBoxArray[1] = mock(JCheckBox.class, "checkbox-2");
        jCheckBoxArray[2] = mock(JCheckBox.class, "checkbox-3");
        jCheckBoxArray[3] = mock(JCheckBox.class, "checkbox-4");
        jCheckBoxArray[4] = mock(JCheckBox.class, "checkbox-5");
        // Create a JTabbedPane object with a more descriptive name
        JTabbedPane jTabbedPane = new JTabbedPane();
        // Create a JProgressBar object with a more descriptive name
        JProgressBar jProgressBar = mock(JProgressBar.class, "my-progress-bar");
    }
}
statement is: // Improved test data
// Create a mock Document object with a more descriptive name
Document document = mock(Document.class, "my-document"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Document.class, "my-document") target is:  method is: mock(java.lang.Class,java.lang.String)
target name is: Document argument is: Document.class
Matched Method is: mock(class Document)
* Computation finished
