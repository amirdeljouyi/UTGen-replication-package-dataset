* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: kvp
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/100_jgaap/evosuite-files/evosuite.properties
* Connecting to master process on port 15523
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class kvp
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 33
* Using seed 1709228637448
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 18 / 33
[Progress:>                             3%] [Cov:============================>      81%][Progress:>                             3%] [Cov:================================>  93%][Progress:>                             3%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         16%] [Cov:================================>  93%][Progress:====>                         16%] [Cov:================================>  93%][Progress:====>                         16%] [Cov:================================>  93%][Progress:====>                         16%] [Cov:================================>  93%][Progress:====>                         16%] [Cov:================================>  93%][Progress:====>                         16%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:=====>                        17%] [Cov:================================>  93%][Progress:======>                       20%] [Cov:================================>  93%][Progress:======>                       21%] [Cov:================================>  93%][Progress:=======>                      24%] [Cov:================================>  93%][Progress:=======>                      24%] [Cov:================================>  93%][Progress:=======>                      24%] [Cov:================================>  93%][Progress:=======>                      24%] [Cov:================================>  93%][Progress:=======>                      24%] [Cov:================================>  93%][Progress:=======>                      24%] [Cov:================================>  93%][Progress:=======>                      25%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:==========>                   35%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                44%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:=====================>        71%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       74%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:=========================>    85%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:===========================>  93%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:============================> 94%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%]
* Search finished after 101s and 242 generations, 54959 statements, best individual has fitness: 2.0
* Generated before the refinement 4 tests with total length 16
statement is: valueOf(I)Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer valueOf = Integer.valueOf((-1938))
statement is: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class kvp
statement code is: kvp _kvp = new kvp(arg1, arg1)
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = _kvp.toString()
test data is: Integer valueOf = Integer.valueOf((-1938));
kvp _kvp = new kvp(valueOf, valueOf);
_kvp.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer valueOf = Integer.valueOf(-1938);// Changed to -1938 to make it more representative of a negative integer value

        kvp _kvp = new kvp(valueOf, valueOf);
        _kvp.toString();
    }
}
statement is: Integer valueOf = Integer.valueOf(-1938)// Changed to -1938 to make it more representative of a negative integer value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Integer.valueOf(-1938) target is: Integer method is: valueOf(int)
Matched Method is: valueOf(I)Ljava/lang/Integer;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: kvp _kvp = new kvp(valueOf, valueOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp.toString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _kvp.toString() target is: _kvp method is: toString()
source statement: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V callee: VariableReference: Statement 1, type kvpindex is: 2
Matched Method is: toString()Ljava/lang/String;
TestCase is: int _int = null;
Integer valueOf = Integer.valueOf(_int);
kvp _kvp = new kvp(valueOf, valueOf);
valueOf.toString();

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(1239)
statement is: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class kvp
statement code is: kvp _kvp = new kvp((Object) null, arg1)
statement is: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class kvp
statement code is: kvp _kvp = new kvp("", arg1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@657784db type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: _kvp.value = (-1)
statement is: compareTo(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compareTo = _kvp.compareTo(arg0)
test data is: Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
kvp _kvp = new kvp("", integer);
_kvp.value = (-1);
_kvp.compareTo(_kvp);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(10);
        kvp _kvp = new kvp(((Object) (null)), integer);
        kvp _kvp = new kvp("", integer);
        _kvp.value = -5;
        _kvp.compareTo(_kvp);
    }
}
statement is: Integer integer = new Integer(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: kvp _kvp = new kvp(((Object) (null)), integer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: kvp _kvp = new kvp("", integer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp.value = -5, class spoon.support.reflect.code.CtAssignmentImpl
statement is: _kvp.compareTo(_kvp), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _kvp.compareTo(_kvp) target is: _kvp method is: compareTo(kvp)
source statement: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V callee: VariableReference: Statement 1, type kvpindex is: 4
Matched Method is: compareTo(Ljava/lang/Object;)I
TestCase is: int _int = 10;
Integer integer = new Integer(_int);
kvp _kvp = new kvp(integer, (Integer) _int);
String string = "";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(1239)
statement is: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class kvp
statement code is: kvp _kvp = new kvp((Object) null, arg1)
statement is: compareTo(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compareTo = arg0.compareTo(arg0)
test data is: Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
_kvp.compareTo(_kvp);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer1 = new Integer(0);
        kvp _kvp1 = new kvp(((Object) ("This is a string value")), integer1);
        _kvp1.compareTo(_kvp1);// Expected result: 0

        Integer integer2 = new Integer(-1);
        kvp _kvp2 = new kvp(((Object) ("This is another string value")), integer2);
        _kvp2.compareTo(_kvp2);// Expected result: -1

        Integer integer3 = new Integer(1);
        kvp _kvp3 = new kvp(((Object) ("This is a third string value")), integer3);
        _kvp3.compareTo(_kvp3);// Expected result: 1 }}

    }
}
statement is: Integer integer1 = new Integer(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: kvp _kvp1 = new kvp(((Object) ("This is a string value")), integer1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp1.compareTo(_kvp1)// Expected result: 0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: _kvp1.compareTo(_kvp1)// Expected result: 0
 target is: _kvp1 method is: compareTo(kvp)
source statement: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V callee: VariableReference: Statement 1, type kvpindex is: 3
Matched Method is: compareTo(Ljava/lang/Object;)I
statement is: Integer integer2 = new Integer(-1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: kvp _kvp2 = new kvp(((Object) ("This is another string value")), integer2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp2.compareTo(_kvp2)// Expected result: -1
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: _kvp2.compareTo(_kvp2)// Expected result: -1
 target is: _kvp2 method is: compareTo(kvp)
source statement: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V callee: VariableReference: Statement 1, type kvpindex is: 7
Matched Method is: compareTo(Ljava/lang/Object;)I
statement is: Integer integer3 = new Integer(1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: kvp _kvp3 = new kvp(((Object) ("This is a third string value")), integer3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp3.compareTo(_kvp3)// Expected result: 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: _kvp3.compareTo(_kvp3)// Expected result: 1 }}
 target is: _kvp3 method is: compareTo(kvp)
source statement: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V callee: VariableReference: Statement 1, type kvpindex is: 12
Matched Method is: compareTo(Ljava/lang/Object;)I
TestCase is: int _int = 0;
Integer integer = new Integer(_int);
String string = "This is a string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);
Integer integer = new Integer(_int);
String string = "This is another string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);
int _int = 1;
Integer integer = new Integer(_int);
String string = "This is a third string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(970)
statement is: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class kvp
statement code is: kvp _kvp = new kvp((Object) null, arg1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@4a791946 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: _kvp.value = (-1059)
statement is: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class kvp
statement code is: kvp _kvp = new kvp(arg0, arg1)
statement is: compareTo(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compareTo = _kvp.compareTo(arg0)
test data is: Integer integer = new Integer(970);
kvp _kvp = new kvp((Object) null, integer);
_kvp.value = (-1059);
kvp _kvp = new kvp(_kvp, integer);
_kvp.compareTo(_kvp);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(1234);
        kvp _kvp = new kvp(((Object) (null)), integer);
        _kvp.value = -5678;
        kvp _kvp = new kvp(_kvp, integer);
        _kvp.compareTo(_kvp);
    }
}
statement is: Integer integer = new Integer(1234), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: kvp _kvp = new kvp(((Object) (null)), integer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp.value = -5678, class spoon.support.reflect.code.CtAssignmentImpl
statement is: kvp _kvp = new kvp(_kvp, integer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _kvp.compareTo(_kvp), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _kvp.compareTo(_kvp) target is: _kvp method is: compareTo(kvp)
source statement: kvp(Ljava/lang/Object;Ljava/lang/Integer;)V callee: VariableReference: Statement 1, type kvpindex is: 3
Matched Method is: compareTo(Ljava/lang/Object;)I
TestCase is: int _int = 1234;
Integer integer = new Integer(_int);
kvp _kvp = new kvp(integer, (Integer) _int);
kvp _kvp = new kvp(_kvp, integer);
integer.compareTo(_kvp);

* test suite isTestSuite: 8
Test 0: 
Integer valueOf = Integer.valueOf((-1938));
kvp _kvp = new kvp(valueOf, valueOf);
_kvp.toString();
Test 1: 
Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
kvp _kvp = new kvp("", integer);
_kvp.value = (-1);
_kvp.compareTo(_kvp);
Test 2: 
Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
_kvp.compareTo(_kvp);
Test 3: 
Integer integer = new Integer(970);
kvp _kvp = new kvp((Object) null, integer);
_kvp.value = (-1059);
kvp _kvp = new kvp(_kvp, integer);
_kvp.compareTo(_kvp);
Test 4: 
Integer valueOf = Integer.valueOf((int) (Integer) null);
kvp _kvp = new kvp(valueOf, valueOf);
valueOf.toString();

Test 5: 
Integer integer = new Integer(10);
kvp _kvp = new kvp(integer, (Integer) 10);
kvp _kvp = new kvp("", integer);
integer.compareTo(_kvp);

Test 6: 
int _int = 0;
Integer integer = new Integer(0);
kvp _kvp = new kvp("This is a string value", integer);
integer.compareTo(_kvp);
Integer integer = new Integer(_int);
String string = "This is another string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);
int _int = 1;
Integer integer = new Integer(_int);
String string = "This is a third string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);

Test 7: 
Integer integer = new Integer(1234);
kvp _kvp = new kvp(integer, (Integer) 1234);
kvp _kvp = new kvp(_kvp, integer);
integer.compareTo(_kvp);


* Generated after the refinement and before minimization 8 tests with total length 40
* test suite isTestSuite: 8
Test 0: 
Integer valueOf = Integer.valueOf((-1938));
kvp _kvp = new kvp(valueOf, valueOf);
_kvp.toString();
Test 1: 
Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
kvp _kvp = new kvp("", integer);
_kvp.value = (-1);
_kvp.compareTo(_kvp);
Test 2: 
Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
_kvp.compareTo(_kvp);
Test 3: 
Integer integer = new Integer(970);
kvp _kvp = new kvp((Object) null, integer);
_kvp.value = (-1059);
kvp _kvp = new kvp(_kvp, integer);
_kvp.compareTo(_kvp);
Test 4: 
Integer valueOf = Integer.valueOf((int) (Integer) null);
kvp _kvp = new kvp(valueOf, valueOf);
valueOf.toString();

Test 5: 
Integer integer = new Integer(10);
kvp _kvp = new kvp(integer, (Integer) 10);
kvp _kvp = new kvp("", integer);
integer.compareTo(_kvp);

Test 6: 
int _int = 0;
Integer integer = new Integer(0);
kvp _kvp = new kvp("This is a string value", integer);
integer.compareTo(_kvp);
Integer integer = new Integer(_int);
String string = "This is another string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);
int _int = 1;
Integer integer = new Integer(_int);
String string = "This is a third string value";
kvp _kvp = new kvp(string, integer);
integer.compareTo(_kvp);

Test 7: 
Integer integer = new Integer(1234);
kvp _kvp = new kvp(integer, (Integer) 1234);
kvp _kvp = new kvp(_kvp, integer);
integer.compareTo(_kvp);


* Minimizing test suite
* test suite isTestSuite: 4
Test 0: 
Integer valueOf = Integer.valueOf((-1938));
kvp _kvp = new kvp(valueOf, valueOf);
_kvp.toString();
Test 1: 
Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
kvp _kvp = new kvp("", integer);
_kvp.value = (-1);
_kvp.compareTo(_kvp);
Test 2: 
Integer integer = new Integer(1239);
kvp _kvp = new kvp((Object) null, integer);
_kvp.compareTo(_kvp);
Test 3: 
Integer integer = new Integer(970);
kvp _kvp = new kvp((Object) null, integer);
_kvp.value = (-1059);
kvp _kvp = new kvp(_kvp, integer);
_kvp.compareTo(_kvp);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 67%
* Total number of goals: 6
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Generated 4 tests with total length 16
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg1 = Integer.valueOf((-1938));
kvp _kvp = new kvp(arg1, arg1);
String string = _kvp.toString();
assertEquals("-1938:\t-1938", string);


** It was a parseable test case! 
refined test name is: testToStringWithNegativeValues
* Compiling Tests
refined test name is: testToStringMethodWithNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg1 = new Integer(1239);
kvp _kvp = new kvp((Object) null, arg1);
kvp arg0 = new kvp("", arg1);
arg0.value = (-1);
int compareTo = _kvp.compareTo(arg0);
assertEquals(1, compareTo);


** It was a parseable test case! 
refined test name is: testCompareToWithDifferentKeysAndValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg1 = new Integer(1239);
kvp arg0 = new kvp((Object) null, arg1);
int compareTo = arg0.compareTo(arg0);
assertEquals(0, compareTo);


** It was a parseable test case! 
refined test name is: testCompareToNullKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:46:23.130 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6739118186982927169.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:46:23.177 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6739118186982927169.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:46:23.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6739118186982927169.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:46:23.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6739118186982927169.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:46:23.559 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6739118186982927169.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:46:23.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6739118186982927169.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
[MASTER] 17:46:23.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6739118186982927169.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:46:23.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6739118186982927169.jar
* Writing tests to file
* Writing JUnit test case 'kvp_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
[MASTER] 17:46:23.926 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6739118186982927169.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:46:23.928 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6739118186982927169.jar
* Done!

* Computation finished
