/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 09:35:13 GMT 2024
 */


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Convert_ESTest extends Convert_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesConvertTaking3Arguments() throws Throwable  {
      // rollbacked to evosuite
      Convert convert = new Convert("dvd-ntsc", "dvd-pal", (GUI) null);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testInitThrowsNullPointerException() throws Throwable  {
      // Given: A Convert instance with a non-null input and null GUI
      Convert convert = new Convert("wx7&K=_:BR'kH+cM", "wx7&K=_:BR'kH+cM", (GUI) null);
      
      // When: The init() method is called
      try {
      convert.init();
      
      // Then: A NullPointerException should be thrown
      fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      // no message in exception (getMessage() returned null)
      verifyException("Convert", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMatrixThrowsNullPointerException() throws Throwable  {
      // Given: A Convert object with a null source format and destination format
      Convert convert = new Convert(380, "dvd-ntsc", "dvd-ntsc", (GUI) null);
      
      // When: The matrix method is called with the null source format
      try {
      convert.matrix();
      
      // Then: An exception should be thrown
      fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      // Verify that the correct exception is thrown
      verifyException("Convert", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRunThrowsNullPointerException() throws Throwable  {
      Convert convert = new Convert((-2836), "Wy!", "Wy!", (GUI) null);
      try {
      convert.run();
      fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      // The convert method is expecting a non-null GUI argument, but a null value was passed in.
      // This should result in a NullPointerException being thrown.
      verifyException("Convert", e);}
  }
}
