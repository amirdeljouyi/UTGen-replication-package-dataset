/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 11 16:21:22 GMT 2024
 */

package dsachat.server;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import dsachat.server.Handler;
import dsachat.share.ConnectionEndpoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Handler_ESTest extends Handler_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRemoveConnectionThrowsNullPointerException() throws Throwable  {
      Handler handler = new Handler();
      // Given: We have a Handler object and a null ConnectionEndpoint
      ConnectionEndpoint connectionEndpoint = null;
      handler.addConnection(connectionEndpoint);
      // When: We attempt to remove the null ConnectionEndpoint from the Handler
      try {
      handler.removeConnection(connectionEndpoint);
      // Then: We expect a NullPointerException to be thrown
      fail("Expecting exception: NullPointerException");
      } catch (NullPointerException e) {
      // Verify that the expected exception was thrown with the correct message
      verifyException("dsachat.server.Handler", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testRemoveConnection() throws Throwable  {
      // rollbacked to evosuite
      Handler handler = new Handler();
      handler.removeConnection((ConnectionEndpoint) null);
  }
}
