/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 10:24:11 GMT 2024
 */


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Scanner_Original_ESTest extends Scanner_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testAdvScanning() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("Zx,");
      FileSystemHandling.appendLineToFile(arg0, "=");
      Scanner scanner = new Scanner("Zx,");
      ArrayList advScanning = scanner.advScanning(scanner.lexems);
      assertEquals(1, advScanning.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateScannerThrowsIndexOutOfBoundsException() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("g");
      FileSystemHandling.appendLineToFile(arg0, "<=");
      Scanner scanner = null;
      try {
        scanner = new Scanner("g");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner0() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      byte[] arg1 = new byte[4];
      arg1[0] = (byte)13;
      FileSystemHandling.appendDataToFile(arg0, arg1);
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner1() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      byte[] arg1 = new byte[4];
      arg1[0] = (byte)9;
      FileSystemHandling.appendDataToFile(arg0, arg1);
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner2() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      FileSystemHandling.appendStringToFile(arg0, "END.");
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner3() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      FileSystemHandling.appendLineToFile(arg0, "ED.");
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner4() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      byte[] arg1 = new byte[2];
      arg1[0] = (byte)46;
      FileSystemHandling.appendDataToFile(arg0, arg1);
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner5() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      FileSystemHandling.appendStringToFile(arg0, "9.0]LX3h^Es%T6<");
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner6() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("Zx,");
      FileSystemHandling.appendStringToFile(arg0, "\"0");
      FileSystemHandling.appendLineToFile(arg0, "\"0");
      Scanner scanner = new Scanner("Zx,");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner7() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("Zx,");
      FileSystemHandling.appendStringToFile(arg0, "\"0");
      Scanner scanner = new Scanner("Zx,");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner8() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      FileSystemHandling.appendStringToFile(arg0, "PROGRAM");
      Scanner scanner = new Scanner("-");
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesScanner9() throws Throwable  {
      EvoSuiteFile arg0 = new EvoSuiteFile("-");
      FileSystemHandling.appendLineToFile(arg0, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1");
      Scanner scanner = new Scanner("-");
  }
}
