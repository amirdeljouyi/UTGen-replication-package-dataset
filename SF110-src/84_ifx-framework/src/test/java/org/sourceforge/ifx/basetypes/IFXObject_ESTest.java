/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 14 21:48:41 GMT 2024
 */

package org.sourceforge.ifx.basetypes;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sourceforge.ifx.basetypes.IFXDate;
import org.sourceforge.ifx.basetypes.IFXHexBinary;
import org.sourceforge.ifx.basetypes.IFXObject;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IFXObject_ESTest extends IFXObject_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesIFXObjectAndCallsEquals0() throws Throwable  {
      // Given: Two instances of different classes with the same name but different packages
      IFXDate arg0 = new IFXDate(); // Class A
      IFXObject iFXObject = new IFXObject(); // Class B
      
      // When: We call the equals() method on instance A with an argument from class B
      boolean equals = iFXObject.equals(arg0);
      
      // Then: The result of the method should be false, as the two classes are not equal
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testToString0() throws Throwable  {
      // Given an IFXHexBinary object with an empty string as input
      IFXHexBinary iFXHexBinary = new IFXHexBinary();
      iFXHexBinary.setString("");
      
      // When the toString() method is called on the object
      String string = iFXHexBinary.toString();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testToString1() throws Throwable  {
      // No Comments were added
      IFXHexBinary iFXHexBinary = new IFXHexBinary();
      iFXHexBinary.setString(" ");
      String string = iFXHexBinary.toString();
      assertEquals("org.sourceforge.ifx.basetypes.IFXHexBinary = {\n  Bytes = [\n    [0]:Exception! java.lang.ClassCastException: java.lang.Byte cannot be cast to org.sourceforge.ifx.basetypes.IFXObject\n  }", string);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesIFXObjectAndCallsToString() throws Throwable  {
      // Given a new IFXObject instance
      IFXObject iFXObject = new IFXObject();
      
      // When the toString method is called on the object
      String string = iFXObject.toString();
      
      // Then it should return a string in the expected format
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesIFXObjectAndCallsEquals1() throws Throwable  {
      // Given
      IFXObject iFXObject = new IFXObject();
      Object arg0 = new Object();
      
      // When
      boolean equals = iFXObject.equals(arg0);
      
      // Then
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEqualsReturningTrue() throws Throwable  {
      // Given: we have two instances of the same object
      IFXObject firstObj = new IFXObject();
      IFXObject secondObj = new IFXObject();
      
      // When: we compare them using the equals method
      boolean result = firstObj.equals(secondObj);
      
      // Then: the objects are considered equal
      assertTrue(result);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testToString2() throws Throwable  {
      // Given an instance of IFXHexBinary with a null value for the bytes field,
      IFXHexBinary iFXHexBinary = new IFXHexBinary();
      
      // When the toString method is called on this instance,
      String string = iFXHexBinary.toString();
      
      // Then the returned string should include an exception message indicating that an error occurred during the conversion process.
  }
}
